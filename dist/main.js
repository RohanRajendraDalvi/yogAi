/*! For license information please see main.js.LICENSE.txt */
(()=>{var e,t,n,s,r,a={264:function(e,t,n){(function(){"use strict";var e;function t(e){var t=0;return function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}}var s="function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,n){return e==Array.prototype||e==Object.prototype||(e[t]=n.value),e},r=function(e){e=["object"==typeof globalThis&&globalThis,e,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof n.g&&n.g];for(var t=0;t<e.length;++t){var s=e[t];if(s&&s.Math==Math)return s}throw Error("Cannot find global object")}(this);function a(e,t){if(t)e:{var n=r;e=e.split(".");for(var a=0;a<e.length-1;a++){var i=e[a];if(!(i in n))break e;n=n[i]}(t=t(a=n[e=e[e.length-1]]))!=a&&null!=t&&s(n,e,{configurable:!0,writable:!0,value:t})}}function i(e){return(e={next:e})[Symbol.iterator]=function(){return this},e}function o(e){var n="undefined"!=typeof Symbol&&Symbol.iterator&&e[Symbol.iterator];return n?n.call(e):{next:t(e)}}function u(e){if(!(e instanceof Array)){e=o(e);for(var t,n=[];!(t=e.next()).done;)n.push(t.value);e=n}return e}a("Symbol",(function(e){function t(e,t){this.g=e,s(this,"description",{configurable:!0,writable:!0,value:t})}if(e)return e;t.prototype.toString=function(){return this.g};var n="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",r=0;return function e(s){if(this instanceof e)throw new TypeError("Symbol is not a constructor");return new t(n+(s||"")+"_"+r++,s)}})),a("Symbol.iterator",(function(e){if(e)return e;e=Symbol("Symbol.iterator");for(var n="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),a=0;a<n.length;a++){var o=r[n[a]];"function"==typeof o&&"function"!=typeof o.prototype[e]&&s(o.prototype,e,{configurable:!0,writable:!0,value:function(){return i(t(this))}})}return e}));var l,c="function"==typeof Object.create?Object.create:function(e){function t(){}return t.prototype=e,new t};if("function"==typeof Object.setPrototypeOf)l=Object.setPrototypeOf;else{var h;e:{var p={};try{p.__proto__={a:!0},h=p.a;break e}catch(e){}h=!1}l=h?function(e,t){if(e.__proto__=t,e.__proto__!==t)throw new TypeError(e+" is not extensible");return e}:null}var d=l;function f(e,t){if(e.prototype=c(t.prototype),e.prototype.constructor=e,d)d(e,t);else for(var n in t)if("prototype"!=n)if(Object.defineProperties){var s=Object.getOwnPropertyDescriptor(t,n);s&&Object.defineProperty(e,n,s)}else e[n]=t[n];e.ca=t.prototype}function m(){this.l=!1,this.i=null,this.h=void 0,this.g=1,this.s=this.m=0,this.j=null}function g(e){if(e.l)throw new TypeError("Generator is already running");e.l=!0}function y(e,t){e.j={S:t,T:!0},e.g=e.m||e.s}function b(e,t,n){return e.g=n,{value:t}}function x(e){this.g=new m,this.h=e}function v(e,t,n,s){try{var r=t.call(e.g.i,n);if(!(r instanceof Object))throw new TypeError("Iterator result "+r+" is not an object");if(!r.done)return e.g.l=!1,r;var a=r.value}catch(t){return e.g.i=null,y(e.g,t),w(e)}return e.g.i=null,s.call(e.g,a),w(e)}function w(e){for(;e.g.g;)try{var t=e.h(e.g);if(t)return e.g.l=!1,{value:t.value,done:!1}}catch(t){e.g.h=void 0,y(e.g,t)}if(e.g.l=!1,e.g.j){if(t=e.g.j,e.g.j=null,t.T)throw t.S;return{value:t.return,done:!0}}return{value:void 0,done:!0}}function k(e){this.next=function(t){return g(e.g),e.g.i?t=v(e,e.g.i.next,t,e.g.o):(e.g.o(t),t=w(e)),t},this.throw=function(t){return g(e.g),e.g.i?t=v(e,e.g.i.throw,t,e.g.o):(y(e.g,t),t=w(e)),t},this.return=function(t){return function(e,t){g(e.g);var n=e.g.i;return n?v(e,"return"in n?n.return:function(e){return{value:e,done:!0}},t,e.g.return):(e.g.return(t),w(e))}(e,t)},this[Symbol.iterator]=function(){return this}}function I(e,t){return t=new k(new x(t)),d&&e.prototype&&d(t,e.prototype),t}m.prototype.o=function(e){this.h=e},m.prototype.return=function(e){this.j={return:e},this.g=this.s};var S="function"==typeof Object.assign?Object.assign:function(e,t){for(var n=1;n<arguments.length;n++){var s=arguments[n];if(s)for(var r in s)Object.prototype.hasOwnProperty.call(s,r)&&(e[r]=s[r])}return e};a("Object.assign",(function(e){return e||S})),a("Promise",(function(e){function t(e){this.h=0,this.i=void 0,this.g=[],this.o=!1;var t=this.j();try{e(t.resolve,t.reject)}catch(e){t.reject(e)}}function n(){this.g=null}function s(e){return e instanceof t?e:new t((function(t){t(e)}))}if(e)return e;n.prototype.h=function(e){if(null==this.g){this.g=[];var t=this;this.i((function(){t.l()}))}this.g.push(e)};var a=r.setTimeout;n.prototype.i=function(e){a(e,0)},n.prototype.l=function(){for(;this.g&&this.g.length;){var e=this.g;this.g=[];for(var t=0;t<e.length;++t){var n=e[t];e[t]=null;try{n()}catch(e){this.j(e)}}}this.g=null},n.prototype.j=function(e){this.i((function(){throw e}))},t.prototype.j=function(){function e(e){return function(s){n||(n=!0,e.call(t,s))}}var t=this,n=!1;return{resolve:e(this.B),reject:e(this.l)}},t.prototype.B=function(e){if(e===this)this.l(new TypeError("A Promise cannot resolve to itself"));else if(e instanceof t)this.D(e);else{e:switch(typeof e){case"object":var n=null!=e;break e;case"function":n=!0;break e;default:n=!1}n?this.u(e):this.m(e)}},t.prototype.u=function(e){var t=void 0;try{t=e.then}catch(e){return void this.l(e)}"function"==typeof t?this.F(t,e):this.m(e)},t.prototype.l=function(e){this.s(2,e)},t.prototype.m=function(e){this.s(1,e)},t.prototype.s=function(e,t){if(0!=this.h)throw Error("Cannot settle("+e+", "+t+"): Promise already settled in state"+this.h);this.h=e,this.i=t,2===this.h&&this.C(),this.v()},t.prototype.C=function(){var e=this;a((function(){if(e.A()){var t=r.console;void 0!==t&&t.error(e.i)}}),1)},t.prototype.A=function(){if(this.o)return!1;var e=r.CustomEvent,t=r.Event,n=r.dispatchEvent;return void 0===n||("function"==typeof e?e=new e("unhandledrejection",{cancelable:!0}):"function"==typeof t?e=new t("unhandledrejection",{cancelable:!0}):(e=r.document.createEvent("CustomEvent")).initCustomEvent("unhandledrejection",!1,!0,e),e.promise=this,e.reason=this.i,n(e))},t.prototype.v=function(){if(null!=this.g){for(var e=0;e<this.g.length;++e)i.h(this.g[e]);this.g=null}};var i=new n;return t.prototype.D=function(e){var t=this.j();e.I(t.resolve,t.reject)},t.prototype.F=function(e,t){var n=this.j();try{e.call(t,n.resolve,n.reject)}catch(e){n.reject(e)}},t.prototype.then=function(e,n){function s(e,t){return"function"==typeof e?function(t){try{r(e(t))}catch(e){a(e)}}:t}var r,a,i=new t((function(e,t){r=e,a=t}));return this.I(s(e,r),s(n,a)),i},t.prototype.catch=function(e){return this.then(void 0,e)},t.prototype.I=function(e,t){function n(){switch(s.h){case 1:e(s.i);break;case 2:t(s.i);break;default:throw Error("Unexpected state: "+s.h)}}var s=this;null==this.g?i.h(n):this.g.push(n),this.o=!0},t.resolve=s,t.reject=function(e){return new t((function(t,n){n(e)}))},t.race=function(e){return new t((function(t,n){for(var r=o(e),a=r.next();!a.done;a=r.next())s(a.value).I(t,n)}))},t.all=function(e){var n=o(e),r=n.next();return r.done?s([]):new t((function(e,t){function a(t){return function(n){i[t]=n,0==--o&&e(i)}}var i=[],o=0;do{i.push(void 0),o++,s(r.value).I(a(i.length-1),t),r=n.next()}while(!r.done)}))},t})),a("Object.is",(function(e){return e||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}})),a("Array.prototype.includes",(function(e){return e||function(e,t){var n=this;n instanceof String&&(n=String(n));var s=n.length;for(0>(t=t||0)&&(t=Math.max(t+s,0));t<s;t++){var r=n[t];if(r===e||Object.is(r,e))return!0}return!1}})),a("String.prototype.includes",(function(e){return e||function(e,t){if(null==this)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(e instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return-1!==this.indexOf(e,t||0)}})),a("Array.prototype.keys",(function(e){return e||function(){return function(e,t){e instanceof String&&(e+="");var n=0,s=!1,r={next:function(){if(!s&&n<e.length){var r=n++;return{value:t(r,e[r]),done:!1}}return s=!0,{done:!0,value:void 0}}};return r[Symbol.iterator]=function(){return r},r}(this,(function(e){return e}))}}));var N=this||self;function T(e,t){e=e.split(".");var n,s=N;e[0]in s||void 0===s.execScript||s.execScript("var "+e[0]);for(;e.length&&(n=e.shift());)e.length||void 0===t?s=s[n]&&s[n]!==Object.prototype[n]?s[n]:s[n]={}:s[n]=t}function C(e,t){return t=String.fromCharCode.apply(null,t),null==e?t:e+t}var $,E,A="undefined"!=typeof TextDecoder,D="undefined"!=typeof TextEncoder;function R(e){if(D)e=(E||(E=new TextEncoder)).encode(e);else{var t=void 0;t=void 0!==t&&t;for(var n=0,s=new Uint8Array(3*e.length),r=0;r<e.length;r++){var a=e.charCodeAt(r);if(128>a)s[n++]=a;else{if(2048>a)s[n++]=a>>6|192;else{if(55296<=a&&57343>=a){if(56319>=a&&r<e.length){var i=e.charCodeAt(++r);if(56320<=i&&57343>=i){a=1024*(a-55296)+i-56320+65536,s[n++]=a>>18|240,s[n++]=a>>12&63|128,s[n++]=a>>6&63|128,s[n++]=63&a|128;continue}r--}if(t)throw Error("Found an unpaired surrogate");a=65533}s[n++]=a>>12|224,s[n++]=a>>6&63|128}s[n++]=63&a|128}}e=s.subarray(0,n)}return e}var _="function"==typeof Uint8Array.prototype.slice,F=0;function O(e){this.h=null,this.g=this.i=this.j=0,this.l=!1,e&&M(this,e)}function M(e,t){t=t.constructor===Uint8Array?t:t.constructor===ArrayBuffer||t.constructor===Array?new Uint8Array(t):t.constructor===String?function(e){var t=e.length,n=3*t/4;n%3?n=Math.floor(n):-1!="=.".indexOf(e[t-1])&&(n=-1!="=.".indexOf(e[t-2])?n-2:n-1);var s=new Uint8Array(n),r=0;return function(e,t){function n(t){for(;s<e.length;){var n=e.charAt(s++),r=q[n];if(null!=r)return r;if(!/^[\s\xa0]*$/.test(n))throw Error("Unknown base64 encoding at char: "+n)}return t}K();for(var s=0;;){var r=n(-1),a=n(0),i=n(64),o=n(64);if(64===o&&-1===r)break;t(r<<2|a>>4),64!=i&&(t(a<<4&240|i>>2),64!=o&&t(i<<6&192|o))}}(e,(function(e){s[r++]=e})),s.subarray(0,r)}(t):t instanceof Uint8Array?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):new Uint8Array(0),e.h=t,e.j=0,e.i=e.h.length,e.g=e.j}function L(e){var t=e.h,n=t[e.g],s=127&n;return 128>n?(e.g+=1,s):(s|=(127&(n=t[e.g+1]))<<7,128>n?(e.g+=2,s):(s|=(127&(n=t[e.g+2]))<<14,128>n?(e.g+=3,s):(s|=(127&(n=t[e.g+3]))<<21,128>n?(e.g+=4,s):(s|=(15&(n=t[e.g+4]))<<28,128>n?(e.g+=5,s>>>0):(e.g+=5,128<=t[e.g++]&&128<=t[e.g++]&&128<=t[e.g++]&&128<=t[e.g++]&&e.g++,s)))))}function z(e){var t=e.h[e.g],n=e.h[e.g+1],s=e.h[e.g+2],r=e.h[e.g+3];return e.g+=4,e=2*((n=(t<<0|n<<8|s<<16|r<<24)>>>0)>>31)+1,t=n>>>23&255,n&=8388607,255==t?n?NaN:1/0*e:0==t?e*Math.pow(2,-149)*n:e*Math.pow(2,t-150)*(n+Math.pow(2,23))}O.prototype.reset=function(){this.g=this.j};var B=[];function P(){this.g=new Uint8Array(64),this.h=0}function U(e,t){for(;127<t;)e.push(127&t|128),t>>>=7;e.push(t)}function W(e){if(B.length){var t=B.pop();e&&M(t,e),e=t}else e=new O(e);this.g=e,this.h=this.i=this.l=-1,this.j=!1}function V(e){var t=e.g;if((t=t.g==t.i)||(t=e.j)||(t=(t=e.g).l||0>t.g||t.g>t.i),t)return!1;var n=7&(t=L(e.g));return 0!=n&&5!=n&&1!=n&&2!=n&&3!=n&&4!=n?(e.j=!0,!1):(e.i=t,e.l=t>>>3,e.h=n,!0)}function H(e){switch(e.h){case 0:if(0!=e.h)H(e);else{for(e=e.g;128&e.h[e.g];)e.g++;e.g++}break;case 1:1!=e.h?H(e):(e=e.g).g+=8;break;case 2:if(2!=e.h)H(e);else{var t=L(e.g);(e=e.g).g+=t}break;case 5:5!=e.h?H(e):(e=e.g).g+=4;break;case 3:for(t=e.l;;){if(!V(e)){e.j=!0;break}if(4==e.h){e.l!=t&&(e.j=!0);break}H(e)}break;default:e.j=!0}}function G(e,t,n){var s=e.g.i,r=L(e.g);return r=e.g.g+r,e.g.i=r,n(t,e),e.g.g=r,e.g.i=s,t}function j(e){var t,n=L(e.g),s=(e=e.g).g;if(e.g+=n,e=e.h,A)(t=$)||(t=$=new TextDecoder("utf-8",{fatal:!1})),t=t.decode(e.subarray(s,s+n));else{n=s+n;for(var r,a,i,o=[],u=null;s<n;)128>(r=e[s++])?o.push(r):224>r?s>=n?o.push(65533):(a=e[s++],194>r||128!=(192&a)?(s--,o.push(65533)):o.push((31&r)<<6|63&a)):240>r?s>=n-1?o.push(65533):128!=(192&(a=e[s++]))||224===r&&160>a||237===r&&160<=a||128!=(192&(t=e[s++]))?(s--,o.push(65533)):o.push((15&r)<<12|(63&a)<<6|63&t):244>=r?s>=n-2?o.push(65533):128!=(192&(a=e[s++]))||0!=a-144+(r<<28)>>30||128!=(192&(t=e[s++]))||128!=(192&(i=e[s++]))?(s--,o.push(65533)):(r=(7&r)<<18|(63&a)<<12|(63&t)<<6|63&i,r-=65536,o.push(55296+(r>>10&1023),56320+(1023&r))):o.push(65533),8192<=o.length&&(u=C(u,o),o.length=0);t=C(u,o)}return t}P.prototype.push=function(e){if(!(this.h+1<this.g.length)){var t=this.g;this.g=new Uint8Array(Math.ceil(1+2*this.g.length)),this.g.set(t)}this.g[this.h++]=e},P.prototype.length=function(){return this.h},P.prototype.end=function(){var e=this.g,t=this.h;return this.h=0,_?e.slice(0,t):new Uint8Array(e.subarray(0,t))},W.prototype.reset=function(){this.g.reset(),this.h=this.l=-1};var X={},q=null;function K(){if(!q){q={};for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),t=["+/=","+/","-_=","-_.","-_"],n=0;5>n;n++){var s=e.concat(t[n].split(""));X[n]=s;for(var r=0;r<s.length;r++){var a=s[r];void 0===q[a]&&(q[a]=r)}}}}function Y(){this.h=[],this.i=0,this.g=new P}function Q(e){var t=e.i+e.g.length();if(0===t)return new Uint8Array(0);t=new Uint8Array(t);for(var n=e.h,s=n.length,r=0,a=0;a<s;a++){var i=n[a];0!==i.length&&(t.set(i,r),r+=i.length)}return 0!==(s=(n=e.g).h)&&(t.set(n.g.subarray(0,s),r),n.h=0),e.h=[t],t}function J(e,t,n){if(null!=n){U(e.g,8*t+5),e=e.g;var s=n;0===(s=(n=0>s?1:0)?-s:s)?F=0<1/s?0:2147483648:isNaN(s)?F=2147483647:34028234663852886e22<s?F=(n<<31|2139095040)>>>0:11754943508222875e-54>s?(s=Math.round(s/Math.pow(2,-149)),F=(n<<31|s)>>>0):(t=Math.floor(Math.log(s)/Math.LN2),s*=Math.pow(2,-t),s=8388607&Math.round(8388608*s),F=(n<<31|t+127<<23|s)>>>0),n=F,e.push(n>>>0&255),e.push(n>>>8&255),e.push(n>>>16&255),e.push(n>>>24&255)}}function Z(e,t,n){U(e.g,8*t+2),U(e.g,n.length),t=e.g.end(),e.h.push(t),e.h.push(n),e.i+=t.length+n.length}var ee="function"==typeof Uint8Array;function te(e,t,n){return"object"==typeof e?ee&&!Array.isArray(e)&&e instanceof Uint8Array?n(e):ne(e,t,n):t(e)}function ne(e,t,n){if(Array.isArray(e)){for(var s=Array(e.length),r=0;r<e.length;r++){var a=e[r];null!=a&&(s[r]=te(a,t,n))}return Array.isArray(e)&&e.U&&ae(s),s}for(r in s={},e)null!=(a=e[r])&&(s[r]=te(a,t,n));return s}var se,re={U:{value:!0,configurable:!0}};function ae(e){return Array.isArray(e)&&!Object.isFrozen(e)&&Object.defineProperties(e,re),e}function ie(e,t,n){var s=se;if(se=null,e||(e=s),s=this.constructor.aa,e||(e=s?[s]:[]),this.j=s?0:-1,this.i=null,this.g=e,e=(s=this.g.length)-1,!s||null===(s=this.g[e])||"object"!=typeof s||Array.isArray(s)||ee&&s instanceof Uint8Array?void 0!==t&&-1<t?(this.l=Math.max(t,e+1-this.j),this.h=null):this.l=Number.MAX_VALUE:(this.l=e-this.j,this.h=s),n)for(t=0;t<n.length;t++)(e=n[t])<this.l?(e+=this.j,(s=this.g[e])?ae(s):this.g[e]=oe):(ue(this),(s=this.h[e])?ae(s):this.h[e]=oe)}var oe=Object.freeze(ae([]));function ue(e){var t=e.l+e.j;e.g[t]||(e.h=e.g[t]={})}function le(e,t){if(-1===t)return null;if(t<e.l){t+=e.j;var n=e.g[t];return n!==oe?n:e.g[t]=ae([])}return e.h?(n=e.h[t])!==oe?n:e.h[t]=ae([]):void 0}function ce(e,t,n){return n=void 0===n?0:n,null==(e=null==(e=le(e,t))?e:+e)?n:e}function he(e,t,n){t<e.l?e.g[t+e.j]=n:(ue(e),e.h[t]=n)}function pe(e,t){if(e.i||(e.i={}),!e.i[1]){for(var n=le(e,1),s=[],r=0;r<n.length;r++)s[r]=new t(n[r]);e.i[1]=s}return e.i[1]}function de(e,t,n,s){var r=pe(e,n);return t=t||new n,e=le(e,1),null!=s?(r.splice(s,0,t),e.splice(s,0,fe(t,!1))):(r.push(t),e.push(fe(t,!1))),t}function fe(e,t){if(e.i)for(var n in e.i){var s=e.i[n];if(Array.isArray(s))for(var r=0;r<s.length;r++)s[r]&&fe(s[r],t);else s&&fe(s,t)}return e.g}function me(e,t){return null==(e=le(e,t))?0:e}function ge(e,t){return null==(e=le(e,t))?"":e}function ye(e){return 4!=e.h&&(H(e),!0)}function be(e,t){var n=void 0;return new(n||(n=Promise))((function(s,r){function a(e){try{o(t.next(e))}catch(e){r(e)}}function i(e){try{o(t.throw(e))}catch(e){r(e)}}function o(e){e.done?s(e.value):new n((function(t){t(e.value)})).then(a,i)}o((t=t.apply(e,void 0)).next())}))}function xe(e){ie.call(this,e)}function ve(e,t){for(;V(t);)switch(t.i){case 8:var n=L(t.g);he(e,1,n);break;case 21:he(e,2,n=z(t.g));break;case 26:he(e,3,n=j(t));break;case 34:he(e,4,n=j(t));break;default:if(!ye(t))return e}return e}function we(e){ie.call(this,e,-1,ke)}ie.prototype.toJSON=function(){return ne(fe(this,!1),(function(e){return"number"==typeof e?isFinite(e)?e:String(e):e}),(function(e){var t;void 0===t&&(t=0),K(),t=X[t];for(var n=Array(Math.floor(e.length/3)),s=t[64]||"",r=0,a=0;r<e.length-2;r+=3){var i=e[r],o=e[r+1],u=e[r+2],l=t[i>>2];i=t[(3&i)<<4|o>>4],o=t[(15&o)<<2|u>>6],u=t[63&u],n[a++]=l+i+o+u}switch(l=0,u=s,e.length-r){case 2:u=t[(15&(l=e[r+1]))<<2]||s;case 1:e=e[r],n[a]=t[e>>2]+t[(3&e)<<4|l>>4]+u+s}return n.join("")}))},ie.prototype.toString=function(){return fe(this,!1).toString()},f(xe,ie),f(we,ie),we.prototype.addClassification=function(e,t){return de(this,e,xe,t)};var ke=[1];function Ie(e){ie.call(this,e)}function Se(e,t){for(;V(t);)switch(t.i){case 13:var n=z(t.g);he(e,1,n);break;case 21:he(e,2,n=z(t.g));break;case 29:he(e,3,n=z(t.g));break;case 37:he(e,4,n=z(t.g));break;case 45:he(e,5,n=z(t.g));break;default:if(!ye(t))return e}return e}function Ne(e){ie.call(this,e,-1,Te)}f(Ie,ie),f(Ne,ie);var Te=[1];function Ce(e){ie.call(this,e)}function $e(e,t,n){if(n=e.createShader(0===n?e.VERTEX_SHADER:e.FRAGMENT_SHADER),e.shaderSource(n,t),e.compileShader(n),!e.getShaderParameter(n,e.COMPILE_STATUS))throw Error("Could not compile WebGL shader.\n\n"+e.getShaderInfoLog(n));return n}function Ee(e){return pe(e,xe).map((function(e){return{index:me(e,1),W:ce(e,2),label:null!=le(e,3)?ge(e,3):void 0,displayName:null!=le(e,4)?ge(e,4):void 0}}))}function Ae(e){return{x:ce(e,1),y:ce(e,2),z:ce(e,3),visibility:null!=le(e,4)?ce(e,4):void 0}}function De(e){e:{var t=new Ne;for(e=new W(e);V(e);)if(10===e.i)de(t,G(e,new Ie,Se),Ie,void 0);else if(!ye(e))break e}return pe(t,Ie).map(Ae)}function Re(e,t){this.h=e,this.g=t,this.l=0}function _e(e,t,n){return function(e,t){var n=e.g;if(void 0===e.m){var s=$e(n,"\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }",0),r=$e(n,"\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D sampler0;\n  void main(){\n    gl_FragColor = texture2D(sampler0, vTex);\n  }",1),a=n.createProgram();if(n.attachShader(a,s),n.attachShader(a,r),n.linkProgram(a),!n.getProgramParameter(a,n.LINK_STATUS))throw Error("Could not compile WebGL program.\n\n"+n.getProgramInfoLog(a));s=e.m=a,n.useProgram(s),r=n.getUniformLocation(s,"sampler0"),e.j={H:n.getAttribLocation(s,"aVertex"),G:n.getAttribLocation(s,"aTex"),ba:r},e.s=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.s),n.enableVertexAttribArray(e.j.H),n.vertexAttribPointer(e.j.H,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),e.o=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.o),n.enableVertexAttribArray(e.j.G),n.vertexAttribPointer(e.j.G,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),n.uniform1i(r,0)}s=e.j,n.useProgram(e.m),n.canvas.width=t.width,n.canvas.height=t.height,n.viewport(0,0,t.width,t.height),n.activeTexture(n.TEXTURE0),e.h.bindTexture2d(t.glName),n.enableVertexAttribArray(s.H),n.bindBuffer(n.ARRAY_BUFFER,e.s),n.vertexAttribPointer(s.H,2,n.FLOAT,!1,0,0),n.enableVertexAttribArray(s.G),n.bindBuffer(n.ARRAY_BUFFER,e.o),n.vertexAttribPointer(s.G,2,n.FLOAT,!1,0,0),n.bindFramebuffer(n.DRAW_FRAMEBUFFER?n.DRAW_FRAMEBUFFER:n.FRAMEBUFFER,null),n.clearColor(0,0,0,0),n.clear(n.COLOR_BUFFER_BIT),n.colorMask(!0,!0,!0,!0),n.drawArrays(n.TRIANGLE_FAN,0,4),n.disableVertexAttribArray(s.H),n.disableVertexAttribArray(s.G),n.bindBuffer(n.ARRAY_BUFFER,null),e.h.bindTexture2d(0)}(e,t),"function"==typeof e.g.canvas.transferToImageBitmap?Promise.resolve(e.g.canvas.transferToImageBitmap()):n?Promise.resolve(e.g.canvas):"function"==typeof createImageBitmap?createImageBitmap(e.g.canvas):(void 0===e.i&&(e.i=document.createElement("canvas")),new Promise((function(t){e.i.height=e.g.canvas.height,e.i.width=e.g.canvas.width,e.i.getContext("2d",{}).drawImage(e.g.canvas,0,0,e.g.canvas.width,e.g.canvas.height),t(e.i)})))}function Fe(e){this.g=e}f(Ce,ie);var Oe=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function Me(e,t){return t+e}function Le(e,t){window[e]=t}function ze(e){if(this.g=e,this.listeners={},this.j={},this.D={},this.m={},this.s={},this.F=this.o=this.O=!0,this.B=Promise.resolve(),this.N="",this.A={},this.locateFile=e&&e.locateFile||Me,"object"==typeof window)var t=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else{if("undefined"==typeof location)throw Error("solutions can only be loaded on a web page or in a web worker");t=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/"}if(this.P=t,e.options)for(var n=(t=o(Object.keys(e.options))).next();!n.done;n=t.next()){n=n.value;var s=e.options[n].default;void 0!==s&&(this.j[n]="function"==typeof s?s():s)}}function Be(e,t){return be(e,(function e(){var n,s,r=this;return I(e,(function(e){return t in r.D?e.return(r.D[t]):(n=r.locateFile(t,""),s=fetch(n).then((function(e){return e.arrayBuffer()})),r.D[t]=s,e.return(s))}))}))}function Pe(e,t){for(var n=t.name||"$",s=[].concat(u(t.wants)),r=new e.h.StringList,a=o(t.wants),i=a.next();!i.done;i=a.next())r.push_back(i.value);a=e.h.PacketListener.implement({onResults:function(r){for(var a={},i=0;i<t.wants.length;++i)a[s[i]]=r.get(i);var u=e.listeners[n];u&&(e.B=function(e,t,n){return be(e,(function e(){var s,r,a,i,u,l,c,h,p,d,f,m,g,y,x=this;return I(e,(function(e){switch(e.g){case 1:if(!n)return e.return(t);for(s={},r=0,a=o(Object.keys(n)),i=a.next();!i.done;i=a.next())u=i.value,"string"!=typeof(l=n[u])&&"texture"===l.type&&void 0!==t[l.stream]&&++r;1<r&&(x.F=!1),c=o(Object.keys(n)),i=c.next();case 2:if(i.done){e.g=4;break}if(h=i.value,"string"==typeof(p=n[h]))return g=s,y=h,b(e,function(e,t,n){return be(e,(function e(){var s,r=this;return I(e,(function(e){return"number"==typeof n||n instanceof Uint8Array||n instanceof r.h.Uint8BlobList?e.return(n):n instanceof r.h.Texture2dDataOut?((s=r.s[t])||(s=new Re(r.h,r.C),r.s[t]=s),e.return(_e(s,n,r.F))):e.return(void 0)}))}))}(x,h,t[p]),13);if(d=t[p.stream],"detection_list"===p.type){if(d){for(var v=d.getRectList(),w=d.getLandmarksList(),k=d.getClassificationsList(),S=[],N=0;N<v.size();++N){var T=v.get(N);e:{var C=new Ce;for(T=new W(T);V(T);)switch(T.i){case 13:var $=z(T.g);he(C,1,$);break;case 21:he(C,2,$=z(T.g));break;case 29:he(C,3,$=z(T.g));break;case 37:he(C,4,$=z(T.g));break;case 45:he(C,5,$=z(T.g));break;case 48:for(var E=T.g,A=128,D=0,R=$=0;4>R&&128<=A;R++)D|=(127&(A=E.h[E.g++]))<<7*R;if(128<=A&&(D|=(127&(A=E.h[E.g++]))<<28,$|=(127&A)>>4),128<=A)for(R=0;5>R&&128<=A;R++)$|=(127&(A=E.h[E.g++]))<<7*R+3;128>A?(E=D>>>0,($=2147483648&(A=$>>>0))&&(A=~A>>>0,0==(E=1+~E>>>0)&&(A=A+1>>>0)),E=4294967296*A+(E>>>0),$=$?-E:E):(E.l=!0,$=void 0),he(C,6,$);break;default:if(!ye(T))break e}}C={X:ce(C,1),Y:ce(C,2),height:ce(C,3),width:ce(C,4),rotation:ce(C,5,0),V:me(C,6)},T=De(w.get(N)),E=k.get(N);e:for($=new we,E=new W(E);V(E);)if(10===E.i)$.addClassification(G(E,new xe,ve));else if(!ye(E))break e;C={R:C,M:T,L:Ee($)},S.push(C)}v=S}else v=[];s[h]=v,e.g=7;break}if("proto_list"===p.type){if(d){for(v=Array(d.size()),w=0;w<d.size();w++)v[w]=d.get(w);d.delete()}else v=[];s[h]=v,e.g=7;break}if(void 0===d){e.g=3;break}if("proto"===p.type){s[h]=d,e.g=7;break}if("texture"!==p.type)throw Error("Unknown output config type: '"+p.type+"'");return(f=x.s[h])||(f=new Re(x.h,x.C),x.s[h]=f),b(e,_e(f,d,x.F),12);case 12:m=e.h,s[h]=m;case 7:p.transform&&s[h]&&(s[h]=p.transform(s[h])),e.g=3;break;case 13:g[y]=e.h;case 3:i=c.next(),e.g=2;break;case 4:return e.return(s)}}))}))}(e,a,t.outs).then((function(n){n=u(n);for(var r=0;r<t.wants.length;++r){var i=a[s[r]];"object"==typeof i&&i.hasOwnProperty&&i.hasOwnProperty("delete")&&i.delete()}n&&(e.B=n)})))}}),e.i.attachMultiListener(r,a),r.delete()}function Ue(e){switch(void 0===e&&(e=0),e){case 1:return"pose_landmark_full.tflite";case 2:return"pose_landmark_heavy.tflite";default:return"pose_landmark_lite.tflite"}}function We(e){var t=this;e=e||{},this.g=new ze({locateFile:e.locateFile,files:function(e){return[{url:"pose_solution_packed_assets_loader.js"},{simd:!1,url:"pose_solution_wasm_bin.js"},{simd:!0,url:"pose_solution_simd_wasm_bin.js"},{data:!0,url:Ue(e.modelComplexity)}]},graph:{url:"pose_web.binarypb"},listeners:[{wants:["pose_landmarks","world_landmarks","segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},poseLandmarks:{type:"proto",stream:"pose_landmarks",transform:De},poseWorldLandmarks:{type:"proto",stream:"world_landmarks",transform:De},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function(e){return be(t,(function t(){var n,s,r,a=this;return I(t,(function(t){return 1==t.g?(n=Ue(e),s="third_party/mediapipe/modules/pose_landmark/"+n,b(t,Be(a.g,n),2)):(r=t.h,a.g.overrideFile(s,r),t.return(!0))}))}))}},smoothLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothLandmarks",fieldName:"bool_value"}},enableSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorEnableSegmentation",fieldName:"bool_value"}},smoothSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothSegmentation",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"poselandmarkgpu__posedetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"poselandmarkgpu__poselandmarkbyroigpu__tensorstoposelandmarksandsegmentation__ThresholdingCalculator",fieldName:"threshold"}}}})}(e=ze.prototype).close=function(){return this.i&&this.i.delete(),Promise.resolve()},e.reset=function(){return be(this,(function e(){var t=this;return I(e,(function(e){t.i&&(t.i.reset(),t.m={},t.s={}),e.g=0}))}))},e.setOptions=function(e,t){var n=this;if(t=t||this.g.options){for(var s=[],r=[],a={},i=o(Object.keys(e)),u=i.next();!u.done;a={J:a.J,K:a.K},u=i.next()){var l=u.value;l in this.j&&this.j[l]===e[l]||(this.j[l]=e[l],void 0!==(u=t[l])&&(u.onChange&&(a.J=u.onChange,a.K=e[l],s.push(function(e){return function(){return be(n,(function t(){var n=this;return I(t,(function(t){if(1==t.g)return b(t,e.J(e.K),2);!0===t.h&&(n.o=!0),t.g=0}))}))}}(a))),u.graphOptionXref&&(l={valueNumber:1===u.type?e[l]:0,valueBoolean:0===u.type&&e[l],valueString:2===u.type?e[l]:""},u=Object.assign(Object.assign(Object.assign({},{calculatorName:"",calculatorIndex:0}),u.graphOptionXref),l),r.push(u))))}0===s.length&&0===r.length||(this.o=!0,this.v=(void 0===this.v?[]:this.v).concat(r),this.u=(void 0===this.u?[]:this.u).concat(s))}},e.initialize=function(){return be(this,(function e(){var t=this;return I(e,(function(e){return 1==e.g?b(e,be(t,(function e(){var t,n,s,r,a,i,o,l,c,h,p,d=this;return I(e,(function(e){switch(e.g){case 1:return t=d,d.O?(n=function(e,t){return void 0===e.g.files?[]:"function"==typeof e.g.files?e.g.files(t):e.g.files}(d,d.j),b(e,function(){return be(this,(function e(){return I(e,(function(e){switch(e.g){case 1:return e.m=2,b(e,WebAssembly.instantiate(Oe),4);case 4:e.g=3,e.m=0;break;case 2:return e.m=0,e.j=null,e.return(!1);case 3:return e.return(!0)}}))}))}(),2)):e.return();case 2:if(s=e.h,"object"==typeof window)return Le("createMediapipeSolutionsWasm",{locateFile:d.locateFile}),Le("createMediapipeSolutionsPackedAssets",{locateFile:d.locateFile}),i=n.filter((function(e){return void 0!==e.data})),o=n.filter((function(e){return void 0===e.data})),l=Promise.all(i.map((function(e){var n=Be(t,e.url);if(void 0!==e.path){var s=e.path;n=n.then((function(e){return t.overrideFile(s,e),Promise.resolve(e)}))}return n}))),c=Promise.all(o.map((function(e){return void 0===e.simd||e.simd&&s||!e.simd&&!s?function(e){var t=document.createElement("script");return t.setAttribute("src",e),t.setAttribute("crossorigin","anonymous"),new Promise((function(e){t.addEventListener("load",(function(){e()}),!1),t.addEventListener("error",(function(){e()}),!1),document.body.appendChild(t)}))}(t.locateFile(e.url,t.P)):Promise.resolve()}))).then((function(){return be(t,(function e(){var t,n,s=this;return I(e,(function(e){if(1==e.g)return t=window.createMediapipeSolutionsWasm,n=window.createMediapipeSolutionsPackedAssets,b(e,t(n),2);s.h=e.h,e.g=0}))}))})),h=be(t,(function e(){var t=this;return I(e,(function(e){return t.g.graph&&t.g.graph.url?e=b(e,Be(t,t.g.graph.url),0):(e.g=0,e=void 0),e}))})),b(e,Promise.all([c,l,h]),7);if("function"!=typeof importScripts)throw Error("solutions can only be loaded on a web page or in a web worker");return r=n.filter((function(e){return void 0===e.simd||e.simd&&s||!e.simd&&!s})).map((function(e){return t.locateFile(e.url,t.P)})),importScripts.apply(null,u(r)),b(e,createMediapipeSolutionsWasm(Module),6);case 6:d.h=e.h,d.l=new OffscreenCanvas(1,1),d.h.canvas=d.l,a=d.h.GL.createContext(d.l,{antialias:!1,alpha:!1,$:"undefined"!=typeof WebGL2RenderingContext?2:1}),d.h.GL.makeContextCurrent(a),e.g=4;break;case 7:if(d.l=document.createElement("canvas"),!(p=d.l.getContext("webgl2",{}))&&!(p=d.l.getContext("webgl",{})))return alert("Failed to create WebGL canvas context when passing video frame."),e.return();d.C=p,d.h.canvas=d.l,d.h.createContext(d.l,!0,!0,{});case 4:d.i=new d.h.SolutionWasm,d.O=!1,e.g=0}}))})),2):3!=e.g?b(e,be(t,(function e(){var t,n,s,r,a,i,u,l,c=this;return I(e,(function(e){if(1==e.g)return c.g.graph&&c.g.graph.url&&c.N===c.g.graph.url?e.return():(c.o=!0,c.g.graph&&c.g.graph.url?(c.N=c.g.graph.url,b(e,Be(c,c.g.graph.url),3)):void(e.g=2));for(2!=e.g&&(t=e.h,c.i.loadGraph(t)),n=o(Object.keys(c.A)),s=n.next();!s.done;s=n.next())r=s.value,c.i.overrideFile(r,c.A[r]);if(c.A={},c.g.listeners)for(a=o(c.g.listeners),i=a.next();!i.done;i=a.next())u=i.value,Pe(c,u);l=c.j,c.j={},c.setOptions(l),e.g=0}))})),3):b(e,function(e){return be(e,(function e(){var t,n,s,r,a,i,u=this;return I(e,(function(e){switch(e.g){case 1:if(!u.o)return e.return();if(!u.u){e.g=2;break}t=o(u.u),n=t.next();case 3:if(n.done){e.g=5;break}return b(e,(0,n.value)(),4);case 4:n=t.next(),e.g=3;break;case 5:u.u=void 0;case 2:if(u.v){for(s=new u.h.GraphOptionChangeRequestList,r=o(u.v),a=r.next();!a.done;a=r.next())i=a.value,s.push_back(i);u.i.changeOptions(s),s.delete(),u.v=void 0}u.o=!1,e.g=0}}))}))}(t),0)}))}))},e.overrideFile=function(e,t){this.i?this.i.overrideFile(e,t):this.A[e]=t},e.clearOverriddenFiles=function(){this.A={},this.i&&this.i.clearOverriddenFiles()},e.send=function(e,t){return be(this,(function n(){var s,r,a,i,u,l,c,h,p,d=this;return I(n,(function(n){switch(n.g){case 1:return d.g.inputs?(s=1e3*(null==t?performance.now():t),b(n,d.B,2)):n.return();case 2:return b(n,d.initialize(),3);case 3:for(r=new d.h.PacketDataList,a=o(Object.keys(e)),i=a.next();!i.done;i=a.next())if(u=i.value,l=d.g.inputs[u]){e:{var f=d,m=e[u];switch(l.type){case"video":var g=f.m[l.stream];if(g||(g=new Re(f.h,f.C),f.m[l.stream]=g),0===(f=g).l&&(f.l=f.h.createTexture()),"undefined"!=typeof HTMLVideoElement&&m instanceof HTMLVideoElement){var y=m.videoWidth;g=m.videoHeight}else"undefined"!=typeof HTMLImageElement&&m instanceof HTMLImageElement?(y=m.naturalWidth,g=m.naturalHeight):(y=m.width,g=m.height);g={glName:f.l,width:y,height:g},(y=f.g).canvas.width=g.width,y.canvas.height=g.height,y.activeTexture(y.TEXTURE0),f.h.bindTexture2d(f.l),y.texImage2D(y.TEXTURE_2D,0,y.RGBA,y.RGBA,y.UNSIGNED_BYTE,m),f.h.bindTexture2d(0),f=g;break e;case"detections":for((g=f.m[l.stream])||(g=new Fe(f.h),f.m[l.stream]=g),(f=g).data||(f.data=new f.g.DetectionListData),f.data.reset(m.length),g=0;g<m.length;++g){y=m[g];var x=f.data,v=x.setBoundingBox,w=g,k=y.R,I=new Ce;he(I,1,k.X),he(I,2,k.Y),he(I,3,k.height),he(I,4,k.width),he(I,5,k.rotation),he(I,6,k.V);var S=I;if(J(I=k=new Y,1,le(S,1)),J(I,2,le(S,2)),J(I,3,le(S,3)),J(I,4,le(S,4)),J(I,5,le(S,5)),null!=(S=le(S,6))&&null!=S){U(I.g,48),I=I.g;var N=S;S=0>N;var T=(N=Math.abs(N))>>>0;for(N=Math.floor((N-T)/4294967296),N>>>=0,S&&(N=~N>>>0,4294967295<(T=1+(~T>>>0))&&(T=0,4294967295<++N&&(N=0))),S=F=T,T=N;0<T||127<S;)I.push(127&S|128),S=(S>>>7|T<<25)>>>0,T>>>=7;I.push(S)}if(k=Q(k),v.call(x,w,k),y.M)for(x=0;x<y.M.length;++x)S=!!(I=y.M[x]).visibility,w=(v=f.data).addNormalizedLandmark,k=g,I=Object.assign(Object.assign({},I),{visibility:S?I.visibility:0}),he(S=new Ie,1,I.x),he(S,2,I.y),he(S,3,I.z),I.visibility&&he(S,4,I.visibility),J(T=I=new Y,1,le(S,1)),J(T,2,le(S,2)),J(T,3,le(S,3)),J(T,4,le(S,4)),J(T,5,le(S,5)),I=Q(I),w.call(v,k,I);if(y.L)for(x=0;x<y.L.length;++x){w=(v=f.data).addClassification,k=g,I=y.L[x],he(S=new xe,2,I.W),I.index&&he(S,1,I.index),I.label&&he(S,3,I.label),I.displayName&&he(S,4,I.displayName),T=S,S=I=new Y;var C=le(T,1);if(null!=C&&null!=C)if(U(S.g,8),N=S.g,0<=C)U(N,C);else{for(var $=0;9>$;$++)N.push(127&C|128),C>>=7;N.push(1)}J(S,2,le(T,2)),null!=(N=le(T,3))&&Z(S,3,R(N)),null!=(T=le(T,4))&&Z(S,4,R(T)),I=Q(I),w.call(v,k,I)}}f=f.data;break e;default:f={}}}switch(c=f,h=l.stream,l.type){case"video":r.pushTexture2d(Object.assign(Object.assign({},c),{stream:h,timestamp:s}));break;case"detections":(p=c).stream=h,p.timestamp=s,r.pushDetectionList(p);break;default:throw Error("Unknown input config type: '"+l.type+"'")}}return d.i.send(r),b(n,d.B,4);case 4:r.delete(),n.g=0}}))}))},e.onResults=function(e,t){this.listeners[t||"$"]=e},T("Solution",ze),T("OptionType",{BOOL:0,NUMBER:1,Z:2,0:"BOOL",1:"NUMBER",2:"STRING"}),(e=We.prototype).reset=function(){this.g.reset()},e.close=function(){return this.g.close(),Promise.resolve()},e.onResults=function(e){this.g.onResults(e)},e.initialize=function(){return be(this,(function e(){var t=this;return I(e,(function(e){return b(e,t.g.initialize(),0)}))}))},e.send=function(e,t){return be(this,(function n(){var s=this;return I(n,(function(n){return b(n,s.g.send(e,t),0)}))}))},e.setOptions=function(e){this.g.setOptions(e)},T("Pose",We),T("POSE_CONNECTIONS",[[0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]]),T("POSE_LANDMARKS",{NOSE:0,LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,LEFT_EAR:7,RIGHT_EAR:8,LEFT_RIGHT:9,RIGHT_LEFT:10,LEFT_SHOULDER:11,RIGHT_SHOULDER:12,LEFT_ELBOW:13,RIGHT_ELBOW:14,LEFT_WRIST:15,RIGHT_WRIST:16,LEFT_PINKY:17,RIGHT_PINKY:18,LEFT_INDEX:19,RIGHT_INDEX:20,LEFT_THUMB:21,RIGHT_THUMB:22,LEFT_HIP:23,RIGHT_HIP:24,LEFT_KNEE:25,RIGHT_KNEE:26,LEFT_ANKLE:27,RIGHT_ANKLE:28,LEFT_HEEL:29,RIGHT_HEEL:30,LEFT_FOOT_INDEX:31,RIGHT_FOOT_INDEX:32}),T("POSE_LANDMARKS_LEFT",{LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,LEFT_EAR:7,LEFT_RIGHT:9,LEFT_SHOULDER:11,LEFT_ELBOW:13,LEFT_WRIST:15,LEFT_PINKY:17,LEFT_INDEX:19,LEFT_THUMB:21,LEFT_HIP:23,LEFT_KNEE:25,LEFT_ANKLE:27,LEFT_HEEL:29,LEFT_FOOT_INDEX:31}),T("POSE_LANDMARKS_RIGHT",{RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,RIGHT_EAR:8,RIGHT_LEFT:10,RIGHT_SHOULDER:12,RIGHT_ELBOW:14,RIGHT_WRIST:16,RIGHT_PINKY:18,RIGHT_INDEX:20,RIGHT_THUMB:22,RIGHT_HIP:24,RIGHT_KNEE:26,RIGHT_ANKLE:28,RIGHT_HEEL:30,RIGHT_FOOT_INDEX:32}),T("POSE_LANDMARKS_NEUTRAL",{NOSE:0}),T("VERSION","0.4.1630009814")}).call(this)},6064:(e,t,n)=>{"use strict";n.d(t,{oV:()=>ue,cH:()=>it,cy:()=>ot});var s=n(264),r=n(2766),a=n(1140),i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function o(e,t){function n(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var u=function(){return(u=Object.assign||function(e){for(var t,n=1,s=arguments.length;n<s;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}).apply(this,arguments)};function l(e,t,n,s){return new(n||(n=Promise))((function(r,a){function i(e){try{u(s.next(e))}catch(e){a(e)}}function o(e){try{u(s.throw(e))}catch(e){a(e)}}function u(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}u((s=s.apply(e,t||[])).next())}))}function c(e,t){var n,s,r,a,i={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,s&&(r=2&a[0]?s.return:a[0]?s.throw||((r=s.return)&&r.call(s),0):s.next)&&!(r=r.call(s,a[1])).done)return r;switch(s=0,r&&(a=[2&a[0],r.value]),a[0]){case 0:case 1:r=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,s=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((r=(r=i.trys).length>0&&r[r.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!r||a[1]>r[0]&&a[1]<r[3])){i.label=a[1];break}if(6===a[0]&&i.label<r[1]){i.label=r[1],r=a;break}if(r&&i.label<r[2]){i.label=r[2],i.ops.push(a);break}r[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],s=0}finally{n=r=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}}var h=["nose","left_eye","right_eye","left_ear","right_ear","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle"],p=["nose","left_eye_inner","left_eye","left_eye_outer","right_eye_inner","right_eye","right_eye_outer","left_ear","right_ear","mouth_left","mouth_right","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_pinky","right_pinky","left_index","right_index","left_thumb","right_thumb","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle","left_heel","right_heel","left_foot_index","right_foot_index"],d={left:[1,2,3,7,9,11,13,15,17,19,21,23,25,27,29,31],right:[4,5,6,8,10,12,14,16,18,20,22,24,26,28,30,32],middle:[0]},f={left:[1,3,5,7,9,11,13,15],right:[2,4,6,8,10,12,14,16],middle:[0]},m=[[0,1],[0,2],[1,3],[2,4],[5,6],[5,7],[5,11],[6,8],[6,12],[7,9],[8,10],[11,12],[11,13],[12,14],[13,15],[14,16]],g=[[0,1],[0,4],[1,2],[2,3],[3,7],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[11,23],[12,14],[14,16],[12,24],[13,15],[15,17],[16,18],[16,20],[15,17],[15,19],[15,21],[16,22],[17,19],[18,20],[23,25],[23,24],[24,26],[25,27],[26,28],[27,29],[28,30],[27,31],[28,32],[29,31],[30,32]],y={runtime:"mediapipe",enableSmoothing:!0,modelType:"full"},b=function(){function e(e){var t,n=this;switch(this.width=0,this.height=0,this.selfieMode=!1,this.poseSolution=new s.Pose({locateFile:function(t,n){return e.solutionPath?e.solutionPath.replace(/\/+$/,"")+"/"+t:n+"/"+t}}),e.modelType){case"lite":t=0;break;case"heavy":t=2;break;default:t=1}this.poseSolution.setOptions({modelComplexity:t,smoothLandmarks:e.enableSmoothing||!0,selfieMode:this.selfieMode}),this.poseSolution.onResults((function(e){n.height=e.image.height,n.width=e.image.width,null==e.poseLandmarks?n.poses=[]:n.poses=[n.translateOutput(e.poseLandmarks,e.poseWorldLandmarks)]}))}return e.prototype.translateOutput=function(e,t){var n=this,s={keypoints:e.map((function(e,t){return{x:e.x*n.width,y:e.y*n.height,z:e.z,score:e.visibility,name:p[t]}}))};return null!=t&&(s.keypoints3D=t.map((function(e,t){return{x:e.x,y:e.y,z:e.z,score:e.visibility,name:p[t]}}))),s},e.prototype.estimatePoses=function(e,t,n){return l(this,void 0,void 0,(function(){return c(this,(function(s){switch(s.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.poseSolution.setOptions({selfieMode:this.selfieMode})),[4,this.poseSolution.send({image:e},n)];case 1:return s.sent(),[2,this.poses]}}))}))},e.prototype.dispose=function(){this.poseSolution.close()},e.prototype.reset=function(){this.poseSolution.reset()},e.prototype.initialize=function(){return this.poseSolution.initialize()},e}();function x(e){return l(this,void 0,void 0,(function(){var t,n;return c(this,(function(s){switch(s.label){case 0:return t=function(e){if(null==e)return u({},y);var t=u({},e);return t.runtime="mediapipe",null==t.enableSmoothing&&(t.enableSmoothing=y.enableSmoothing),null==t.modelType&&(t.modelType=y.modelType),t}(e),[4,(n=new b(t)).initialize()];case 1:return s.sent(),[2,n]}}))}))}function v(e){return e instanceof a.esB?{height:e.shape[0],width:e.shape[1]}:{height:e.height,width:e.width}}function w(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function k(e){return e instanceof a.esB?e:a.Xhn.fromPixels(e)}function I(e,t){a.D5U.assert(0!==e.width,(function(){return t+" width cannot be 0."})),a.D5U.assert(0!==e.height,(function(){return t+" height cannot be 0."}))}function S(e,t,n){var s=t.inputResolution,r=t.keepAspectRatio,i=v(e),o=function(e,t){return t?{xCenter:t.xCenter*e.width,yCenter:t.yCenter*e.height,width:t.width*e.width,height:t.height*e.height,rotation:t.rotation}:{xCenter:.5*e.width,yCenter:.5*e.height,width:e.width,height:e.height,rotation:0}}(i,n),u=function(e,t,n){if(void 0===n&&(n=!1),!n)return{top:0,left:0,right:0,bottom:0};var s=t.height,r=t.width;I(t,"targetSize"),I(e,"roi");var a,i,o=s/r,u=e.height/e.width,l=0,c=0;return o>u?(a=e.width,i=e.width*o,c=(1-u/o)/2):(a=e.height/o,i=e.height,l=(1-o/u)/2),e.width=a,e.height=i,{top:c,left:l,right:l,bottom:c}}(o,s,r);return{imageTensor:(0,a.lub)((function(){var t=k(e),n=(0,a.odF)(function(e,t,n,s){I(s,"inputResolution");var r=1/t.width,a=1/t.height,i=e.xCenter,o=e.yCenter,u=Math.cos(e.rotation),l=Math.sin(e.rotation),c=e.width,h=e.height;return[1/s.width*c*u*1*r*t.width,1/s.height*-h*l*r*t.width,(-.5*c*u*1+.5*h*l+i)*r*t.width,1/s.width*c*l*1*a*t.height,1/s.height*h*u*a*t.height,(-.5*h*u-.5*c*l*1+o)*a*t.height,0,0]}(o,i,0,s),[1,8]);return a.BHj.transform((0,a.dt4)((0,a.pju)(t,"float32")),n,"bilinear","nearest",0,[s.height,s.width])})),padding:u}}function N(e){return null!=e&&null!=e.currentTime}var T=function(){function e(e){this.alpha=e,this.initialized=!1}return e.prototype.apply=function(e,t){var n;return this.initialized?n=null==t?this.storedValue+this.alpha*(e-this.storedValue):this.storedValue+this.alpha*t*Math.asinh((e-this.storedValue)/t):(n=e,this.initialized=!0),this.rawValue=e,this.storedValue=n,n},e.prototype.applyWithAlpha=function(e,t,n){return this.alpha=t,this.apply(e,n)},e.prototype.hasLastRawValue=function(){return this.initialized},e.prototype.lastRawValue=function(){return this.rawValue},e.prototype.reset=function(){this.initialized=!1},e}(),C=function(){function e(e){this.frequency=e.frequency,this.minCutOff=e.minCutOff,this.beta=e.beta,this.thresholdCutOff=e.thresholdCutOff,this.thresholdBeta=e.thresholdBeta,this.derivateCutOff=e.derivateCutOff,this.x=new T(this.getAlpha(this.minCutOff)),this.dx=new T(this.getAlpha(this.derivateCutOff)),this.lastTimestamp=0}return e.prototype.apply=function(e,t,n){if(null==e)return e;var s=Math.trunc(t);if(this.lastTimestamp>=s)return e;0!==this.lastTimestamp&&0!==s&&(this.frequency=1/(1e-6*(s-this.lastTimestamp))),this.lastTimestamp=s;var r=this.x.hasLastRawValue()?(e-this.x.lastRawValue())*n*this.frequency:0,a=this.dx.applyWithAlpha(r,this.getAlpha(this.derivateCutOff)),i=this.minCutOff+this.beta*Math.abs(a),o=null!=this.thresholdCutOff?this.thresholdCutOff+this.thresholdBeta*Math.abs(a):null;return this.x.applyWithAlpha(e,this.getAlpha(i),o)},e.prototype.getAlpha=function(e){return 1/(1+this.frequency/(2*Math.PI*e))},e}(),$=function(){function e(e){this.config=e}return e.prototype.apply=function(e,t,n){var s=this;if(null==e)return this.reset(),null;this.initializeFiltersIfEmpty(e);var r=1;if(!this.config.disableValueScaling){if(n<this.config.minAllowedObjectScale)return e.slice();r=1/n}return e.map((function(e,n){var a=u({},e,{x:s.xFilters[n].apply(e.x,t,r),y:s.yFilters[n].apply(e.y,t,r)});return null!=e.z&&(a.z=s.zFilters[n].apply(e.z,t,r)),a}))},e.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},e.prototype.initializeFiltersIfEmpty=function(e){var t=this;null!=this.xFilters&&this.xFilters.length===e.length||(this.xFilters=e.map((function(e){return new C(t.config)})),this.yFilters=e.map((function(e){return new C(t.config)})),this.zFilters=e.map((function(e){return new C(t.config)})))},e}();var E=function(){function e(e){this.config=e,this.window=[],this.lowPassFilter=new T(1),this.lastValue=0,this.lastValueScale=1,this.lastTimestamp=-1}return e.prototype.apply=function(e,t,n){if(null==e)return e;var s,r=Math.trunc(t);if(this.lastTimestamp>=r)return e;if(-1===this.lastTimestamp)s=1;else{for(var a=e*n-this.lastValue*this.lastValueScale,i=r-this.lastTimestamp,o=a,u=i,l=(1+this.window.length)*(1e6/30),c=0,h=this.window;c<h.length;c++){var p=h[c];if(u+p.duration>l)break;o+=p.distance,u+=p.duration}var d=o/(1e-6*u);s=1-1/(1+this.config.velocityScale*Math.abs(d)),this.window.unshift({distance:a,duration:i}),this.window.length>this.config.windowSize&&this.window.pop()}return this.lastValue=e,this.lastValueScale=n,this.lastTimestamp=r,this.lowPassFilter.applyWithAlpha(e,s)},e}(),A=function(){function e(e){this.config=e}return e.prototype.apply=function(e,t,n){var s=this;if(null==e)return this.reset(),null;var r=1;if(!this.config.disableValueScaling){if(n<this.config.minAllowedObjectScale)return e.slice();r=1/n}return this.initializeFiltersIfEmpty(e),e.map((function(e,n){var a=u({},e,{x:s.xFilters[n].apply(e.x,t,r),y:s.yFilters[n].apply(e.y,t,r)});return null!=e.z&&(a.z=s.zFilters[n].apply(e.z,t,r)),a}))},e.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},e.prototype.initializeFiltersIfEmpty=function(e){var t=this;null!=this.xFilters&&this.xFilters.length===e.length||(this.xFilters=e.map((function(e){return new E(t.config)})),this.yFilters=e.map((function(e){return new E(t.config)})),this.zFilters=e.map((function(e){return new E(t.config)})))},e}();function D(e,t){return e.map((function(e){var n=u({},e,{x:e.x*t.width,y:e.y*t.height});return null!=e.z&&(n.z=e.z*t.width),n}))}var R=function(){function e(e){if(null!=e.velocityFilter)this.keypointsFilter=new A(e.velocityFilter);else{if(null==e.oneEuroFilter)throw new Error("Either configure velocityFilter or oneEuroFilter, but got "+e+".");this.keypointsFilter=new $(e.oneEuroFilter)}}return e.prototype.apply=function(e,t,n,s,r){if(void 0===s&&(s=!1),null==e)return this.keypointsFilter.reset(),null;var a=null!=r?function(e,t){return(e.width*t.width+e.height*t.height)/2}(r,n):1,i=s?D(e,n):e,o=this.keypointsFilter.apply(i,t,a);return s?function(e,t){return e.map((function(e){var n=u({},e,{x:e.x/t.width,y:e.y/t.height});return null!=e.z&&(e.z=e.z/t.width),n}))}(o,n):o},e}();function _(e,t){var n=function(e,t,n,s){var r=(s-n)/255;return{scale:r,offset:n-0*r}}(0,0,t[0],t[1]);return(0,a.lub)((function(){return(0,a.IHx)((0,a.dC7)(e,n.scale),n.offset)}))}function F(e,t,n){var s=n.rotationVectorStartKeypointIndex,r=n.rotationVectorEndKeypointIndex,a=e.locationData,i=a.relativeKeypoints[s].x*t.width,o=a.relativeKeypoints[s].y*t.height,u=a.relativeKeypoints[r].x*t.width,l=a.relativeKeypoints[r].y*t.height,c=2*Math.sqrt((u-i)*(u-i)+(l-o)*(l-o)),h=function(e,t,n){var s,r=e.locationData,a=n.rotationVectorStartKeypointIndex,i=n.rotationVectorEndKeypointIndex;s=n.rotationVectorTargetAngle?n.rotationVectorTargetAngle:Math.PI*n.rotationVectorTargetAngleDegree/180;var o=r.relativeKeypoints[a].x*t.width,u=r.relativeKeypoints[a].y*t.height,l=r.relativeKeypoints[i].x*t.width,c=r.relativeKeypoints[i].y*t.height;return w(s-Math.atan2(-(c-u),l-o))}(e,t,n);return{xCenter:i/t.width,yCenter:o/t.height,width:c/t.width,height:c/t.height,rotation:h}}function O(e,t,n,s){return 1===s?.5*(e+t):e+(t-e)*n/(s-1)}function M(e){for(var t={locationData:{relativeKeypoints:[]}},n=Number.MAX_SAFE_INTEGER,s=Number.MIN_SAFE_INTEGER,r=Number.MAX_SAFE_INTEGER,a=Number.MIN_SAFE_INTEGER,i=0;i<e.length;++i){var o=e[i];n=Math.min(n,o.x),s=Math.max(s,o.x),r=Math.min(r,o.y),a=Math.max(a,o.y),t.locationData.relativeKeypoints.push({x:o.x,y:o.y})}return t.locationData.relativeBoundingBox={xMin:n,yMin:r,xMax:s,yMax:a,width:s-n,height:a-r},t}function L(e,t,n,s){return l(this,void 0,void 0,(function(){var r,i,o,u,l;return c(this,(function(c){switch(c.label){case 0:return r=(0,a.odF)(e.map((function(e){return[e.locationData.relativeBoundingBox.yMin,e.locationData.relativeBoundingBox.xMin,e.locationData.relativeBoundingBox.yMax,e.locationData.relativeBoundingBox.xMax]}))),i=(0,a.RRF)(e.map((function(e){return e.score[0]}))),[4,a.BHj.nonMaxSuppressionAsync(r,i,t,n,s)];case 1:return[4,(o=c.sent()).array()];case 2:return u=c.sent(),l=e.filter((function(e,t){return u.indexOf(t)>-1})),(0,a.B90)([r,i,o]),[2,l]}}))}))}function z(e,t,n){return l(this,void 0,void 0,(function(){var s,r,i,o,l,h,p,d,f,m,g,y,b,x,v,w,k,I,S,N,T,C,$,E;return c(this,(function(c){switch(c.label){case 0:if(s=(0,a.L9e)(t,[0]),r=s.shape,i=r[0],o=r[1],l=r[2],e.length!==l)throw new Error("Expected heatmap to have same number of channels as the number of landmarks. But got landmarks length: "+e.length+", heatmap length: "+l);return h=[],[4,s.buffer()];case 1:for(p=c.sent(),d=0;d<e.length;d++)if(f=e[d],m=u({},f),h.push(m),g=Math.trunc(m.x*o),y=Math.trunc(m.y*i),!(g<0||g>=o||y<0||g>=i)){for(b=Math.trunc((n.kernelSize-1)/2),x=Math.max(0,g-b),v=Math.min(o,g+b+1),w=Math.max(0,y-b),k=Math.min(i,y+b+1),I=0,S=0,N=0,T=0,C=w;C<k;++C)for($=x;$<v;++$)E=p.get(C,$,d),I+=E,T=Math.max(T,E),S+=$*E,N+=C*E;T>=n.minConfidenceToRefine&&I>0&&(m.x=S/o/I,m.y=N/i/I)}return s.dispose(),[2,h]}}))}))}function B(e,t,n){return l(this,void 0,void 0,(function(){var s,r,i,o,u;return c(this,(function(l){switch(l.label){case 0:return s=e[0],r=e[1],i=function(e,t,n){return(0,a.lub)((function(){var s,r,i,o;n.reverseOutputOrder?(r=(0,a.L9e)((0,a.tPi)(e,[0,n.boxCoordOffset+0],[-1,1])),s=(0,a.L9e)((0,a.tPi)(e,[0,n.boxCoordOffset+1],[-1,1])),o=(0,a.L9e)((0,a.tPi)(e,[0,n.boxCoordOffset+2],[-1,1])),i=(0,a.L9e)((0,a.tPi)(e,[0,n.boxCoordOffset+3],[-1,1]))):(s=(0,a.L9e)((0,a.tPi)(e,[0,n.boxCoordOffset+0],[-1,1])),r=(0,a.L9e)((0,a.tPi)(e,[0,n.boxCoordOffset+1],[-1,1])),i=(0,a.L9e)((0,a.tPi)(e,[0,n.boxCoordOffset+2],[-1,1])),o=(0,a.L9e)((0,a.tPi)(e,[0,n.boxCoordOffset+3],[-1,1]))),r=(0,a.IHx)((0,a.dC7)((0,a.hiC)(r,n.xScale),t.w),t.x),s=(0,a.IHx)((0,a.dC7)((0,a.hiC)(s,n.yScale),t.h),t.y),n.applyExponentialOnBoxSize?(i=(0,a.dC7)((0,a.Qqt)((0,a.hiC)(i,n.hScale)),t.h),o=(0,a.dC7)((0,a.Qqt)((0,a.hiC)(o,n.wScale)),t.w)):(i=(0,a.dC7)((0,a.hiC)(i,n.hScale),t.h),o=(0,a.dC7)((0,a.hiC)(o,n.wScale),t.h));var u=(0,a.luU)(s,(0,a.hiC)(i,2)),l=(0,a.luU)(r,(0,a.hiC)(o,2)),c=(0,a.IHx)(s,(0,a.hiC)(i,2)),h=(0,a.IHx)(r,(0,a.hiC)(o,2)),p=(0,a.zoF)([(0,a.XLQ)(u,[n.numBoxes,1]),(0,a.XLQ)(l,[n.numBoxes,1]),(0,a.XLQ)(c,[n.numBoxes,1]),(0,a.XLQ)(h,[n.numBoxes,1])],1);if(n.numKeypoints)for(var d=0;d<n.numKeypoints;++d){var f=n.keypointCoordOffset+d*n.numValuesPerKeypoint,m=void 0,g=void 0;n.reverseOutputOrder?(m=(0,a.L9e)((0,a.tPi)(e,[0,f],[-1,1])),g=(0,a.L9e)((0,a.tPi)(e,[0,f+1],[-1,1]))):(g=(0,a.L9e)((0,a.tPi)(e,[0,f],[-1,1])),m=(0,a.L9e)((0,a.tPi)(e,[0,f+1],[-1,1])));var y=(0,a.IHx)((0,a.dC7)((0,a.hiC)(m,n.xScale),t.w),t.x),b=(0,a.IHx)((0,a.dC7)((0,a.hiC)(g,n.yScale),t.h),t.y);p=(0,a.zoF)([p,(0,a.XLQ)(y,[n.numBoxes,1]),(0,a.XLQ)(b,[n.numBoxes,1])],1)}return p}))}(r,t,n),o=(0,a.lub)((function(){var e=s;return n.sigmoidScore?(null!=n.scoreClippingThresh&&(e=(0,a.iUl)(s,-n.scoreClippingThresh,n.scoreClippingThresh)),e=(0,a.XD2)(e)):e})),[4,P(i,o,n)];case 1:return u=l.sent(),(0,a.B90)([i,o]),[2,u]}}))}))}function P(e,t,n){return l(this,void 0,void 0,(function(){var s,r,a,i,o,u,l,h,p,d,f,m;return c(this,(function(c){switch(c.label){case 0:return s=[],[4,e.data()];case 1:return r=c.sent(),[4,t.data()];case 2:for(a=c.sent(),i=0;i<n.numBoxes;++i)if(!(null!=n.minScoreThresh&&a[i]<n.minScoreThresh||(o=i*n.numCoords,u=U(r[o+0],r[o+1],r[o+2],r[o+3],a[i],n.flipVertically,i),(l=u.locationData.relativeBoundingBox).width<0||l.height<0))){if(n.numKeypoints>0)for((h=u.locationData).relativeKeypoints=[],p=n.numKeypoints*n.numValuesPerKeypoint,d=0;d<p;d+=n.numValuesPerKeypoint)f=o+n.keypointCoordOffset+d,m={x:r[f+0],y:n.flipVertically?1-r[f+1]:r[f+1]},h.relativeKeypoints.push(m);s.push(u)}return[2,s]}}))}))}function U(e,t,n,s,r,a,i){return{score:[r],ind:i,locationData:{relativeBoundingBox:{xMin:t,yMin:a?1-n:e,xMax:s,yMax:a?1-e:n,width:s-t,height:n-e}}}}function W(e,t,n,s){return void 0===n&&(n=!1),void 0===s&&(s=!1),l(this,void 0,void 0,(function(){var r,a,i,o,u,l,h,p;return c(this,(function(c){switch(c.label){case 0:return r=e.size,a=r/t.numLandmarks,[4,e.data()];case 1:for(i=c.sent(),o=[],u=0;u<t.numLandmarks;++u)l=u*a,(p={x:0,y:0}).x=n?t.inputImageWidth-i[l]:i[l],a>1&&(p.y=s?t.inputImageHeight-i[l+1]:i[l+1]),a>2&&(p.z=i[l+2]),a>3&&(p.score=(d=i[l+3],1/(1+Math.exp(-d)))),o.push(p);for(h=0;h<o.length;++h)(p=o[h]).x=p.x/t.inputImageWidth,p.y=p.y/t.inputImageHeight,p.z=p.z/t.inputImageWidth/(t.normalizeZ||1);return[2,o]}var d}))}))}function V(e,t,n){var s=e.width,r=e.height,a=e.rotation;if(null==n.rotation&&null==n.rotationDegree||(a=function(e,t){return null!=t.rotation?e+=t.rotation:null!=t.rotationDegree&&(e+=Math.PI*t.rotationDegree/180),w(e)}(a,n)),0===a)e.xCenter=e.xCenter+s*n.shiftX,e.yCenter=e.yCenter+r*n.shiftY;else{var i=(t.width*s*n.shiftX*Math.cos(a)-t.height*r*n.shiftY*Math.sin(a))/t.width,o=(t.width*s*n.shiftX*Math.sin(a)+t.height*r*n.shiftY*Math.cos(a))/t.height;e.xCenter=e.xCenter+i,e.yCenter=e.yCenter+o}if(n.squareLong){var u=Math.max(s*t.width,r*t.height);s=u/t.width,r=u/t.height}else if(n.squareShort){var l=Math.min(s*t.width,r*t.height);s=l/t.width,r=l/t.height}return e.width=s*n.scaleX,e.height=r*n.scaleY,e}var H=function(){function e(e){this.alpha=e.alpha}return e.prototype.apply=function(e){var t=this;if(null==e)return this.visibilityFilters=null,null;null!=this.visibilityFilters&&this.visibilityFilters.length===e.length||(this.visibilityFilters=e.map((function(e){return new T(t.alpha)})));for(var n=[],s=0;s<e.length;++s){var r=e[s],a=u({},r);a.score=this.visibilityFilters[s].apply(r.score),n.push(a)}return n},e}(),G={reduceBoxesInLowestlayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:5,minScale:.1484375,maxScale:.75,inputSizeHeight:224,inputSizeWidth:224,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,32,32,32],aspectRatios:[1],fixedAnchorSize:!0},j={runtime:"tfjs",modelType:"full",enableSmoothing:!0,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/detector/1",landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/1"},X={maxPoses:1,flipHorizontal:!1},q={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2254,numCoords:12,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:4,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:224,yScale:224,hScale:224,wScale:224,minScoreThresh:.5},K={shiftX:0,shiftY:0,scaleX:1.25,scaleY:1.25,squareLong:!0},Y={inputResolution:{width:224,height:224},keepAspectRatio:!0},Q={inputResolution:{width:256,height:256},keepAspectRatio:!0},J={numLandmarks:39,inputImageWidth:256,inputImageHeight:256},Z={numLandmarks:39,inputImageWidth:1,inputImageHeight:1},ee={kernelSize:7,minConfidenceToRefine:.5},te={alpha:.1},ne={oneEuroFilter:{frequency:30,minCutOff:.05,beta:80,derivateCutOff:1,minAllowedObjectScale:1e-6}},se={oneEuroFilter:{frequency:30,minCutOff:.01,beta:10,derivateCutOff:1,minAllowedObjectScale:1e-6}},re={oneEuroFilter:{frequency:30,minCutOff:.1,beta:40,derivateCutOff:1,minAllowedObjectScale:1e-6,disableValueScaling:!0}},ae=function(){function e(e,t,n,s){this.detectorModel=e,this.landmarkModel=t,this.enableSmoothing=n,this.modelType=s,this.regionOfInterest=null,this.anchors=function(e){for(var t=[],n=0;n<e.numLayers;){for(var s=[],r=[],a=[],i=[],o=n;o<e.strides.length&&e.strides[o]===e.strides[n];){var u=O(e.minScale,e.maxScale,o,e.strides.length);if(0===o&&e.reduceBoxesInLowestLayer)a.push(1),a.push(2),a.push(.5),i.push(.1),i.push(u),i.push(u);else{for(var l=0;l<e.aspectRatios.length;++l)a.push(e.aspectRatios[l]),i.push(u);if(e.interpolatedScaleAspectRatio>0){var c=o===e.strides.length-1?1:O(e.minScale,e.maxScale,o+1,e.strides.length);i.push(Math.sqrt(u*c)),a.push(e.interpolatedScaleAspectRatio)}}o++}for(var h=0;h<a.length;++h){var p=Math.sqrt(a[h]);s.push(i[h]/p),r.push(i[h]*p)}var d=0,f=0;if(e.featureMapHeight.length>0)d=e.featureMapHeight[n],f=e.featureMapWidth[n];else{var m=e.strides[n];d=Math.ceil(e.inputSizeHeight/m),f=Math.ceil(e.inputSizeWidth/m)}for(var g=0;g<d;++g)for(var y=0;y<f;++y)for(var b=0;b<s.length;++b){var x={xCenter:(y+e.anchorOffsetX)/f,yCenter:(g+e.anchorOffsetY)/d,width:0,height:0};e.fixedAnchorSize?(x.width=1,x.height=1):(x.width=r[b],x.height=s[b]),t.push(x)}n=o}return t}(G);var r=(0,a.RRF)(this.anchors.map((function(e){return e.width}))),i=(0,a.RRF)(this.anchors.map((function(e){return e.height}))),o=(0,a.RRF)(this.anchors.map((function(e){return e.xCenter}))),u=(0,a.RRF)(this.anchors.map((function(e){return e.yCenter})));this.anchorTensor={x:o,y:u,w:r,h:i}}return e.prototype.estimatePoses=function(e,t,n){return l(this,void 0,void 0,(function(){var s,r,i,o,l,h,d,f,m,g,y,b,x,w,I,S,T,C;return c(this,(function(c){switch(c.label){case 0:return s=function(e){var t;if(null==(t=null==e?X:u({},e)).maxPoses&&(t.maxPoses=1),t.maxPoses<=0)throw new Error("Invalid maxPoses "+t.maxPoses+". Should be > 0.");if(t.maxPoses>1)throw new Error("Multi-pose detection is not implemented yet. Please set maxPoses to 1.");return t}(t),null==e?(this.reset(),[2,[]]):(this.maxPoses=s.maxPoses,this.timestamp=null!=n?1e3*n:N(e)?1e6*e.currentTime:null,r=v(e),i=(0,a.lub)((function(){return(0,a.pju)(k(e),"float32")})),null!=(o=this.regionOfInterest)?[3,2]:[4,this.detectPose(i)]);case 1:if(0===(l=c.sent()).length)return this.reset(),i.dispose(),[2,[]];h=l[0],o=this.poseDetectionToRoi(h,r),c.label=2;case 2:return[4,this.poseLandmarksByRoi(o,i)];case 3:return d=c.sent(),i.dispose(),null==d?(this.reset(),[2,[]]):(f=d.actualLandmarks,m=d.auxiliaryLandmarks,g=d.poseScore,y=d.actualWorldLandmarks,b=this.poseLandmarkFiltering(f,m,y,r),x=b.actualLandmarksFiltered,w=b.auxiliaryLandmarksFiltered,I=b.actualWorldLandmarksFiltered,S=this.poseLandmarksToRoi(w,r),this.regionOfInterest=S,null!=(T=null!=x?D(x,r):null)&&T.forEach((function(e,t){e.name=p[t]})),null!=(C=I)&&C.forEach((function(e,t){e.name=p[t]})),[2,[{score:g,keypoints:T,keypoints3D:C}]])}}))}))},e.prototype.dispose=function(){this.detectorModel.dispose(),this.landmarkModel.dispose(),(0,a.B90)([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h])},e.prototype.reset=function(){this.regionOfInterest=null,this.visibilitySmoothingFilterActual=null,this.visibilitySmoothingFilterAuxiliary=null,this.landmarksSmoothingFilterActual=null,this.landmarksSmoothingFilterAuxiliary=null},e.prototype.detectPose=function(e){return l(this,void 0,void 0,(function(){var t,n,s,r,i,o,u,l,h;return c(this,(function(c){switch(c.label){case 0:return t=S(e,Y),n=t.imageTensor,s=t.padding,r=_(n,[-1,1]),i=function(e,t){return(0,a.lub)((function(){var n=function(e){return(0,a.lub)((function(){var t=(0,a.tPi)(e,[0,0,0],[1,-1,1]);return[(0,a.XD2)(t),(0,a.tPi)(e,[0,0,1],[1,-1,-1])]}))}(t.predict(e)),s=n[0],r=n[1];return{boxes:(0,a.L9e)(r),scores:(0,a.L9e)(s)}}))}(r,this.detectorModel),o=i.boxes,[4,B([u=i.scores,o],this.anchorTensor,q)];case 1:return[4,L(c.sent(),this.maxPoses,.3,-1)];case 2:return l=c.sent(),h=function(e,t){void 0===e&&(e=[]);for(var n=t.left,s=t.top,r=t.left+t.right,a=t.top+t.bottom,i=0;i<e.length;i++){var o=e[i],u=o.locationData.relativeBoundingBox,l=(u.xMin-n)/(1-r),c=(u.yMin-s)/(1-a),h=u.width/(1-r),p=u.height/(1-a);u.xMin=l,u.yMin=c,u.width=h,u.height=p;for(var d=0;d<o.locationData.relativeKeypoints.length;++d){var f=o.locationData.relativeKeypoints[d],m=(f.x-n)/(1-r),g=(f.y-s)/(1-a);f.x=m,f.y=g}}return e}(l,s),(0,a.B90)([n,r,u,o]),[2,h]}}))}))},e.prototype.poseDetectionToRoi=function(e,t){return V(F(e,t,{rotationVectorEndKeypointIndex:1,rotationVectorStartKeypointIndex:0,rotationVectorTargetAngleDegree:90}),t,K)},e.prototype.poseLandmarksByRoi=function(e,t){return l(this,void 0,void 0,(function(){var n,s,r,i,o,l,h,p,d,f,m,g,y,b,x,v,w,k,I,N;return c(this,(function(c){switch(c.label){case 0:if(n=S(t,Q,e),s=n.imageTensor,r=n.padding,i=_(s,[0,1]),"lite"!==this.modelType&&"full"!==this.modelType&&"heavy"!==this.modelType)throw new Error("Model type must be one of lite, full or heavy,but got "+this.modelType);return o=this.landmarkModel.execute(i,["ld_3d","output_poseflag","activation_heatmap","world_3d"]),l=o[0],h=o[1],p=o[2],d=o[3],[4,h.data()];case 1:return(f=c.sent()[0])<.5?((0,a.B90)(o),(0,a.B90)([s,i]),[2,null]):[4,W(l,J)];case 2:return[4,z(m=c.sent(),p,ee)];case 3:return g=c.sent(),y=function(e,t){var n=t.left,s=t.top,r=t.left+t.right,a=t.top+t.bottom;return e.map((function(e){return u({},e,{x:(e.x-n)/(1-r),y:(e.y-s)/(1-a),z:e.z/(1-r)})}))}(g,r),b=function(e,t,n){void 0===n&&(n={ignoreRotation:!1});for(var s=[],r=0,a=e;r<a.length;r++){var i=a[r],o=i.x-.5,l=i.y-.5,c=n.ignoreRotation?0:t.rotation,h=Math.cos(c)*o-Math.sin(c)*l,p=Math.sin(c)*o+Math.cos(c)*l;h=h*t.width+t.xCenter,p=p*t.height+t.yCenter;var d=i.z*t.width,f=u({},i);f.x=h,f.y=p,f.z=d,s.push(f)}return s}(y,e),x=b.slice(0,33),v=b.slice(33,35),[4,W(d,Z)];case 4:return w=c.sent(),k=function(e,t,n){void 0===n&&(n=!0);for(var s=[],r=0;r<e.length;r++){var a=u({},t[r]);n&&(a.score=e[r].score),s.push(a)}return s}(m,w,!0),I=function(e,t){for(var n=[],s=0,r=e;s<r.length;s++){var a=r[s],i=a.x,o=a.y,l=t.rotation,c=Math.cos(l)*i-Math.sin(l)*o,h=Math.sin(l)*i+Math.cos(l)*o,p=u({},a);p.x=c,p.y=h,n.push(p)}return n}(k,e),N=I.slice(0,33),(0,a.B90)(o),(0,a.B90)([s,i]),[2,{actualLandmarks:x,auxiliaryLandmarks:v,poseScore:f,actualWorldLandmarks:N}]}}))}))},e.prototype.poseLandmarksToRoi=function(e,t){return V(F(M(e),t,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:90}),t,K)},e.prototype.poseLandmarkFiltering=function(e,t,n,s){var r,a,i;if(null!=this.timestamp&&this.enableSmoothing){var o=F(M(t),s,{rotationVectorEndKeypointIndex:0,rotationVectorStartKeypointIndex:1,rotationVectorTargetAngleDegree:90});null==this.visibilitySmoothingFilterActual&&(this.visibilitySmoothingFilterActual=new H(te)),r=this.visibilitySmoothingFilterActual.apply(e),null==this.visibilitySmoothingFilterAuxiliary&&(this.visibilitySmoothingFilterAuxiliary=new H(te)),a=this.visibilitySmoothingFilterAuxiliary.apply(t),i=this.visibilitySmoothingFilterActual.apply(n),null==this.landmarksSmoothingFilterActual&&(this.landmarksSmoothingFilterActual=new R(ne)),r=this.landmarksSmoothingFilterActual.apply(r,this.timestamp,s,!0,o),null==this.landmarksSmoothingFilterAuxiliary&&(this.landmarksSmoothingFilterAuxiliary=new R(se)),a=this.landmarksSmoothingFilterAuxiliary.apply(a,this.timestamp,s,!0,o),null==this.worldLandmarksSmoothingFilterActual&&(this.worldLandmarksSmoothingFilterActual=new R(re)),i=this.worldLandmarksSmoothingFilterActual.apply(n,this.timestamp)}else r=e,a=t,i=n;return{actualLandmarksFiltered:r,auxiliaryLandmarksFiltered:a,actualWorldLandmarksFiltered:i}},e}();function ie(e){return l(this,void 0,void 0,(function(){var t,n,s,a,i,o;return c(this,(function(l){switch(l.label){case 0:return t=function(e){var t=u({},null==e?j:e);if(null==t.enableSmoothing&&(t.enableSmoothing=j.enableSmoothing),null==t.modelType&&(t.modelType=j.modelType),null==t.detectorModelUrl&&(t.detectorModelUrl=j.detectorModelUrl),null==t.landmarkModelUrl)switch(t.modelType){case"lite":t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/lite/1";break;case"heavy":t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/heavy/1";break;default:t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/1"}return t}(e),n=t.detectorModelUrl.indexOf("https://tfhub.dev")>-1,s=t.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Promise.all([(0,r.YL)(t.detectorModelUrl,{fromTFHub:n}),(0,r.YL)(t.landmarkModelUrl,{fromTFHub:s})])];case 1:return a=l.sent(),i=a[0],o=a[1],[2,new ae(i,o,t.enableSmoothing,t.modelType)]}}))}))}var oe,ue,le,ce=function(){function e(e){!function(e){if(e.maxTracks<1)throw new Error("Must specify 'maxTracks' to be at least 1, but encountered "+e.maxTracks);if(e.maxAge<=0)throw new Error("Must specify 'maxAge' to be positive, but encountered "+e.maxAge);if(void 0!==e.keypointTrackerParams){if(e.keypointTrackerParams.keypointConfidenceThreshold<0||e.keypointTrackerParams.keypointConfidenceThreshold>1)throw new Error("Must specify 'keypointConfidenceThreshold' to be in the range [0, 1], but encountered "+e.keypointTrackerParams.keypointConfidenceThreshold);if(e.keypointTrackerParams.minNumberOfKeypoints<1)throw new Error("Must specify 'minNumberOfKeypoints' to be at least 1, but encountered "+e.keypointTrackerParams.minNumberOfKeypoints);for(var t=0,n=e.keypointTrackerParams.keypointFalloff;t<n.length;t++){var s=n[t];if(s<=0)throw new Error("Must specify each keypoint falloff parameterto be positive but encountered "+s)}}}(e),this.tracks=[],this.maxTracks=e.maxTracks,this.maxAge=1e3*e.maxAge,this.minSimilarity=e.minSimilarity,this.nextID=1}return e.prototype.apply=function(e,t){this.filterOldTracks(t);var n=this.computeSimilarity(e);return this.assignTracks(e,n,t),this.updateTracks(t),e},e.prototype.getTracks=function(){return this.tracks.slice()},e.prototype.getTrackIDs=function(){return new Set(this.tracks.map((function(e){return e.id})))},e.prototype.filterOldTracks=function(e){var t=this;this.tracks=this.tracks.filter((function(n){return e-n.lastTimestamp<=t.maxAge}))},e.prototype.assignTracks=function(e,t,n){for(var s=Array.from(Array(t[0].length).keys()),r=[],a=0,i=Array.from(Array(e.length).keys());a<i.length;a++){var o=i[a];if(0!==s.length){for(var u=-1,l=-1,c=0,h=s;c<h.length;c++){var p=h[c],d=t[o][p];d>=this.minSimilarity&&d>l&&(u=p,l=d)}if(u>=0){var f=this.tracks[u];f=Object.assign(f,this.createTrack(e[o],n,f.id)),e[o].id=f.id;var m=s.indexOf(u);s.splice(m,1)}else r.push(o)}else r.push(o)}for(var g=0,y=r;g<y.length;g++){o=y[g];var b=this.createTrack(e[o],n);this.tracks.push(b),e[o].id=b.id}},e.prototype.updateTracks=function(e){this.tracks.sort((function(e,t){return t.lastTimestamp-e.lastTimestamp})),this.tracks=this.tracks.slice(0,this.maxTracks)},e.prototype.createTrack=function(e,t,n){var s={id:n||this.nextTrackID(),lastTimestamp:t,keypoints:e.keypoints.slice().map((function(e){return u({},e)}))};return void 0!==e.box&&(s.box=u({},e.box)),s},e.prototype.nextTrackID=function(){var e=this.nextID;return this.nextID+=1,e},e.prototype.remove=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.tracks=this.tracks.filter((function(t){return!e.includes(t.id)}))},e.prototype.reset=function(){this.tracks=[]},e}(),he=function(e){function t(t){return e.call(this,t)||this}return o(t,e),t.prototype.computeSimilarity=function(e){var t=this;return 0===e.length||0===this.tracks.length?[[]]:e.map((function(e){return t.tracks.map((function(n){return t.iou(e,n)}))}))},t.prototype.iou=function(e,t){var n=Math.max(e.box.xMin,t.box.xMin),s=Math.max(e.box.yMin,t.box.yMin),r=Math.min(e.box.xMax,t.box.xMax),a=Math.min(e.box.yMax,t.box.yMax);if(n>=r||s>=a)return 0;var i=(r-n)*(a-s);return i/(e.box.width*e.box.height+t.box.width*t.box.height-i)},t}(ce),pe=function(e){function t(t){var n=e.call(this,t)||this;return n.keypointThreshold=t.keypointTrackerParams.keypointConfidenceThreshold,n.keypointFalloff=t.keypointTrackerParams.keypointFalloff,n.minNumKeyoints=t.keypointTrackerParams.minNumberOfKeypoints,n}return o(t,e),t.prototype.computeSimilarity=function(e){if(0===e.length||0===this.tracks.length)return[[]];for(var t=[],n=0,s=e;n<s.length;n++){for(var r=s[n],a=[],i=0,o=this.tracks;i<o.length;i++){var u=o[i];a.push(this.oks(r,u))}t.push(a)}return t},t.prototype.oks=function(e,t){for(var n=this.area(t.keypoints)+1e-6,s=0,r=0,a=0;a<e.keypoints.length;++a){var i=e.keypoints[a],o=t.keypoints[a];if(!(i.score<this.keypointThreshold||o.score<this.keypointThreshold)){r+=1;var u=Math.pow(i.x-o.x,2)+Math.pow(i.y-o.y,2),l=2*this.keypointFalloff[a];s+=Math.exp(-1*u/(2*n*Math.pow(l,2)))}}return r<this.minNumKeyoints?0:s/r},t.prototype.area=function(e){var t=this,n=e.filter((function(e){return e.score>t.keypointThreshold})),s=Math.min.apply(Math,[1].concat(n.map((function(e){return e.x})))),r=Math.max.apply(Math,[0].concat(n.map((function(e){return e.x})))),a=Math.min.apply(Math,[1].concat(n.map((function(e){return e.y}))));return(r-s)*(Math.max.apply(Math,[0].concat(n.map((function(e){return e.y}))))-a)},t}(ce);function de(e){switch(e){case ue.BlazePose:return p.reduce((function(e,t,n){return e[t]=n,e}),{});case ue.PoseNet:case ue.MoveNet:return h.reduce((function(e,t,n){return e[t]=n,e}),{});default:throw new Error("Model "+e+" is not supported.")}}(le=oe||(oe={})).Keypoint="keypoint",le.BoundingBox="boundingBox",function(e){e.MoveNet="MoveNet",e.BlazePose="BlazePose",e.PoseNet="PoseNet"}(ue||(ue={})),Object.freeze({__proto__:null,getKeypointIndexBySide:function(e){switch(e){case ue.BlazePose:return d;case ue.PoseNet:case ue.MoveNet:return f;default:throw new Error("Model "+e+" is not supported.")}},getAdjacentPairs:function(e){switch(e){case ue.BlazePose:return g;case ue.PoseNet:case ue.MoveNet:return m;default:throw new Error("Model "+e+" is not supported.")}},getKeypointIndexByName:de});var fe=["SinglePose.Lightning","SinglePose.Thunder","MultiPose.Lightning"],me={modelType:"SinglePose.Lightning",enableSmoothing:!0},ge={},ye={frequency:30,minCutOff:2.5,beta:300,derivateCutOff:2.5,thresholdCutOff:.5,thresholdBeta:5,disableValueScaling:!0},be={maxTracks:18,maxAge:1e3,minSimilarity:.2,keypointTrackerParams:{keypointConfidenceThreshold:.3,keypointFalloff:[.026,.025,.025,.035,.035,.079,.079,.072,.072,.062,.062,.107,.107,.087,.087,.089,.089],minNumberOfKeypoints:4}},xe={maxTracks:18,maxAge:1e3,minSimilarity:.15,trackerParams:{}};function ve(e,t){var n,s,r,a;return e?t.width>t.height?(n=1,s=t.height/t.width,r=0,a=(t.width/2-t.height/2)/t.width):(n=t.width/t.height,s=1,r=(t.height/2-t.width/2)/t.height,a=0):t.width>t.height?(n=t.width/t.height,s=1,r=(t.height/2-t.width/2)/t.height,a=0):(n=1,s=t.height/t.width,r=0,a=(t.width/2-t.height/2)/t.width),{yMin:r,xMin:a,yMax:r+n,xMax:a+s,height:n,width:s}}function we(e,t){var n={maxTracks:e.maxTracks,maxAge:e.maxAge,minSimilarity:e.minSimilarity};return null!=t.maxTracks&&(n.maxTracks=t.maxTracks),null!=t.maxAge&&(n.maxAge=t.maxAge),null!=t.minSimilarity&&(n.minSimilarity=t.minSimilarity),n}var ke=function(){function e(e,t){this.moveNetModel=e,this.modelInputResolution={height:0,width:0},this.keypointIndexByName=de(ue.MoveNet),"SinglePose.Lightning"===t.modelType?(this.modelInputResolution.width=192,this.modelInputResolution.height=192):"SinglePose.Thunder"===t.modelType&&(this.modelInputResolution.width=256,this.modelInputResolution.height=256),this.multiPoseModel="MultiPose.Lightning"===t.modelType,this.multiPoseModel||(this.keypointFilter=new $(ye),this.cropRegionFilterYMin=new T(.9),this.cropRegionFilterXMin=new T(.9),this.cropRegionFilterYMax=new T(.9),this.cropRegionFilterXMax=new T(.9)),this.enableSmoothing=t.enableSmoothing,t.minPoseScore?this.minPoseScore=t.minPoseScore:this.minPoseScore=.25,t.multiPoseMaxDimension?this.multiPoseMaxDimension=t.multiPoseMaxDimension:this.multiPoseMaxDimension=256,this.enableTracking=t.enableTracking,this.multiPoseModel&&this.enableTracking&&(t.trackerType===oe.Keypoint?this.tracker=new pe(t.trackerConfig):t.trackerType===oe.BoundingBox&&(this.tracker=new he(t.trackerConfig)),this.enableSmoothing&&(this.keypointFilterMap=new Map))}return e.prototype.runSinglePersonPoseModel=function(e){return l(this,void 0,void 0,(function(){var t,n,s,r,i;return c(this,(function(o){switch(o.label){case 0:if(4!==(t=this.moveNetModel.execute(e)).shape.length||1!==t.shape[0]||1!==t.shape[1]||17!==t.shape[2]||3!==t.shape[3])throw t.dispose(),new Error("Unexpected output shape from model: ["+t.shape+"]");return"webgpu"===(0,a.N_N)()?[3,1]:(n=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:n=o.sent(),o.label=3;case 3:for(t.dispose(),s={keypoints:[],score:0},r=0,i=0;i<17;++i)s.keypoints[i]={y:n[3*i],x:n[3*i+1],score:n[3*i+2]},s.keypoints[i].score>.2&&(++r,s.score+=s.keypoints[i].score);return r>0&&(s.score/=r),[2,s]}}))}))},e.prototype.runMultiPersonPoseModel=function(e){return l(this,void 0,void 0,(function(){var t,n,s,r,i,o,u,l;return c(this,(function(c){switch(c.label){case 0:if(3!==(t=this.moveNetModel.execute(e)).shape.length||1!==t.shape[0]||56!==t.shape[2])throw t.dispose(),new Error("Unexpected output shape from model: ["+t.shape+"]");return"webgpu"===(0,a.N_N)()?[3,1]:(n=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:n=c.sent(),c.label=3;case 3:for(t.dispose(),s=[],r=n.length/56,i=0;i<r;++i)for(s[i]={keypoints:[]},o=56*i+51,s[i].box={yMin:n[o],xMin:n[o+1],yMax:n[o+2],xMax:n[o+3],width:n[o+3]-n[o+1],height:n[o+2]-n[o]},u=56*i+55,s[i].score=n[u],s[i].keypoints=[],l=0;l<17;++l)s[i].keypoints[l]={y:n[56*i+3*l],x:n[56*i+3*l+1],score:n[56*i+3*l+2]};return[2,s]}}))}))},e.prototype.estimatePoses=function(e,t,n){return void 0===t&&(t=ge),l(this,void 0,void 0,(function(){var s,r,i,o,l,p;return c(this,(function(c){switch(c.label){case 0:return t=function(e){return null==e?ge:u({},e)}(t),null==e?(this.reset(),[2,[]]):(null==n?N(e)&&(n=1e6*e.currentTime):n*=1e3,s=k(e),r=v(s),i=(0,a.dt4)(s,0),e instanceof a.esB||s.dispose(),o=[],this.multiPoseModel?[3,2]:[4,this.estimateSinglePose(i,r,n)]);case 1:return o=c.sent(),[3,4];case 2:return[4,this.estimateMultiplePoses(i,r,n)];case 3:o=c.sent(),c.label=4;case 4:for(l=0;l<o.length;++l)for(p=0;p<o[l].keypoints.length;++p)o[l].keypoints[p].name=h[p],o[l].keypoints[p].y*=r.height,o[l].keypoints[p].x*=r.width;return[2,o]}}))}))},e.prototype.estimateSinglePose=function(e,t,n){return l(this,void 0,void 0,(function(){var s,r,i,o,u=this;return c(this,(function(l){switch(l.label){case 0:return this.cropRegion||(this.cropRegion=ve(null==this.cropRegion,t)),s=(0,a.lub)((function(){var t=(0,a.odF)([[u.cropRegion.yMin,u.cropRegion.xMin,u.cropRegion.yMax,u.cropRegion.xMax]]),n=(0,a.lls)([1],"int32"),s=[u.modelInputResolution.height,u.modelInputResolution.width];return(0,a.pju)(a.BHj.cropAndResize(e,t,n,s,"bilinear",0),"int32")})),e.dispose(),[4,this.runSinglePersonPoseModel(s)];case 1:if(r=l.sent(),s.dispose(),r.score<this.minPoseScore)return this.reset(),[2,[]];for(i=0;i<r.keypoints.length;++i)r.keypoints[i].y=this.cropRegion.yMin+r.keypoints[i].y*this.cropRegion.height,r.keypoints[i].x=this.cropRegion.xMin+r.keypoints[i].x*this.cropRegion.width;return null!=n&&this.enableSmoothing&&(r.keypoints=this.keypointFilter.apply(r.keypoints,n,1)),o=function(e,t,n,s){for(var r={},a=0,i=h;a<i.length;a++){var o=i[a];r[o]=[t[n[o]].y*s.height,t[n[o]].x*s.width]}if(function(e,t){return(e[t.left_hip].score>.2||e[t.right_hip].score>.2)&&(e[t.left_shoulder].score>.2||e[t.right_shoulder].score>.2)}(t,n)){var u=(r.left_hip[0]+r.right_hip[0])/2,l=(r.left_hip[1]+r.right_hip[1])/2,c=function(e,t,n,s,r){for(var a=["left_shoulder","right_shoulder","left_hip","right_hip"],i=0,o=0,u=0;u<a.length;u++)(d=Math.abs(s-n[a[u]][0]))>i&&(i=d),(f=Math.abs(r-n[a[u]][1]))>o&&(o=f);for(var l=0,c=0,h=0,p=Object.keys(n);h<p.length;h++){var d,f,m=p[h];e[t[m]].score<.2||((d=Math.abs(s-n[m][0]))>l&&(l=d),(f=Math.abs(r-n[m][1]))>c&&(c=f))}return[i,o,l,c]}(t,n,r,u,l),p=c[0],d=c[1],f=c[2],m=c[3],g=Math.max(1.9*d,1.9*p,1.2*f,1.2*m),y=[u-(g=Math.min(g,Math.max(l,s.width-l,u,s.height-u))),l-g];if(g>Math.max(s.width,s.height)/2)return ve(null==e,s);var b=2*g;return{yMin:y[0]/s.height,xMin:y[1]/s.width,yMax:(y[0]+b)/s.height,xMax:(y[1]+b)/s.width,height:(y[0]+b)/s.height-y[0]/s.height,width:(y[1]+b)/s.width-y[1]/s.width}}return ve(null==e,s)}(this.cropRegion,r.keypoints,this.keypointIndexByName,t),this.cropRegion=this.filterCropRegion(o),[2,[r]]}}))}))},e.prototype.estimateMultiplePoses=function(e,t,n){return l(this,void 0,void 0,(function(){var s,r,i,o,u,l,h,p,d,f,m,g=this;return c(this,(function(c){switch(c.label){case 0:return t.width>t.height?(r=this.multiPoseMaxDimension,i=Math.round(this.multiPoseMaxDimension*t.height/t.width),s=a.BHj.resizeBilinear(e,[i,r]),u=r,l=32*Math.ceil(i/32),o=(0,a.vku)(s,[[0,0],[0,l-i],[0,0],[0,0]])):(r=Math.round(this.multiPoseMaxDimension*t.width/t.height),i=this.multiPoseMaxDimension,s=a.BHj.resizeBilinear(e,[i,r]),u=32*Math.ceil(r/32),l=i,o=(0,a.vku)(s,[[0,0],[0,0],[0,u-r],[0,0]])),s.dispose(),e.dispose(),h=(0,a.pju)(o,"int32"),o.dispose(),[4,this.runMultiPersonPoseModel(h)];case 1:for(p=c.sent(),h.dispose(),p=p.filter((function(e){return e.score>=g.minPoseScore})),f=0;f<p.length;++f)for(d=0;d<p[f].keypoints.length;++d)p[f].keypoints[d].y*=l/i,p[f].keypoints[d].x*=u/r;if(this.enableTracking&&(this.tracker.apply(p,n),this.enableSmoothing)){for(f=0;f<p.length;++f)this.keypointFilterMap.has(p[f].id)||this.keypointFilterMap.set(p[f].id,new $(ye)),p[f].keypoints=this.keypointFilterMap.get(p[f].id).apply(p[f].keypoints,n,1);m=this.tracker.getTrackIDs(),this.keypointFilterMap.forEach((function(e,t){m.has(t)||g.keypointFilterMap.delete(t)}))}return[2,p]}}))}))},e.prototype.filterCropRegion=function(e){if(e){var t=this.cropRegionFilterYMin.apply(e.yMin),n=this.cropRegionFilterXMin.apply(e.xMin),s=this.cropRegionFilterYMax.apply(e.yMax),r=this.cropRegionFilterXMax.apply(e.xMax);return{yMin:t,xMin:n,yMax:s,xMax:r,height:s-t,width:r-n}}return this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset(),null},e.prototype.dispose=function(){this.moveNetModel.dispose()},e.prototype.reset=function(){this.cropRegion=null,this.resetFilters()},e.prototype.resetFilters=function(){this.keypointFilter.reset(),this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset()},e}();function Ie(e){return void 0===e&&(e=me),l(this,void 0,void 0,(function(){var t,n,s,i;return c(this,(function(o){switch(o.label){case 0:return t=function(e){var t,n=null==e?me:u({},e);if(null==n.modelType)n.modelType="SinglePose.Lightning";else if(fe.indexOf(n.modelType)<0)throw new Error("Invalid architecture "+n.modelType+". Should be one of "+fe);if(null==n.enableSmoothing&&(n.enableSmoothing=!0),null!=n.minPoseScore&&(n.minPoseScore<0||n.minPoseScore>1))throw new Error("minPoseScore should be between 0.0 and 1.0");if(null!=n.multiPoseMaxDimension&&(n.multiPoseMaxDimension%32!=0||n.multiPoseMaxDimension<128||n.multiPoseMaxDimension>512))throw new Error("multiPoseResolution must be a multiple of 32 and between 128 and 512");if("MultiPose.Lightning"===n.modelType&&null==n.enableTracking&&(n.enableTracking=!0),"MultiPose.Lightning"===n.modelType&&!0===n.enableTracking)if(null==n.trackerType&&(n.trackerType=oe.BoundingBox),n.trackerType===oe.Keypoint)null!=n.trackerConfig?n.trackerConfig=function(e){var t=we(be,e);return t.keypointTrackerParams=u({},be.keypointTrackerParams),null!=e.keypointTrackerParams&&(null!=e.keypointTrackerParams.keypointConfidenceThreshold&&(t.keypointTrackerParams.keypointConfidenceThreshold=e.keypointTrackerParams.keypointConfidenceThreshold),null!=e.keypointTrackerParams.keypointFalloff&&(t.keypointTrackerParams.keypointFalloff=e.keypointTrackerParams.keypointFalloff),null!=e.keypointTrackerParams.minNumberOfKeypoints&&(t.keypointTrackerParams.minNumberOfKeypoints=e.keypointTrackerParams.minNumberOfKeypoints)),t}(n.trackerConfig):n.trackerConfig=be;else{if(n.trackerType!==oe.BoundingBox)throw new Error("Tracker type not supported by MoveNet");null!=n.trackerConfig?n.trackerConfig=(t=n.trackerConfig,we(xe,t)):n.trackerConfig=xe}return n}(e),s=!0,t.modelUrl?(s=t.modelUrl.indexOf("https://tfhub.dev")>-1,[4,(0,r.YL)(t.modelUrl,{fromTFHub:s})]):[3,2];case 1:return n=o.sent(),[3,4];case 2:return i=void 0,"SinglePose.Lightning"===t.modelType?i="https://tfhub.dev/google/tfjs-model/movenet/singlepose/lightning/4":"SinglePose.Thunder"===t.modelType?i="https://tfhub.dev/google/tfjs-model/movenet/singlepose/thunder/4":"MultiPose.Lightning"===t.modelType&&(i="https://tfhub.dev/google/tfjs-model/movenet/multipose/lightning/1"),[4,(0,r.YL)(i,{fromTFHub:s})];case 3:n=o.sent(),o.label=4;case 4:return"webgl"===(0,a.N_N)()&&(0,a.OBj)().set("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",0),[2,new ke(n,t)]}}))}))}var Se={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:{height:257,width:257}},Ne=["MobileNetV1","ResNet50"],Te={MobileNetV1:[8,16],ResNet50:[16]},Ce=[8,16,32],$e={MobileNetV1:[.5,.75,1],ResNet50:[1]},Ee=[1,2,4],Ae={maxPoses:1,flipHorizontal:!1},De={maxPoses:5,flipHorizontal:!1,scoreThreshold:.5,nmsRadius:20},Re=[-123.15,-115.9,-103.06];function _e(e){return Math.floor(e/2)}var Fe=function(){function e(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return e.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},e.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},e.prototype.empty=function(){return-1===this.numberOfElements},e.prototype.size=function(){return this.numberOfElements+1},e.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},e.prototype.max=function(){return this.priorityQueue[0]},e.prototype.swim=function(e){for(;e>0&&this.less(_e(e),e);)this.exchange(e,_e(e)),e=_e(e)},e.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},e.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},e.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},e.prototype.exchange=function(e,t){var n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n},e}();function Oe(e,t,n,s,r,a){for(var i=a.shape,o=i[0],u=i[1],l=!0,c=Math.max(n-r,0),h=Math.min(n+r+1,o),p=c;p<h;++p){for(var d=Math.max(s-r,0),f=Math.min(s+r+1,u),m=d;m<f;++m)if(a.get(p,m,e)>t){l=!1;break}if(!l)break}return l}function Me(e){return l(this,void 0,void 0,(function(){return c(this,(function(t){return[2,Promise.all(e.map((function(e){return e.buffer()})))]}))}))}function Le(e,t,n,s){return{y:s.get(e,t,n),x:s.get(e,t,n+17)}}function ze(e,t,n){var s=Le(e.heatmapY,e.heatmapX,e.id,n),r=s.y,a=s.x;return{x:e.heatmapX*t+a,y:e.heatmapY*t+r}}function Be(e,t,n,s){var r=n.x,a=n.y;return e.some((function(e){var n,i,o,u,l=e.keypoints;return n=a,i=r,(o=l[s].y-n)*o+(u=l[s].x-i)*u<=t}))}var Pe=h.reduce((function(e,t,n){return e[t]=n,e}),{}),Ue=[["nose","left_eye"],["left_eye","left_ear"],["nose","right_eye"],["right_eye","right_ear"],["nose","left_shoulder"],["left_shoulder","left_elbow"],["left_elbow","left_wrist"],["left_shoulder","left_hip"],["left_hip","left_knee"],["left_knee","left_ankle"],["nose","right_shoulder"],["right_shoulder","right_elbow"],["right_elbow","right_wrist"],["right_shoulder","right_hip"],["right_hip","right_knee"],["right_knee","right_ankle"]].map((function(e){var t=e[0],n=e[1];return[Pe[t],Pe[n]]})),We=Ue.map((function(e){return e[1]})),Ve=Ue.map((function(e){return e[0]}));function He(e,t,n){return e<t?t:e>n?n:e}function Ge(e,t,n,s){return{y:He(Math.round(e.y/t),0,n-1),x:He(Math.round(e.x/t),0,s-1)}}function je(e,t){return{x:e.x+t.x,y:e.y+t.y}}function Xe(e,t,n,s,r,a,i,o){void 0===o&&(o=2);for(var u=s.shape,l=u[0],c=u[1],p={y:t.y,x:t.x},d=je(p,function(e,t,n){var s=n.shape[2]/2;return{y:n.get(t.y,t.x,e),x:n.get(t.y,t.x,s+e)}}(e,Ge(p,a,l,c),i)),f=0;f<o;f++){var m=Ge(d,a,l,c),g=Le(m.y,m.x,n,r);d=je({x:m.x*a,y:m.y*a},{x:g.x,y:g.y})}var y=Ge(d,a,l,c),b=s.get(y.y,y.x,n);return{y:d.y,x:d.x,name:h[n],score:b}}function qe(e,t,n,s,r,a){var i=t.shape[2],o=We.length,u=new Array(i),l=e.part,c=e.score,p=ze(l,s,n);u[l.id]={score:c,name:h[l.id],y:p.y,x:p.x};for(var d=o-1;d>=0;--d){var f=We[d],m=Ve[d];u[f]&&!u[m]&&(u[m]=Xe(d,u[f],m,t,n,s,a))}for(d=0;d<o;++d)f=Ve[d],m=We[d],u[f]&&!u[m]&&(u[m]=Xe(d,u[f],m,t,n,s,r));return u}function Ke(e,t,n){return n.reduce((function(n,s,r){var a=s.y,i=s.x,o=s.score;return Be(e,t,{y:a,x:i},r)||(n+=o),n}),0)/n.length}function Ye(e,t,n,s,r,a,i,o){return void 0===i&&(i=.5),void 0===o&&(o=20),l(this,void 0,void 0,(function(){var u,l,h,p,d,f,m,g,y,b,x,v;return c(this,(function(c){switch(c.label){case 0:return[4,Me([e,t,n,s])];case 1:for(u=c.sent(),l=u[0],h=u[1],p=u[2],d=u[3],f=[],m=function(e,t,n){for(var s=n.shape,r=s[0],a=s[1],i=s[2],o=new Fe(r*a*i,(function(e){return e.score})),u=0;u<r;++u)for(var l=0;l<a;++l)for(var c=0;c<i;++c){var h=n.get(u,l,c);h<e||Oe(c,h,u,l,1,n)&&o.enqueue({score:h,part:{heatmapY:u,heatmapX:l,id:c}})}return o}(i,0,l),g=o*o;f.length<a&&!m.empty();)y=m.dequeue(),b=ze(y.part,r,h),Be(f,g,b,y.part.id)||(x=qe(y,l,h,r,p,d),v=Ke(f,g,x),f.push({keypoints:x,score:v}));return[2,f]}}))}))}function Qe(e,t,n){return(0,a.lub)((function(){var s=function(e,t){for(var n=[],s=0;s<h.length;s++){var r=Je(e.get(s,0).valueOf(),e.get(s,1).valueOf(),s,t),i=r.x,o=r.y;n.push(o),n.push(i)}return(0,a.odF)(n,[h.length,2])}(e,n);return(0,a.IHx)((0,a.pju)((0,a.dC7)(e.toTensor(),(0,a.iD$)(t,"int32")),"float32"),s)}))}function Je(e,t,n,s){return{y:s.get(e,t,n),x:s.get(e,t,n+h.length)}}function Ze(e,t,n){return l(this,void 0,void 0,(function(){var s,r,i,o,u,l,p,d,f,m;return c(this,(function(c){switch(c.label){case 0:return s=0,r=function(e){var t=e.shape,n=t[0],s=t[1],r=t[2];return(0,a.lub)((function(){var t,i,o=(0,a.XLQ)(e,[n*s,r]),u=(0,a.NqF)(o,0),l=(0,a.dt4)((0,a.hiC)(u,(0,a.iD$)(s,"int32")),1),c=(0,a.dt4)((t=u,i=s,(0,a.lub)((function(){var e=(0,a.hiC)(t,(0,a.iD$)(i,"int32"));return(0,a.luU)(t,(0,a.dC7)(e,(0,a.iD$)(i,"int32")))}))),1);return(0,a.zoF)([l,c],1)}))}(e),[4,Promise.all([e.buffer(),t.buffer(),r.buffer()])];case 1:return i=c.sent(),o=i[0],u=i[1],l=i[2],[4,(p=Qe(l,n,u)).buffer()];case 2:return d=c.sent(),f=Array.from(function(e,t){for(var n=t.shape[0],s=new Float32Array(n),r=0;r<n;r++){var a=t.get(r,0),i=t.get(r,1);s[r]=e.get(a,i,r)}return s}(o,l)),m=f.map((function(e,t){return s+=e,{y:d.get(t,0),x:d.get(t,1),score:e,name:h[t]}})),r.dispose(),p.dispose(),[2,{keypoints:m,score:s/m.length}]}}))}))}function et(e,t){return(e-1)%t==0}var tt="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/",nt="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/";function st(e,t){return function(e,t){return(e-1)%t==0}(e,t)?e:Math.floor(e/t)*t+1}var rt=function(){function e(e,t){this.posenetModel=e;var n=this.posenetModel.inputs[0].shape;a.D5U.assert(-1===n[1]&&-1===n[2],(function(){return"Input shape ["+n[1]+", "+n[2]+"] must both be equal to or -1"}));var s,r,i=(s=t.inputResolution,r=t.outputStride,{height:st(s.height,r),width:st(s.width,r)});!function(e){a.D5U.assert(Ce.indexOf(e)>=0,(function(){return"outputStride of "+e+" is invalid. It must be either 8 or 16."}))}(t.outputStride),function(e,t){a.D5U.assert(et(e.height,t),(function(){return"height of "+e.height+" is invalid for output stride "+t+"."})),a.D5U.assert(et(e.width,t),(function(){return"width of "+e.width+" is invalid for output stride "+t+"."}))}(i,t.outputStride),this.inputResolution=i,this.outputStride=t.outputStride,this.architecture=t.architecture}return e.prototype.estimatePoses=function(e,t){return void 0===t&&(t=Ae),l(this,void 0,void 0,(function(){var n,s,r,i,o,l,h,p,d,f,m,g,y,b,x;return c(this,(function(c){switch(c.label){case 0:return n=function(e){var t=e;if(null==t.maxPoses&&(t.maxPoses=1),t.maxPoses<=0)throw new Error("Invalid maxPoses "+t.maxPoses+". Should be > 0.");if(t.maxPoses>1){if((t=u({},De,t)).scoreThreshold<0||t.scoreThreshold>1)throw new Error("Invalid scoreThreshold "+t.scoreThreshold+". Should be in range [0.0, 1.0]");if(t.nmsRadius<=0)throw new Error("Invalid nmsRadius "+t.nmsRadius+".")}return t}(t),null==e?[2,[]]:(this.maxPoses=n.maxPoses,s=S(e,{inputResolution:this.inputResolution,keepAspectRatio:!0}),r=s.imageTensor,i=s.padding,o="ResNet50"===this.architecture?(0,a.IHx)(r,Re):_(r,[-1,1]),l=this.posenetModel.predict(o),"ResNet50"===this.architecture?(h=(0,a.L9e)(l[2],[0]),p=(0,a.L9e)(l[3],[0]),d=(0,a.L9e)(l[0],[0]),f=(0,a.L9e)(l[1],[0])):(h=(0,a.L9e)(l[0],[0]),p=(0,a.L9e)(l[1],[0]),d=(0,a.L9e)(l[2],[0]),f=(0,a.L9e)(l[3],[0])),m=(0,a.XD2)(p),1!==this.maxPoses?[3,2]:[4,Ze(m,h,this.outputStride)]);case 1:return y=c.sent(),g=[y],[3,4];case 2:return[4,Ye(m,h,d,f,this.outputStride,this.maxPoses,n.scoreThreshold,n.nmsRadius)];case 3:g=c.sent(),c.label=4;case 4:return b=v(e),x=function(e,t,n,s){var r=t.height,a=t.width,i=r/(n.height*(1-s.top-s.bottom)),o=a/(n.width*(1-s.left-s.right)),u=-s.top*n.height,l=-s.left*n.width;if(1===o&&1===i&&0===u&&0===l)return e;for(var c=0,h=e;c<h.length;c++)for(var p=0,d=h[c].keypoints;p<d.length;p++){var f=d[p];f.x=(f.x+l)*o,f.y=(f.y+u)*i}return e}(g,b,this.inputResolution,i),n.flipHorizontal&&(x=function(e,t){for(var n=0,s=e;n<s.length;n++)for(var r=0,a=s[n].keypoints;r<a.length;r++){var i=a[r];i.x=t.width-1-i.x}return e}(x,b)),r.dispose(),o.dispose(),(0,a.B90)(l),h.dispose(),p.dispose(),d.dispose(),f.dispose(),m.dispose(),[2,x]}}))}))},e.prototype.dispose=function(){this.posenetModel.dispose()},e.prototype.reset=function(){},e}();function at(e){return void 0===e&&(e=Se),l(this,void 0,void 0,(function(){var t,n,s,a,i;return c(this,(function(o){switch(o.label){case 0:return"ResNet50"!==(t=function(e){var t=e||Se;if(null==t.architecture&&(t.architecture="MobileNetV1"),Ne.indexOf(t.architecture)<0)throw new Error("Invalid architecture "+t.architecture+". Should be one of "+Ne);if(null==t.inputResolution&&(t.inputResolution={height:257,width:257}),null==t.outputStride&&(t.outputStride=16),Te[t.architecture].indexOf(t.outputStride)<0)throw new Error("Invalid outputStride "+t.outputStride+". Should be one of "+Te[t.architecture]+" for architecture "+t.architecture+".");if(null==t.multiplier&&(t.multiplier=1),$e[t.architecture].indexOf(t.multiplier)<0)throw new Error("Invalid multiplier "+t.multiplier+". Should be one of "+$e[t.architecture]+" for architecture "+t.architecture+".");if(null==t.quantBytes&&(t.quantBytes=4),Ee.indexOf(t.quantBytes)<0)throw new Error("Invalid quantBytes "+t.quantBytes+". Should be one of "+Ee+" for architecture "+t.architecture+".");if("MobileNetV1"===t.architecture&&32===t.outputStride&&1!==t.multiplier)throw new Error("When using an output stride of 32, you must select 1 as the multiplier.");return t}(e)).architecture?[3,2]:(u=t.outputStride,l=t.quantBytes,c="model-stride"+u+".json",n=4===l?nt+"float/"+c:nt+"quant"+l+"/"+c,[4,(0,r.YL)(t.modelUrl||n)]);case 1:return s=o.sent(),[2,new rt(s,t)];case 2:return a=function(e,t,n){var s={1:"100",.75:"075",.5:"050"},r="model-stride"+e+".json";return 4===n?tt+"float/"+s[t]+"/"+r:tt+"quant"+n+"/"+s[t]+"/"+r}(t.outputStride,t.multiplier,t.quantBytes),[4,(0,r.YL)(t.modelUrl||a)];case 3:return i=o.sent(),[2,new rt(i,t)]}var u,l,c}))}))}function it(e,t){return l(this,void 0,void 0,(function(){var n,s;return c(this,(function(r){switch(e){case ue.PoseNet:return[2,at(t)];case ue.BlazePose:if(s=void 0,null!=(n=t)){if("tfjs"===n.runtime)return[2,ie(t)];if("mediapipe"===n.runtime)return[2,x(t)];s=n.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' or 'mediapipe', but got "+s);case ue.MoveNet:return[2,Ie(t)];default:throw new Error(e+" is not a supported model name.")}}))}))}var ot={modelType:{SINGLEPOSE_LIGHTNING:"SinglePose.Lightning",SINGLEPOSE_THUNDER:"SinglePose.Thunder",MULTIPOSE_LIGHTNING:"MultiPose.Lightning"}}},8166:(e,t,n)=>{"use strict";n.d(t,{H:()=>r});var s=n(1140);function r(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&s.D5U.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}},224:(e,t,n)=>{"use strict";n.d(t,{bk:()=>a,fC:()=>i});var s=n(1140),r=n(8166);function a(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const i={kernelName:s.SYM,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;(0,r.H)(t,"abs");let i=new Float32Array(s.D5U.sizeFromShape(t.shape));return i=a(n.data.get(t.dataId).values),n.makeOutput(i,t.shape,"float32")}}},2779:(e,t,n)=>{"use strict";n.d(t,{EH:()=>i,IH:()=>u,j4:()=>l});var s=n(1140),r=n(3533),a=n(6205);const i=(0,r.b)(((e,t)=>e+t)),o=(0,a.H)(((e,t,n,s)=>({real:e+n,imag:t+s}))),u=(0,a.j)(s.mm_,i,o),l={kernelName:s.mm_,backendName:"cpu",kernelFunc:u}},8607:(e,t,n)=>{"use strict";n.d(t,{W:()=>r,i:()=>a});var s=n(1140);function r(e,t,n,r,a){const i=s.D5U.sizeFromShape(r),o=s.D5U.makeZerosTypedArray(a,n);for(let n=0;n<e.length;n++){const s=e[n];if(s<0)throw new Error("Input x must be non-negative!");s>=a||(o[s]+=i>0?t[n]:1)}return o}function a(e,t,n,r=!1){const a=e.shape[0],i=e.shape[1],o=(0,s.f3b)([a,n],t.dtype);for(let s=0;s<a;s++)for(let a=0;a<i;a++){const i=e.get(s,a);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(r?o.set(1,s,i):t.size>0?o.set(o.get(s,i)+t.get(s,a),s,i):o.set(o.get(s,i)+1,s,i))}return o}},9258:(e,t,n)=>{"use strict";n.d(t,{p:()=>l,M:()=>c});var s=n(1140),r=n(3533),a=n(4391),i=n(6961),o=n(1775),u=n(2186);function l(e){const{inputs:t,backend:n,attrs:c}=e,{x:h}=t,{dtype:p}=c;if("complex64"===p){if("complex64"===h.dtype)return(0,o.y)({inputs:{x:h},backend:n});const e=(0,a.l)(n,h.shape,h.dtype),t=l({inputs:{x:h},backend:n,attrs:{dtype:"float32"}}),s=(0,i.P)({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),s}if("complex64"===h.dtype){const e=(0,u.k)({inputs:{input:h},backend:n}),t=l({inputs:{x:e},backend:n,attrs:{dtype:p}});return n.disposeIntermediateTensorInfo(e),t}if(!s.D5U.hasEncodingLoss(h.dtype,p)){const e=(0,o.y)({inputs:{x:h},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:p}}if("int32"===p){const e=n.data.get(h.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(h.shape,"int32",t)}if("bool"===p){const e=n.data.get(h.dataId).values,t=s.D5U.toTypedArray([0],h.dtype),[a,i]=(0,r.b)(((e,t)=>e!==t?1:0))(h.shape,[],e,t,"bool");return n.makeTensorInfo(i,"bool",a)}throw new Error(`Error in Cast: failed to cast ${h.dtype} to ${p}`)}const c={kernelName:s.RFZ,backendName:"cpu",kernelFunc:l}},4769:(e,t,n)=>{"use strict";n.d(t,{__:()=>i,y2:()=>u});var s=n(1140),r=n(8029),a=n(6738);const i=(0,r.a)((e=>Math.ceil(e))),o=(0,a.O)(s.gJX,i),u={kernelName:s.gJX,backendName:"cpu",kernelFunc:o}},6961:(e,t,n)=>{"use strict";function s(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",i)},o}n.d(t,{P:()=>s,z:()=>r});const r={kernelName:n(1140).Zz9,backendName:"cpu",kernelFunc:s}},8926:(e,t,n)=>{"use strict";n.d(t,{j:()=>r});var s=n(1140);function r(e,t,n,r){const a=s.D5U.getArrayFromDType(n,s.D5U.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=s.D5U.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const i="string"===n?s.Wap.fromUint8ToStringArray(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const s=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[s+t]=i[o++]}r+=e.shape[1]}))}return a}},7679:(e,t,n)=>{"use strict";n.d(t,{tW:()=>i,Dg:()=>o,Kx:()=>u});var s=n(1140),r=n(3533),a=n(6205);const i=(0,r.b)(((e,t)=>e===t?1:0)),o=(0,a.j)(s.hdR,i,null,"bool"),u={kernelName:s.hdR,backendName:"cpu",kernelFunc:o}},1211:(e,t,n)=>{"use strict";n.d(t,{Ro:()=>i,Qq:()=>o,SX:()=>u});var s=n(1140),r=n(8029),a=n(6738);const i=(0,r.a)((e=>Math.exp(e))),o=(0,a.O)(s.NEP,i),u={kernelName:s.NEP,backendName:"cpu",kernelFunc:o}},969:(e,t,n)=>{"use strict";n.d(t,{OF:()=>i,Vu:()=>u});var s=n(1140),r=n(8029),a=n(6738);const i=(0,r.a)((e=>Math.expm1(e))),o=(0,a.O)(s.Y0y,i),u={kernelName:s.Y0y,backendName:"cpu",kernelFunc:o}},6574:(e,t,n)=>{"use strict";n.d(t,{r6:()=>i,Ao:()=>u});var s=n(1140),r=n(8029),a=n(6738);const i=(0,r.a)((e=>Math.floor(e))),o=(0,a.O)(s.OR,i),u={kernelName:s.OR,backendName:"cpu",kernelFunc:o}},1820:(e,t,n)=>{"use strict";n.d(t,{m:()=>r});var s=n(1140);function r(e,t,n,r,a,i,o,u,l){const c=(0,s.f3b)([r,i],n);for(let n=0;n<r;n++){const s=[];let r=0;for(let t=0;t<a;t++){const i=e[n*a+t];r+=i*o[t],s.push(i)}if(r<0||r>=l/i)throw new Error(`Invalid indices: ${s} does not index into ${u}`);for(let e=0;e<i;e++)c.values[n*i+e]=t.get(...t.indexToLoc(r*i+e))}return c}},4468:(e,t,n)=>{"use strict";n.d(t,{i:()=>r});var s=n(1140);function r(e,t,n){const r=(0,s.f3b)(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),a=s[0],i=s[2],o=t.locToIndex([a,i]);s[2]=t.values[o];const u=e.locToIndex(s);r.values[n]=e.values[u]}return r}},6272:(e,t,n)=>{"use strict";n.d(t,{o:()=>i,Ce:()=>u});var s=n(1140),r=n(3533),a=n(6205);const i=(0,r.b)(((e,t)=>e>t?1:0)),o=(0,a.j)(s.iZT,i,null,"bool"),u={kernelName:s.iZT,backendName:"cpu",kernelFunc:o}},6259:(e,t,n)=>{"use strict";n.d(t,{HL:()=>i,V:()=>u});var s=n(1140),r=n(3533),a=n(6205);const i=(0,r.b)(((e,t)=>e>=t?1:0)),o=(0,a.j)(s.Acj,i,null,"bool"),u={kernelName:s.Acj,backendName:"cpu",kernelFunc:o}},1775:(e,t,n)=>{"use strict";function s(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}n.d(t,{y:()=>s,I:()=>r});const r={kernelName:n(1140).iJz,backendName:"cpu",kernelFunc:s}},8405:(e,t,n)=>{"use strict";n.d(t,{rO:()=>i,zh:()=>u});var s=n(1140),r=n(3533),a=n(6205);const i=(0,r.b)(((e,t)=>e<t?1:0)),o=(0,a.j)(s.vtC,i,null,"bool"),u={kernelName:s.vtC,backendName:"cpu",kernelFunc:o}},635:(e,t,n)=>{"use strict";n.d(t,{lx:()=>i,m3:()=>u});var s=n(1140),r=n(3533),a=n(6205);const i=(0,r.b)(((e,t)=>e<=t?1:0)),o=(0,a.j)(s.CAk,i,null,"bool"),u={kernelName:s.CAk,backendName:"cpu",kernelFunc:o}},1325:(e,t,n)=>{"use strict";n.d(t,{b:()=>r});var s=n(1140);function r(e,t,n){const r=(t-e)/(n-1),a=s.D5U.makeZerosTypedArray(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}},5223:(e,t,n)=>{"use strict";n.d(t,{vX:()=>i,xM:()=>u});var s=n(1140),r=n(8029),a=n(6738);const i=(0,r.a)((e=>Math.log(e))),o=(0,a.O)(s.ZbH,i),u={kernelName:s.ZbH,backendName:"cpu",kernelFunc:o}},5126:(e,t,n)=>{"use strict";n.d(t,{B:()=>r});var s=n(1140);function r(e,t,n,r){const a=s.D5U.getTypedArrayFromDType(r,s.D5U.sizeFromShape(n));for(let n=0;n<a.length;++n){const s=n*t;let r=e[s];for(let n=0;n<t;++n){const t=e[s+n];(Number.isNaN(t)||t>r)&&(r=t)}a[n]=r}return a}},1717:(e,t,n)=>{"use strict";n.d(t,{wS:()=>i,eJ:()=>u});var s=n(1140),r=n(3533),a=n(6205);const i=(0,r.b)(((e,t)=>Math.max(e,t))),o=(0,a.j)(s.BMI,i),u={kernelName:s.BMI,backendName:"cpu",kernelFunc:o}},612:(e,t,n)=>{"use strict";n.d(t,{vP:()=>i,u0:()=>u});var s=n(1140),r=n(3533),a=n(6205);const i=(0,r.b)(((e,t)=>Math.min(e,t))),o=(0,a.j)(s.q8u,i),u={kernelName:s.q8u,backendName:"cpu",kernelFunc:o}},1917:(e,t,n)=>{"use strict";n.d(t,{$3:()=>i,Jp:()=>u,f$:()=>l});var s=n(1140),r=n(3533),a=n(6205);const i=(0,r.b)(((e,t)=>e*t)),o=(0,a.H)(((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n}))),u=(0,a.j)(s.wYn,i,o),l={kernelName:s.wYn,backendName:"cpu",kernelFunc:u}},854:(e,t,n)=>{"use strict";n.d(t,{uC:()=>i,AF:()=>o});var s=n(1140),r=n(8166),a=n(1917);function i(e,t,n){const r=s.D5U.createScalarValue(-1,n);return(0,a.$3)([],t,r,e,n)}const o={kernelName:s.kuV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;(0,r.H)(s,"neg");const a=n.data.get(s.dataId).values,[o,u]=i(a,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,o)}}},8584:(e,t,n)=>{"use strict";n.d(t,{Gj:()=>i,nP:()=>u});var s=n(1140),r=n(3533),a=n(6205);const i=(0,r.b)(((e,t)=>e!==t?1:0)),o=(0,a.j)(s.yQU,i,null,"bool"),u={kernelName:s.yQU,backendName:"cpu",kernelFunc:o}},9560:(e,t,n)=>{"use strict";n.d(t,{Qg:()=>i,Iz:()=>o});var s=n(1140),r=n(8166),a=n(4802);function i(e,t,n,r){const[a,i]=s.Wap.computeOutAndReduceShapes(e,r),o=(0,s.x8V)(t,"int32"),u=s.D5U.makeZerosTypedArray(s.D5U.sizeFromShape(a),o),l=s.D5U.sizeFromShape(i);for(let e=0;e<u.length;++e){const t=e*l;let s=1;for(let e=0;e<l;++e)s*=n[t+e];u[e]=s}return{outVals:u,outShape:a,outDtype:o}}const o={kernelName:s.DlI,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:u}=t,{axis:l,keepDims:c}=o;(0,r.H)(u,"prod");const h=u.shape.length,p=s.D5U.parseAxisParam(l,u.shape),d=s.Wap.getAxesPermutation(p,h);let f=p,m=u;const g=[];null!=d&&(m=(0,a.p)({inputs:{x:u},backend:n,attrs:{perm:d}}),g.push(m),f=s.Wap.getInnerMostAxes(f.length,h));const y=n.data.get(m.dataId).values,{outVals:b,outShape:x,outDtype:v}=i(m.shape,m.dtype,y,f);let w=x;return c&&(w=s.Wap.expandShapeToKeepDim(x,p)),g.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(w,v,b)}}},9230:(e,t,n)=>{"use strict";n.d(t,{b:()=>r});var s=n(1140);function r(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return s.D5U.makeZerosTypedArray(0,r);const a=Math.abs(Math.ceil((t-e)/n)),i=s.D5U.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),i[0]=e;for(let e=1;e<i.length;e++)i[e]=i[e-1]+n;return i}},2186:(e,t,n)=>{"use strict";function s(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}n.d(t,{k:()=>s,O:()=>r});const r={kernelName:n(1140).xJR,backendName:"cpu",kernelFunc:s}},7742:(e,t,n)=>{"use strict";n.d(t,{zd:()=>i,FY:()=>u});var s=n(1140),r=n(8029),a=n(6738);const i=(0,r.a)((e=>1/Math.sqrt(e))),o=(0,a.O)(s.bV0,i),u={kernelName:s.bV0,backendName:"cpu",kernelFunc:o}},108:(e,t,n)=>{"use strict";n.d(t,{VY:()=>i,XD:()=>o,BP:()=>u});var s=n(1140),r=n(8029),a=n(6738);const i=(0,r.a)((e=>1/(1+Math.exp(-e)))),o=(0,a.A)(s.a5O,(e=>1/(1+Math.exp(-e)))),u={kernelName:s.a5O,backendName:"cpu",kernelFunc:o}},2578:(e,t,n)=>{"use strict";n.d(t,{rT:()=>a,tP:()=>i,C6:()=>o});var s=n(1140),r=n(8166);function a(e,t,n,r,a){const i=s.kuN.isSliceContinous(r,t,n),o=s.D5U.sizeFromShape(n),u=s.D5U.computeStrides(r);if(i){const n=s.kuN.computeFlatOffset(t,u);return"string"===a?e.slice(n,n+o):e.subarray(n,n+o)}const l="string"===a?s.Wap.fromUint8ToStringArray(e):e,c=(0,s.f3b)(r,a,l),h=(0,s.f3b)(n,a);for(let e=0;e<h.size;++e){const n=h.indexToLoc(e),s=n.map(((e,n)=>e+t[n]));h.set(c.get(...s),...n)}return"string"===a?s.Wap.fromStringArrayToUint8(h.values):h.values}function i(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t,{begin:u,size:l}=i;(0,r.H)(o,"slice");const[c,h]=s.kuN.parseSliceParams(o,u,l);s.kuN.assertParamsValid(o,c,h);const p=a(n.data.get(o.dataId).values,c,h,o.shape,o.dtype);return n.makeTensorInfo(h,o.dtype,p)}const o={kernelName:s.p2w,backendName:"cpu",kernelFunc:i}},2123:(e,t,n)=>{"use strict";n.d(t,{c:()=>r});var s=n(1140);function r(e,t,n,r,a,i,o){const u=t[0],l=i[0],c=new Array(l),h=new Array(u),p=t[1];if(0===l){if(0!==u)throw new Error(`Received SparseTensor with denseShape[0] = 0 but\n         indices.shape[0] = ${u}`);return[s.D5U.getArrayFromDType(n,0),[0,p],s.D5U.getArrayFromDType(a,0),c,h]}let d=!0,f=0;const m=new Array(l).fill(0);for(let t=0;t<u;++t){const n=e[t*p];if(n<0)throw new Error(`indices(${t}, 0) is invalid: ${n} < 0`);if(n>=l)throw new Error(`indices(${t}, 0) is invalid: ${n} >= ${l}`);++m[n],d=d&&n>=f,f=n}let g=!0;for(let e=0;e<l;++e){const t=0===m[e];c[e]=t,g=g&&!t,m[e]=Math.max(m[e],1),e>0&&(m[e]+=m[e-1])}if(g&&d){const t=e,n=r;for(let e=0;e<u;++e)h[e]=e;return[t,[u,p],n,c,h]}{const t=m[l-1],i=s.D5U.getArrayFromDType(n,t*p),d=s.D5U.getArrayFromDType(a,t),f=new Array(l).fill(0);for(let t=0;t<u;++t){const n=e[t*p],s=f[n],a=(0===n?0:m[n-1])+s;f[n]++;for(let n=0;n<p;++n)i[a*p+n]=e[t*p+n];d[a]=r[t],h[t]=a}for(let e=0;e<l;++e)if(0===f[e]){const t=0===e?0:m[e-1];i[t*p+0]=e;for(let e=1;e<p;++e)i[t*p+e]=0;d[t]=o}return[i,[t,p],d,c,h]}}},3849:(e,t,n)=>{"use strict";n.d(t,{U:()=>r});var s=n(1140);function r(e,t,n,r,a){const i=s.D5U.sizeFromShape(r),o=t[0],u=a.length,l=[];let c=1,h=-1;for(let e=0;e<u;++e){const t=a[e];if(-1===t){if(-1!==h)throw new Error(`only one output dimension may be -1, not both ${h} and ${e}`);h=e,l.push(1)}else{if(t<0)throw new Error(`size ${e} must be non-negative, not ${t}`);c*=t,l.push(t)}}if(-1!==h){if(c<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(i/c);if(c*e!==i)throw new Error(`Input to reshape is a SparseTensor with ${i}\n          dense values, but the requested shape requires a multiple of ${c}. inputShape=${r} outputShape= ${l}`);l[h]=e}const p=s.D5U.sizeFromShape(l);if(p!==i)throw new Error(`Input to reshape is a tensor with ${i} dense values, but the requested shape has ${p}. inputShape=${r} outputShape=${l}`);const d=r.length,f=[];if(d>0){f[d-1]=1;for(let e=d-2;e>=0;--e)f[e]=f[e+1]*r[e+1]}const m=[];if(u>0){m[u-1]=1;for(let e=u-2;e>=0;--e)m[e]=m[e+1]*l[e+1]}const g=s.D5U.getArrayFromDType(n,o*u);for(let t=0;t<o;++t){let n=0;for(let s=0;s<d;++s)n+=e[t*d+s]*f[s];for(let e=0;e<u;++e)g[t*u+e]=Math.trunc(n/m[e]),n%=m[e]}return[g,[o,u],l]}},3989:(e,t,n)=>{"use strict";n.d(t,{V:()=>r});var s=n(1140);function r(e,t,n,r,a,i=!1,o=0){const u=r.length;if(u!==a.length)throw new Error("segmentIds and indices should have same size.");const l=[t[0],e.length/t[0]],c=l[1],h=u>0?a[u-1]+1:0;if(h<0)throw new Error("segment ids must be >= 0");const p=t.slice();p[0]=h;const d=p.reduce(((e,t)=>e*t),1),f=s.D5U.getArrayFromDType(n,d);if(0===u)return h>0&&f.fill(o),[f,p];if(h<=0)throw new Error("segment ids must be >= 0");let m=0,g=1,y=0,b=a[m];for(;;){let t=0;if(g<u){if(t=a[g],b===t){++g;continue}if(b>=t)throw new Error("segment ids are not increasing")}if(b<0||b>=h)throw new Error(`Segment id ${b} out of range [0, ${h}), possibly because segmentIds input is not sorted.`);b>y&&f.fill(o,y*c,b*c);for(let t=m;t<g;++t){const n=r[t];if(n<0||n>=l[0])throw new Error(`Bad: indices[${t}] == ${r[t]} out of range [0, ${l[0]})`);for(let t=0;t<c;t++)f[b*c+t]+=e[n*c+t]}if(i)for(let e=0;e<c;e++)f[b*c+e]/=g-m;if(m=g,++g,y=b+1,b=t,g>u)break}return y<h&&f.fill(o,y*c,h*c),[f,p]}},440:(e,t,n)=>{"use strict";n.d(t,{zT:()=>i,cz:()=>u});var s=n(1140),r=n(8029),a=n(6738);const i=(0,r.a)((e=>Math.sqrt(e))),o=(0,a.A)(s.FKq,(e=>Math.sqrt(e))),u={kernelName:s.FKq,backendName:"cpu",kernelFunc:o}},212:(e,t,n)=>{"use strict";n.d(t,{Hz:()=>i,MS:()=>u});var s=n(1140),r=n(3533),a=n(6205);const i=(0,r.b)(((e,t)=>{const n=e-t;return n*n})),o=(0,a.j)(s._tC,i),u={kernelName:s._tC,backendName:"cpu",kernelFunc:o}},2210:(e,t,n)=>{"use strict";n.d(t,{t:()=>r});var s=n(1140);function r(e,t,n,r){const a=(0,s.f3b)(e,t.dtype);for(let e=0;e<a.size;e++){const s=a.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}},6841:(e,t,n)=>{"use strict";n.d(t,{A:()=>a});var s=n(1140);class r{constructor(e,t,n,r,a,i){this.separator=s.D5U.encodeString(e),this.nGramWidths=t,this.leftPad=s.D5U.encodeString(n),this.rightPad=s.D5U.encodeString(r),this.padWidth=a,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,a){for(let i=0;i<r;++i){const o=this.getPadWidth(a),u=Math.max(0,o-i),l=Math.max(0,o-(r-(i+1))),c=a-(u+l),h=t+(u>0?0:i-o);let p=0;p+=u*this.leftPad.length;for(let t=0;t<c;++t)p+=e[h+t].length;p+=l*this.rightPad.length,p+=(u+l+c-1)*this.separator.length,n[s+i]=new Uint8Array(p);const d=n[s+i];let f=0;const m=e=>e.forEach((e=>d[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const a=r-1,i=s.D5U.getArrayFromDType("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=a;++e)i[e]=0;return[e,i]}i[0]=0;for(let e=1;e<=a;++e){const n=t[e]-t[e-1];let s=0;this.nGramWidths.forEach((e=>{s+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===s&&(s=1),i[e]=i[e-1]+s}const o=new Array(i[a]);for(let n=0;n<a;++n){const s=t[n];let r=i[n];if(this.nGramWidths.forEach((a=>{const i=t[n+1]-t[n],u=this.getNumNGrams(i,a);this.createNGrams(e,s,o,r,u,a),r+=u})),this.preserveShort&&r===i[n]){const a=t[n+1]-t[n];if(0===a)continue;const i=a+2*this.padWidth,u=1;this.createNGrams(e,s,o,r,u,i)}}return[o,i]}}function a(e,t,n,s,a,i,o,u){return new r(n,s,a,i,o,u).compute(e,t)}},8639:(e,t,n)=>{"use strict";n.d(t,{Q:()=>a});var s=n(1140);function r(e,t,n,s){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)s.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let a=e.indexOf(r);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||s.push(t),a=(e=e.subarray(a+1)).indexOf(r)}return void(n&&0===e.length||s.push(e))}let r=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(r,a);n&&0===t.length||s.push(t),r=a+1}}function a(e,t,n){const a=e.length,i=[];let o=0,u=0;const l=new Array(a);for(let s=0;s<a;++s){const a=i.length;r(e[s],t,n,i);const c=i.length-a;l[s]=c,o+=c,u=Math.max(u,c)}const c=s.D5U.getArrayFromDType("int32",2*o),h=new Array(o),p=[a,u];let d=0;for(let e=0;e<a;++e)for(let t=0;t<l[e];++t)c[2*d]=e,c[2*d+1]=t,h[d]=i[d],++d;return[c,h,p]}},6626:(e,t,n)=>{"use strict";n.d(t,{h:()=>r});var s=n(1140);function r(e,t){const n=s.D5U.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=s.D5U.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}},1649:(e,t,n)=>{"use strict";n.d(t,{VY:()=>i,lu:()=>u,GR:()=>l});var s=n(1140),r=n(3533),a=n(6205);const i=(0,r.b)(((e,t)=>e-t)),o=(0,a.H)(((e,t,n,s)=>({real:e-n,imag:t-s}))),u=(0,a.j)(s.Tr8,i,o),l={kernelName:s.Tr8,backendName:"cpu",kernelFunc:u}},7723:(e,t,n)=>{"use strict";n.d(t,{R:()=>r});var s=n(1140);function r(e,t){const n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];const r=(0,s.f3b)(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const a=e.locToIndex(s);r.values[t]=e.values[a]}return r}},9556:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var s=n(1140);const r=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function a(e,t,n=0,i=e.length-1){for(;i>n;){if(i-n>600){const s=i-n+1,r=t-n+1,o=Math.log(s),u=.5*Math.exp(2*o/3),l=.5*Math.sqrt(o*u*(s-u)/s)*Math.sign(r-s/2);a(e,t,Math.max(n,Math.floor(t-r*u/s+l)),Math.min(i,Math.floor(t+(s-r)*u/s+l)))}const o=e[t];let u=n,l=i;for(s.D5U.swap(e,n,t),r(e[i],o)>0&&s.D5U.swap(e,n,i);u<l;){for(s.D5U.swap(e,u,l),u++,l--;r(e[u],o)<0;)u+=1;for(;r(e[l],o)>0;)l-=1}0===r(e[n],o)?s.D5U.swap(e,n,l):(l+=1,s.D5U.swap(e,l,i)),l<=t&&(n=l+1),t<=l&&(i=l-1)}}function i(e,t,n,i,o){const u=t[t.length-1],[l,c]=[e.length/u,u],h=s.D5U.getTypedArrayFromDType(n,l*i),p=s.D5U.getTypedArrayFromDType("int32",l*i);for(let t=0;t<l;t++){const n=t*c,s=e.subarray(n,n+c);let u=new Array(s.length);s.forEach(((e,t)=>u[t]={value:e,index:t})),i<u.length&&(a(u,i),u=u.slice(0,i)),o&&u.sort(r);const l=t*i,d=h.subarray(l,l+i),f=p.subarray(l,l+i);for(let e=0;e<i;e++)d[e]=u[e].value,f[e]=u[e].index}const d=t.slice();return d[d.length-1]=i,[(0,s.f3b)(d,n,h),(0,s.f3b)(d,"int32",p)]}},4802:(e,t,n)=>{"use strict";n.d(t,{p:()=>i,b:()=>o});var s=n(1140),r=n(8166),a=n(7107);function i(e){const{inputs:t,attrs:n,backend:s}=e,{x:i}=t,{perm:o}=n;(0,r.H)(i,"transpose");const u=i.shape.length,l=new Array(u);for(let e=0;e<l.length;e++)l[e]=i.shape[o[e]];const c=s.data.get(i.dataId).values,h=(0,a.H)(c,i.shape,i.dtype,o,l);return{dataId:s.write(h,l,i.dtype),shape:l,dtype:i.dtype}}const o={kernelName:s.G3Y,backendName:"cpu",kernelFunc:i}},7107:(e,t,n)=>{"use strict";n.d(t,{H:()=>r});var s=n(1140);function r(e,t,n,r,a){const i=t.length,o=s.D5U.sizeFromShape(t),u=s.D5U.computeStrides(t),l=s.D5U.computeStrides(a),c=s.D5U.getTypedArrayFromDType(n,s.D5U.sizeFromShape(a));for(let t=0;t<o;++t){const n=s.D5U.indexToLoc(t,i,u),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];c[s.D5U.locToIndex(a,i,l)]=e[t]}return c}},5638:(e,t,n)=>{"use strict";n.d(t,{S:()=>r});var s=n(1140);function r(e,t,n,r){const a=s.D5U.parseAxisParam(t,n)[0],i=[1,n[0],1];for(let e=0;e<a;e++)i[0]*=n[e];i[1]=n[a];for(let e=a+1;e<n.length;e++)i[2]*=n[e];const o={},u=new Int32Array(n[a]),l=new s.YDk(i,r,e),c=[],h=1===i[0]&&1===i[2];for(let t=0;t<n[a];t++){let n;if(h)n=e[t].toString();else{const e=[];for(let n=0;n<i[0];n++)for(let s=0;s<i[2];s++)e.push(l.get(n,t,s));n=e.join(",")}if(void 0!==o[n])u[t]=o[n];else{const e=Object.keys(o).length;o[n]=e,u[t]=e,c.push(t)}}const p=i.slice();p[1]=Object.keys(o).length;const d=new s.YDk(p,r);c.forEach(((e,t)=>{for(let n=0;n<i[0];n++)for(let s=0;s<i[2];s++)d.set(l.get(n,e,s),n,t,s)}));const f=n.slice();return f[a]=p[1],{outputValues:d.values,outputShape:f,indices:u}}},3533:(e,t,n)=>{"use strict";n.d(t,{b:()=>r});var s=n(1140);function r(e){return(t,n,r,a,i)=>{const o=s.Wap.assertAndGetBroadcastShape(t,n),u=o.length,l=s.D5U.computeStrides(o),c=s.D5U.sizeFromShape(o),h=s.D5U.getTypedArrayFromDType(i,c),p=t.length,d=n.length,f=s.D5U.computeStrides(t),m=s.D5U.computeStrides(n),g=s.Wap.getBroadcastDims(t,o),y=s.Wap.getBroadcastDims(n,o);if(g.length+y.length===0)for(let t=0;t<h.length;++t)h[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<h.length;++t){const n=s.D5U.indexToLoc(t,u,l),i=n.slice(-p);g.forEach((e=>i[e]=0));const o=s.D5U.locToIndex(i,p,f),c=n.slice(-d);y.forEach((e=>c[e]=0));const b=s.D5U.locToIndex(c,d,m);h[t]=e(r[o],a[b])}return[h,o]}}},6205:(e,t,n)=>{"use strict";n.d(t,{j:()=>o,H:()=>u});var s=n(1140),r=n(8166),a=n(9258),i=n(6961);function o(e,t,n,o){return null==n?({inputs:n,backend:a})=>{const{a:i,b:u}=n,l=a;(0,r.H)([i,u],e);const c=l.data.get(i.dataId).values,h=l.data.get(u.dataId).values,p="string"===i.dtype?s.Wap.fromUint8ToStringArray(c):c,d="string"===i.dtype?s.Wap.fromUint8ToStringArray(h):h,f=o||i.dtype,[m,g]=t(i.shape,u.shape,p,d,f);return l.makeTensorInfo(g,f,m)}:({inputs:e,backend:s})=>{const{a:r,b:u}=e,l=s;if("complex64"===r.dtype||"complex64"===u.dtype){const e=(0,a.p)({inputs:{x:r},backend:l,attrs:{dtype:"complex64"}}),t=l.data.get(e.dataId),s=t.complexTensorInfos.real,o=t.complexTensorInfos.imag,c=l.data.get(s.dataId).values,h=l.data.get(o.dataId).values,p=(0,a.p)({inputs:{x:u},backend:l,attrs:{dtype:"complex64"}}),d=l.data.get(p.dataId),f=d.complexTensorInfos.real,m=d.complexTensorInfos.imag,g=l.data.get(f.dataId).values,y=l.data.get(m.dataId).values,[b,x,v]=n(r.shape,u.shape,c,h,g,y),w=l.makeTensorInfo(v,"float32",b),k=l.makeTensorInfo(v,"float32",x),I=(0,i.P)({inputs:{real:w,imag:k},backend:l});return l.disposeIntermediateTensorInfo(e),l.disposeIntermediateTensorInfo(p),l.disposeIntermediateTensorInfo(w),l.disposeIntermediateTensorInfo(k),I}{const e=l.data.get(r.dataId).values,n=l.data.get(u.dataId).values,s=o||r.dtype,[a,i]=t(r.shape,u.shape,e,n,s);return l.makeTensorInfo(i,s,a)}}}function u(e){return(t,n,r,a,i,o)=>{const u=s.Wap.assertAndGetBroadcastShape(t,n),l=s.D5U.sizeFromShape(u),c=u.length,h=s.D5U.computeStrides(u),p=s.D5U.getTypedArrayFromDType("float32",l),d=s.D5U.getTypedArrayFromDType("float32",l),f=s.Wap.getBroadcastDims(t,u),m=s.Wap.getBroadcastDims(n,u),g=s.Wap.mergeRealAndImagArrays(r,a),y=s.Wap.mergeRealAndImagArrays(i,o),b=t.length,x=s.D5U.computeStrides(t),v=n.length,w=s.D5U.computeStrides(n);if(f.length+m.length===0)for(let t=0;t<p.length;t++){const n=t%g.length,s=t%y.length,r=e(g[2*n],g[2*n+1],y[2*s],y[2*s+1]);p[t]=r.real,d[t]=r.imag}else for(let t=0;t<p.length;t++){const n=s.D5U.indexToLoc(t,c,h),r=n.slice(-b);f.forEach((e=>r[e]=0));const a=s.D5U.locToIndex(r,b,x),i=n.slice(-v);m.forEach((e=>i[e]=0));const o=s.D5U.locToIndex(i,v,w),u=e(g[2*a],g[2*a+1],y[2*o],y[2*o+1]);p[t]=u.real,d[t]=u.imag}return[p,d,u]}}},8029:(e,t,n)=>{"use strict";n.d(t,{a:()=>r});var s=n(1140);function r(e){return(t,n,r)=>{const a=s.D5U.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}},6738:(e,t,n)=>{"use strict";n.d(t,{A:()=>a,O:()=>i});var s=n(1140),r=n(8166);function a(e,t,n){return({inputs:a,attrs:i,backend:o})=>{const{x:u}=a;if((0,r.H)(u,e),"string"===u.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const l=o,c=l.data.get(u.dataId).values,h=s.D5U.sizeFromShape(u.shape),p=n||u.dtype,d=s.D5U.getArrayFromDType(p,h);for(let e=0;e<h;++e)d[e]=t(c[e],i);return l.makeTensorInfo(u.shape,p,d)}}function i(e,t,n){return({inputs:s,attrs:a,backend:i})=>{const{x:o}=s;if((0,r.H)(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=i,l=u.data.get(o.dataId).values,c=n||o.dtype,h=t(l,c,a);return u.makeTensorInfo(o.shape,c,h)}}},4391:(e,t,n)=>{"use strict";n.d(t,{l:()=>a});var s=n(1140),r=n(6961);function a(e,t,n="float32"){if("complex64"===n){const n=a(e,t,"float32"),s=a(e,t,"float32");return(0,r.P)({inputs:{real:n,imag:s},backend:e})}const i=s.D5U.makeZerosTypedArray(s.D5U.sizeFromShape(t),n);return e.makeTensorInfo(t,n,i)}},6920:(e,t,n)=>{"use strict";n.d(t,{ic:()=>pn});var s={};n.r(s),n.d(s,{addImpl:()=>xe.EH,bincountImpl:()=>ve.W,bincountReduceImpl:()=>ve.i,ceilImpl:()=>we.__,concatImpl:()=>ke.j,equalImpl:()=>Ie.tW,expImpl:()=>Se.Ro,expm1Impl:()=>Ne.OF,floorImpl:()=>Te.r6,gatherNdImpl:()=>Ce.m,gatherV2Impl:()=>$e.i,greaterEqualImpl:()=>Ae.HL,greaterImpl:()=>Ee.o,lessEqualImpl:()=>Re.lx,lessImpl:()=>De.rO,linSpaceImpl:()=>_e.b,logImpl:()=>Fe.vX,maxImpl:()=>Oe.B,maximumImpl:()=>Me.wS,minimumImpl:()=>Le.vP,multiplyImpl:()=>ze.$3,negImpl:()=>Be.uC,notEqualImpl:()=>Pe.Gj,prodImpl:()=>Ue.Qg,rangeImpl:()=>We.b,rsqrtImpl:()=>Ve.zd,sigmoidImpl:()=>He.VY,simpleAbsImpl:()=>be.bk,sliceImpl:()=>Ge.rT,sparseFillEmptyRowsImpl:()=>je.c,sparseReshapeImpl:()=>Xe.U,sparseSegmentReductionImpl:()=>qe.V,sqrtImpl:()=>Ke.zT,squaredDifferenceImpl:()=>Ye.Hz,stridedSliceImpl:()=>Qe.t,stringNGramsImpl:()=>Je.A,stringSplitImpl:()=>Ze.Q,stringToHashBucketFastImpl:()=>et.h,subImpl:()=>tt.VY,tileImpl:()=>nt.R,topKImpl:()=>st.W,transposeImpl:()=>rt.H,uniqueImpl:()=>at.S});var r=n(1140);const a={},i={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function o(e){if(!(e in a)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete a[e]}),!1),1===e?t.getContext("webgl",i)||t.getContext("experimental-webgl",i):t.getContext("webgl2",i)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;a[e]=t}const t=a[e];return t.isContextLost()?(delete a[e],o(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),a[e])}var u,l,c;function h(e,t){return[t,e]}function p(e){const t=r.D5U.sizeFromShape(e),n=Math.ceil(t/4);return r.D5U.sizeToSquarishShape(n)}function d(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function f(e,t){const n=e;let s,a,i,o,u,l,c,h,p,d;return 2===(0,r.OBj)().getNumber("WEBGL_VERSION")?(s=n.R32F,a=n.R16F,i=n.RGBA16F,o=n.RGBA32F,u=n.RED,c=4,h=1,p=n.HALF_FLOAT,d=n.FLOAT):(s=e.RGBA,a=e.RGBA,i=e.RGBA,o=n.RGBA,u=e.RGBA,c=4,h=4,p=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT),l=e.RGBA,{internalFormatFloat:s,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:o,textureFormatFloat:u,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:h,textureTypeHalfFloat:p,textureTypeFloat:d}}function m(e,t){const n=t();return(0,r.OBj)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function g(e){return!!((0,r.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function y(e,t){return N(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(u||(u={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(l||(l={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(c||(c={}));const b=/ERROR: [0-9]+:([0-9]+):/g;function x(e,t){if(m(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function v(e,t,n,s,r,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(m(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,s))),m(e,(()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,a,i))),m(e,(()=>e.enableVertexAttribArray(o))),!0)}function w(e,t,n,s){m(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),m(e,(()=>e.activeTexture(e.TEXTURE0+n))),m(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,s))),m(e,(()=>e.uniform1i(n,s)))}function k(e,t,n){m(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),m(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function I(e,t){m(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),m(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function S(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function N(e,t,n){const s=m(e,(()=>t()));if(null==s)throw new Error(n);return s}function T(e,t=2){return r.D5U.sizeFromShape(e.slice(0,e.length-t))}function C(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function $(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[T(e),...C(e)]),t}function E(e){return e%2==0}function A(e,t){if(e=e.slice(-2),t=t.slice(-2),r.D5U.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s)return!0;if(E(n)&&E(s)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&E(e[0])&&E(t[0])}let D,R;function _(e,t){return null!=e.getExtension(t)}function F(e){try{if(null!=o(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function O(e){const t=f(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(s),r}function M(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&r.D5U.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const L=(0,r.OBj)();function z(){let e,t,n,s,a,i,o,u,l,c;return 2===(0,r.OBj)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",s="in",a="texture",i="outputColor",o="out vec4 outputColor;",u="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",s="varying",a="texture2D",i="gl_FragColor",o="",u="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:a,output:i,defineOutput:o,defineSpecialNaN:u,defineSpecialInf:l,defineRound:c}}function B(e,t,n="index"){const s=r.D5U.computeStrides(t);return s.map(((t,r)=>`int ${e[r]} = ${n} / ${t}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function P(e,t,n="index"){const s=r.D5U.computeStrides(t);return s.map(((t,r)=>`int ${e[r]} = ${n} / outShapeStrides[${r}]; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`)).join("")}function U(e){const t=r.D5U.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}L.registerFlag("HAS_WEBGL",(()=>L.getNumber("WEBGL_VERSION")>0)),L.registerFlag("WEBGL_VERSION",(()=>F(2)?2:F(1)?1:0)),L.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),L.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===L.get("WEBGL_VERSION"))),L.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),L.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),L.registerFlag("WEBGL_PACK",(()=>L.getBool("HAS_WEBGL"))),L.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>L.getBool("WEBGL_PACK"))),L.registerFlag("WEBGL_PACK_CLIP",(()=>L.getBool("WEBGL_PACK"))),L.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>L.getBool("WEBGL_PACK"))),L.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>L.getBool("WEBGL_PACK"))),L.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>L.getBool("WEBGL_PACK"))),L.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>L.getBool("WEBGL_PACK"))),L.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>L.getBool("WEBGL_PACK"))),L.registerFlag("WEBGL_PACK_REDUCE",(()=>L.getBool("WEBGL_PACK"))),L.registerFlag("WEBGL_LAZILY_UNPACK",(()=>L.getBool("WEBGL_PACK"))),L.registerFlag("WEBGL_CONV_IM2COL",(()=>L.getBool("WEBGL_PACK"))),L.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==D){const t=o(e);D=t.getParameter(t.MAX_TEXTURE_SIZE)}return D}(L.getNumber("WEBGL_VERSION")))),L.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==R){const t=o(e);R=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,R)}(L.getNumber("WEBGL_VERSION")))),L.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=L.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=o(e);return t=_(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:_(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),L.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>L.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!r.C2$.isMobile())),L.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=o(e);if(1===e){if(!_(t,"OES_texture_float"))return!1}else if(!_(t,"EXT_color_buffer_float"))return!1;return O(t)}(L.getNumber("WEBGL_VERSION")))),L.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!L.getBool("WEBGL_FORCE_F16_TEXTURES")&&L.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),L.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=o(e);if(1!==e){if(_(t,"EXT_color_buffer_float"))return O(t);const e="EXT_color_buffer_half_float";if(_(t,e)){const n=t.getExtension(e);return function(e,t){const n=f(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(r),a}(t,n)}return!1}return!!_(t,"OES_texture_float")&&!!_(t,"WEBGL_color_buffer_float")&&O(t)}(L.getNumber("WEBGL_VERSION")))),L.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=L.getNumber("WEBGL_VERSION"))&&null!=o(e).fenceSync;var e})),L.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>L.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),L.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),L.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>r.C2$.isMobile()&&L.getBool("IS_CHROME")?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),L.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),L.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),L.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),L.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const W="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:V}=r.Wap;function H(e,t,n){const s=[];if(e.forEach((e=>{const t=r.D5U.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=ee(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:s.push(`uniform int ${e.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${e.name}Shape;`)}s.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;")}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{s.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const a=s.join("\n"),i=e.map((e=>function(e,t,n=!1,s){let a="";a+=n?j(e,s):G(e,s);const i=e.shapeInfo.logicalShape,o=t.logicalShape;return i.length<=o.length&&(a+=n?function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),a="get"+s+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,u=V(e.shapeInfo.logicalShape,t.logicalShape),l=Z(o),c=o-i;let h;const p=["x","y","z","w","u","v"];h=0===i?"":o<2&&u.length>=1?"coords = 0;":u.map((e=>`coords.${p[e+c]} = 0;`)).join("\n");let d="";d=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+c]}`)).join(", ");let f="return outputValue;";const m=1===r.D5U.sizeFromShape(e.shapeInfo.logicalShape),g=1===r.D5U.sizeFromShape(t.logicalShape);if(1!==i||m||g){if(m&&!g)f=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(u.length){const e=i-2,t=i-1;u.indexOf(e)>-1&&u.indexOf(t)>-1?f="return vec4(outputValue.x);":u.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${l} coords = getOutputCoords();\n      ${h}\n      vec4 outputValue = get${s}(${d});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),a="get"+s+"AtOutCoords",i=t.texShape,o=e.shapeInfo.texShape,u=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&u===l&&null==e.shapeInfo.flatOffset&&r.D5U.arraysEqual(o,i))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=Z(l),h=V(e.shapeInfo.logicalShape,t.logicalShape),p=l-u;let d;const f=["x","y","z","w","u","v"];d=0===u?"":l<2&&h.length>=1?"coords = 0;":h.map((e=>`coords.${f[e+p]} = 0;`)).join("\n");let m="";return m=l<2&&u>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${f[t+p]}`)).join(", "),`\n    float ${a}() {\n      ${c} coords = getOutputCoords();\n      ${d}\n      return get${s}(${m});\n    }\n  `}(e,t)),a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),o=t.texShape,u=z(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let c,h,p=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${X}\n    ${q}\n    ${K}\n  `}(u);return t.isPacked?(c=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===s[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${s[1]}.0);\n      }\n    `:1===s[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${s[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(r.D5U.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2);let i=a,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,o,n.enableShapeUniforms),h=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(c=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return r.D5U.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${P(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const s=B(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${P(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const s=B(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=B(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=B(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,o,n.enableShapeUniforms),h=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),n.packedInputs&&(p+=Y),[p,l,h,a,c,i,n.userCode].join("\n")}function G(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;const[r,a]=e.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${s}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=Q(n);if(t)return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${s}(int index) {\n        ${J(e)}\n      }\n    `;const r=e.shapeInfo.texShape,a=r[0],i=r[1];if(1===i&&1===a)return`\n      float ${s}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=Q(n);return 1===i?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===a?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),i=e.shapeInfo.texShape;if(null!=i&&r.D5U.arraysEqual(n,i)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `;const e=i[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${i[1]}.0, ${e}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `}const{newShape:o,keptDims:u}=r.D5U.squeezeShape(n),l=o;if(l.length<n.length){const n=["row","col"];return`\n      ${G(te(e,l),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${ne(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${J(e)}\n      }\n    `;const c=i[0],h=i[1],p=Q(s);return 1===h?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `:1===c?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${h}.0, 0.5);\n      return sampleTexture(${s}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s}Shape[1] + col + ${p};\n        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${p};\n    vec2 uv = uvFromFlat(${c}, ${h}, index);\n    return sampleTexture(${s}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n[1]*n[2],o=n[2],{newShape:u,keptDims:l}=r.D5U.squeezeShape(n),c=u;if(c.length<n.length){const n=["row","col","depth"];return`\n        ${G(te(e,c),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${ne(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${o}, 1)));\n        ${J(e)}\n      }\n    `;const h=e.shapeInfo.texShape,p=h[0],d=h[1],f=e.shapeInfo.flatOffset;if(d===i&&null==f)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${s}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${o}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${p}.0);\n          return sampleTexture(${s}, uv);\n        }\n      `;if(d===o&&null==f)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${p}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;const m=Q(s);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${s}Shape[1] * ${s}Shape[2];\n      int stride1 = ${s}Shape[2];\n      int index = row * ${i} + col * ${o} + depth + ${m};\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n      return sampleTexture(${s}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${o} + depth + ${m};\n        vec2 uv = uvFromFlat(${p}, ${d}, index);\n        return sampleTexture(${s}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n[3],o=n[2]*i,u=n[1]*o,{newShape:l,keptDims:c}=r.D5U.squeezeShape(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${G(te(e,l),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${ne(n,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${u}, ${o}, ${i}, 1)));\n        ${J(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1],m=`int stride2 = ${s}Shape[3];`,g=`int stride1 = ${s}Shape[2] * stride2;`,y=`int stride0 = ${s}Shape[1] * stride1;`;if(f===u&&null==h)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${m}\n        ${g}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${o}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;if(f===i&&null==h)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;const b=Q(s);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${m}\n      ${g}\n      ${y}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${b});\n      return sampleTexture(${s}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${o} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${f}, index + ${b});\n      return sampleTexture(${s}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],i=t[3]*a,o=t[2]*i,u=t[1]*o,{newShape:l,keptDims:c}=r.D5U.squeezeShape(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${G(te(e,l))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${ne(t,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${u}, ${o}, ${i}, ${a})) +\n          depth3;\n        ${J(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1];if(f===u&&null==h)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==h)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${o} + depth * ${i} +\n          depth2 * ${a} + depth3 + ${Q(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:i}=r.D5U.squeezeShape(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${G(te(e,a))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${ne(t,i)});\n      }\n    `}const o=t[5],u=t[4]*o,l=t[3]*u,c=t[2]*l,h=t[1]*c;if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${c}, ${l}, ${u})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${J(e)}\n      }\n    `;const p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,f=d[0],m=d[1];if(m===h&&null==p)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===o&&null==p)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${c} + depth * ${l} +\n          depth2 * ${u} + depth3 * ${o} + depth4 + ${Q(n)};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function j(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${z().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=z();if(t)return`\n    vec4 ${s}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),i=e.shapeInfo.texShape,o=i[0],u=i[1],l=z();if(null!=i&&r.D5U.arraysEqual(n,i))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${u}.0, ${o}.0);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `;const c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${c[0]}, ${c[1]}, row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const s=[1,2],a=["b","row","col"];return`\n        ${j(te(e,n.slice(1)),t)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${ne(a,s)});\n        }\n      `}const o=z();if(t)return`\n    vec4 ${r}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `;const u=i[0],l=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=z();if(t)return`\n    vec4 ${s}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],h=Math.ceil(a[i-1]/2);let p=h*Math.ceil(a[i-2]/2),d="int b, int row, int col",f=`b * ${p} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)d=`int b${e}, `+d,p*=a[i-e-1],f=`b${e} * ${p} + `+f;return`\n    vec4 ${s}(${d}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${r.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const X="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",q="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",K="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Y="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Q(e){return`offset${e}`}function J(e){const t=e.name,n=r.D5U.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function Z(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function ee(e,t,n){const{newShape:s,keptDims:a}=r.D5U.squeezeShape(t),i=t.length,o=e&&3===i&&1===t[0],u=o?t.slice(1):s,l=!e&&i>1&&!r.D5U.arraysEqual(t,n)&&s.length<i||o;return{useSqueezeShape:l,uniformShape:l?u:t,keptDims:a}}function te(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function ne(e,t){return t.map((t=>e[t])).join(", ")}function se(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const s=e.logicalShape,a=t[n],i=a.shape;if(!r.D5U.arraysEqual(s,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${i} must match`);if(e.isUniform&&a.isUniform)return;const o=e.texShape,u=a.isUniform?null:a.texData.texShape;if(!r.D5U.arraysEqual(o,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${u} must match`)}))}function re(e){return(0,r.OBj)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class ae{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=u.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=z();this.outputShape=e,this.enableShapeUniforms=re(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?P(["r","c","d"],e):B(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class ie{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=u.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=z();this.outputShape=e,this.enableShapeUniforms=re(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?P(["r","c","d"],e):B(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class oe{constructor(e){this.variableNames=["A"],this.outTexUsage=l.DOWNLOAD;const t=z();this.outputShape=e,this.userCode=`\n      ${W}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class ue{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=l.DOWNLOAD;const t=z();this.outputShape=e,this.userCode=`\n      ${W}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class le{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=z();this.outputShape=e,this.enableShapeUniforms=re(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":U(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class ce{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=z();this.outputShape=e,this.enableShapeUniforms=re(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let r=0;r<=1;r++){const a=2*t+r;s+=`\n          localCoords = coords;\n          if(localCoords[2] + ${r} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${r};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":U(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${s}\n\n          ${n.output} = ${r};\n        }\n    `}}function he(e,t,n,s,a,i){!function(e,t){const n=(0,r.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const o=function(e){return N(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),u=e.TEXTURE_2D;return m(e,(()=>e.bindTexture(u,o))),m(e,(()=>e.texParameteri(u,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),m(e,(()=>e.texParameteri(u,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),m(e,(()=>e.texParameteri(u,e.TEXTURE_MIN_FILTER,e.NEAREST))),m(e,(()=>e.texParameteri(u,e.TEXTURE_MAG_FILTER,e.NEAREST))),m(e,(()=>e.texImage2D(u,0,s,t,n,0,a,i,null))),m(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),o}function pe(e){return e.internalFormatFloat}function de(e){return e.internalFormatHalfFloat}function fe(e){return e.downloadTextureFormat}function me(e){return e.internalFormatPackedFloat}function ge(e){return e.internalFormatPackedHalfFloat}class ye{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=(0,r.OBj)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){a[e]=t}(t,e)):this.gl=o(t);let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(1===(0,r.OBj)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=y(this.gl,e),_(this.gl,t))this.textureHalfFloatExtension=y(this.gl,t);else if((0,r.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),_(this.gl,s))this.colorBufferHalfFloatExtension=y(this.gl,s);else if((0,r.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",_(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!_(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=function(e){return function(e,t){const n=N(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return m(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),m(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=N(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return m(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),m(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return N(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=f(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,r.OBj)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;m(e,(()=>e.finish())),m(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),m(e,(()=>e.deleteFramebuffer(this.framebuffer))),m(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),m(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),m(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=h(t,n);return he(e,r,a,pe(s),s.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=h(t,n);return he(e,r,a,de(s),s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=h(t,n);return he(e,r,a,fe(s),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){m(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?m(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):m(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),m(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),function(e,t,n,s,r,a){let i,o,u;m(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(i=new Uint8Array(n*s*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*s*4),o=e.FLOAT,u=a.internalFormatPackedFloat),i.set(r),m(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,s,0,e.RGBA,o,i))),m(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=d(t,n);return he(e,r,a,ge(s),e.RGBA,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=d(t,n);return he(e,r,a,me(s),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(I(this.gl,this.framebuffer),this.outputTexture=null),m(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,s){const[r,a]=h(t,n),i=new Uint8Array(t*n*4);return m(e,(()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return function(e,t,n,s,r,a,i,o){const u=e,l=new Float32Array(function(e,t){const[n,s]=d(e,t);return n*s*4}(a,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}(this.gl,e,0,0,0,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const s=function(e,t,n,s){const r=e.createBuffer();m(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const a=16*t*n;return m(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),m(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),m(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,r.OBj)().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=s.clientWaitSync(r,0,0);return e===s.ALREADY_SIGNALED||e===s.CONDITION_SATISFIED},t=r}else(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const s=new Float32Array(t*n*4);return m(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s))),s}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=function(e,t){const n=N(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(m(e,(()=>e.shaderSource(n,t))),m(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=b.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const s=+n[1],a=e.split("\n"),i=a.length.toString().length+2,o=a.map(((e,t)=>r.D5U.rightPad((t+1).toString(),i)+e));let u=0;for(let e=0;e<o.length;e++)u=Math.max(o[e].length,u);const l=o.slice(0,s-1),c=o.slice(s-1,s),h=o.slice(s);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${r.D5U.rightPad(c[0],u)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t,e);null==this.vertexShader&&(this.vertexShader=function(e){const t=z();return function(e,t){const n=N(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(m(e,(()=>e.shaderSource(n,t))),m(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const s=function(e){return N(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return m(t,(()=>t.attachShader(s,this.vertexShader))),m(t,(()=>t.attachShader(s,n))),function(e,t){if(m(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,s),this.debug&&x(t,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=function(e,t,n){return m(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),v(e,t,"clipSpacePos",n,3,20,0)&&v(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),s}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&m(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&x(this.gl,this.program),m(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return N(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),m(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),w(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[s,r]=d(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&x(this.gl,this.program),S(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),m(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),m(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=y(this.gl,2===(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await r.D5U.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||r.D5U.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),k(this.gl,e,this.framebuffer),this.debug&&S(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(k(this.gl,this.outputTexture,this.framebuffer),this.debug&&S(this.gl)):I(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const s=this.gl;k(s,e,this.framebuffer),this.debug&&S(s),this.outputTexture=e,m(s,(()=>s.viewport(0,0,t,n))),m(s,(()=>s.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),m(this.gl,(()=>this.gl.scissor(e,t,n,s)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}var be=n(224),xe=n(2779),ve=n(8607),we=n(4769),ke=n(8926),Ie=n(7679),Se=n(1211),Ne=n(969),Te=n(6574),Ce=n(1820),$e=n(4468),Ee=n(6272),Ae=n(6259),De=n(8405),Re=n(635),_e=n(1325),Fe=n(5223),Oe=n(5126),Me=n(1717),Le=n(612),ze=n(1917),Be=n(854),Pe=n(8584),Ue=n(9560),We=n(9230),Ve=n(7742),He=n(108),Ge=n(2578),je=n(2123),Xe=n(3849),qe=n(3989),Ke=n(440),Ye=n(212),Qe=n(2210),Je=n(6841),Ze=n(8639),et=n(6626),tt=n(1649),nt=n(7723),st=n(9556),rt=n(7107),at=n(5638);const{addImpl:it,bincountImpl:ot,bincountReduceImpl:ut,ceilImpl:lt,concatImpl:ct,equalImpl:ht,expImpl:pt,expm1Impl:dt,floorImpl:ft,gatherNdImpl:mt,gatherV2Impl:gt,greaterImpl:yt,greaterEqualImpl:bt,lessImpl:xt,lessEqualImpl:vt,linSpaceImpl:wt,logImpl:kt,maxImpl:It,maximumImpl:St,minimumImpl:Nt,multiplyImpl:Tt,negImpl:Ct,notEqualImpl:$t,prodImpl:Et,rangeImpl:At,rsqrtImpl:Dt,sigmoidImpl:Rt,simpleAbsImpl:_t,sliceImpl:Ft,sparseFillEmptyRowsImpl:Ot,sparseReshapeImpl:Mt,sparseSegmentReductionImpl:Lt,sqrtImpl:zt,stridedSliceImpl:Bt,stringNGramsImpl:Pt,stringSplitImpl:Ut,stringToHashBucketFastImpl:Wt,subImpl:Vt,tileImpl:Ht,topKImpl:Gt,transposeImpl:jt,uniqueImpl:Xt}=s;function qt(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function Kt(e,t){return 1===t?[e]:qt(e,t)}class Yt{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=Kt("rc",t),s=Z(t),r=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let s="";for(let r=e-2;r<e;r++)s+=`${n[r]} >= ${t[r]}`,r<e-1&&(s+="||");return s}(t,e,n),a=function(e,t,n,s){if(1===e)return"";const r=s.slice(-2);return`\n    int r = ${r[0]};\n    int c = ${r[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,s=function(e,t){const n=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let a=`${0===s?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let n=2;n<e;n++)a=`${t[t.length-1-n]},`+a;n.push(a)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${s[0]}),\n          cEdge ? 0. : getA(${s[1]}),\n          rEdge ? 0. : getA(${s[2]}),\n          rEdge || cEdge ? 0. : getA(${s[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${s} rc = getOutputCoords();\n\n          if(${r}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class Qt{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=re(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var s,r;this.userCode=`\n      ${s=t,r=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${r?function(e,t,n="index"){const s=function(e,t){const n=e.length,s=e.map((e=>`${t}[${e}]`)),r=new Array(n-1);r[n-2]=s[n-1];for(let e=n-3;e>=0;--e)r[e]=`(${r[e+1]} * ${s[e+1]})`;return r}(e.map(((e,t)=>t)),t);return s.map(((t,r)=>`int ${e[r]} = ${n} / ${s[r]}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${s[r]}`:`index -= ${e[r]} * ${s[r]}`};`)).join("")}(["r","c","d"],"inputShape"):B(["r","c","d"],s)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":U(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class Jt{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const s=en(t,n),r=tn(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const a=Zt(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[r].shift();return this.usedTextures[r].push(e),e}let i;return s===c.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===c.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===c.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===c.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===c.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,s){if(null==this.freeTextures)return;const a=en(n,s),i=tn(t,a,s);i in this.freeTextures||(this.freeTextures[i]=[]);const o=Zt(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,s),u=(0,r.OBj)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==u&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=o):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const l=this.usedTextures[i],c=l.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(c,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Zt(e,t,n,s,r){const a=function(e,t){switch(e){case c.PACKED_2X2_FLOAT32:return me(t);case c.PACKED_2X2_FLOAT16:return ge(t);case c.UNPACKED_FLOAT32:return pe(t);case c.UNPACKED_FLOAT16:return de(t);case c.PACKED_4X1_UNSIGNED_BYTE:return fe(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,s);let i;if(r){const[t,n]=d(e[0],e[1]);i=t*n}else{const[t,n]=h(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function en(e,t){if(e===l.UPLOAD)return c.PACKED_2X2_FLOAT32;if(e===l.RENDER||null==e)return function(e){return(0,r.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?c.PACKED_2X2_FLOAT32:c.UNPACKED_FLOAT32:e?c.PACKED_2X2_FLOAT16:c.UNPACKED_FLOAT16}(t);if(e===l.DOWNLOAD||e===l.PIXELS)return c.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function tn(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class nn{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=re(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const sn="return abs(x);",rn="return x;";class an{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=re(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class on{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=Kt("rc",t),s=Z(t),r=function(e,t){if(1===e)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${s} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const un=r.GDt.ZA,ln={},cn=(0,r.OBj)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class hn extends r.Zuw{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,r.OBj)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=o((0,r.OBj)().getNumber("WEBGL_VERSION"));this.binaryCache=((t=(0,r.OBj)().getNumber("WEBGL_VERSION"))in ln||(ln[t]={}),ln[t]),this.gpgpu=new ye(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new Jt(this.gpgpu),this.numMBBeforeWarning=null==(0,r.OBj)().global.screen?1024:(0,r.OBj)().global.screen.height*(0,r.OBj)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new r.JLz(this,(0,r.SRH)())}nextDataId(){return hn.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if(((0,r.OBj)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,r.OBj)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:l.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,s,a){if((0,r.OBj)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:l.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:a,slice:i,shape:o,isPacked:u}=t;if(null!=i){let t;t=u?new an(o,rn):new nn(o,rn);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===s)return n;const l=null!=this.activeTimers;let c,h;if(l&&(c=r.D5U.now()),"complex64"===s){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);h=r.Wap.mergeRealAndImagArrays(e,t)}else h=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=r.D5U.now()-c),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:s,slice:a,dtype:i,complexTensorInfos:o,isPacked:u}=t;if(null!=a){let t;t=u?new an(s,rn):new nn(s,rn);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:i}],i),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(!(0,r.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,r.OBj)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,c,h=null;if("complex64"!==i&&(0,r.OBj)().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);h=this.gpgpu.createBufferFromTexture(t.texture,...p(s))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),t=e[0],n=e[1];c=r.Wap.mergeRealAndImagArrays(t,n)}else if(null==h)c=this.getValuesFromTexture(e);else{const e=r.D5U.sizeFromShape(s);c=this.gpgpu.downloadFloat32MatrixFromBuffer(h,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=h){const e=this.gpgpu.gl;m(e,(()=>e.deleteBuffer(h)))}const d=this.convertAndCacheOnCPU(e,c),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach((e=>e(d))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,r.SRH)().removeDataId(e,this),this.pendingDeletes--),d}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>r.D5U.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,r.f3b)(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!g(n)){if((0,r.OBj)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:s}=this.texData.get(e),a=r.D5U.sizeFromShape(t);if((0,r.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),s=this.texData.get(n.dataId),r=this.gpgpu.downloadMatrixFromPackedTexture(s.texture,...p(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),r}const i=(0,r.OBj)().getBool("WEBGL_PACK")&&!0===s,o=i?$(t):t,u=i?new ue(o):new oe(o),l=this.runWebGLProgram(u,[{shape:o,dtype:n,dataId:e}],"float32"),c=this.texData.get(l.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),h}timerAvailable(){return(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=r.D5U.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),i=r.D5U.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,s&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if((0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);o.kernelMs=r.D5U.sum(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:i[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:r.D5U.now(),endMs:null}}endTimer(e){return(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=r.D5U.now(),e)}async getQueryTime(e){if((0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=cn){return(0,r.OBj)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&r.D5U.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){r.Wap.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return un(e.shape,t)}packedUnaryOp(e,t,n){const s=new an(e.shape,t),a=this.compileAndRun(s,[e],n);return(0,r.SRH)().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=_t(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,sn,e.dtype);const t=new nn(e.shape,sn),n=this.compileAndRun(t,[e]);return(0,r.SRH)().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&r.D5U.isString(n[0])){const a=n.map((e=>r.D5U.encodeString(e)));s=this.write(a,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:s}=this.makeTensorInfo(e,t,n);return(0,r.SRH)().makeTensorFromDataId(s,e,t,this)}unpackTensor(e){const t=new on(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Yt(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[T(e.shape),...C(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[T(t),...C(t)],a=new Qt(r,n),i=[n],o=this.runWebGLProgram(a,[s],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:s,dtype:r}=t,a=$(s);let i;const o=p(a);i=n?new ie(a):new ae(a);const u=[o];return{dtype:r,shape:s,dataId:this.runWebGLProgram(i,[{shape:a,dtype:r,dataId:e}],r,u,!0).dataId}}runWebGLProgram(e,t,n,s,a=!1){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===u.DENSE){const t=p(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===r.D5U.sizeFromShape(i.shape))return o.values=r.D5U.getTypedArrayFromDType(i.dtype,0),i;const l=[],c=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&r.D5U.sizeFromShape(t.shape)<=(0,r.OBj)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!A(n.shape,t.shape)){const e=t,s=t.shape;t.shape=n.shape,t=this.packedReshape(t,s),l.push(t),n=this.texData.get(t.dataId),e.shape=s}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const h={shape:i.shape,texData:o,isUniform:!1},d=function(e,t,n){let s="";t.concat(n).forEach((t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const i=t.texData.texShape,{useSqueezeShape:o,uniformShape:u,keptDims:l}=ee(e.packedInputs,t.shape,i);let c="",h="",p="";if(1===u.length&&e.packedInputs){const e=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];c=`${e[0]>1}_${e[1]>1}`}else if(2!==u.length||e.packedInputs){if(u.length>2&&!e.packedInputs){const e=r.D5U.computeStrides(u);p=`${e[0]===i[1]}_${e[e.length-1]===i[1]}`}}else h=`${u[0]>1}_${u[1]>1}`;const d=t.shape.length,f=2===u.length&&r.D5U.arraysEqual(t.shape,i),m=1===r.D5U.sizeFromShape(t.shape),g=r.Wap.getBroadcastDims(t.shape,n.shape),y=!e.packedInputs&&d===n.shape.length&&r.D5U.arraysEqual(i,n.texData.texShape),b=e.packedInputs||u.length>2?"":`${i[0]>1}_${i[1]>1}`;s+=`${d}_${y}_${o?l:""}_${u.length}_${m}_${g}_${f}_${c}_${h}_${p}_${b}_${a}`}else{const e=t.isUniform?"uniform":t.texData.texShape;s+=`${t.shape}_${e}_${a}`}}));const a=e.userCode;let i=e.constructor.name;return i+="_"+s+"_"+a+`${(0,r.OBj)().getNumber("WEBGL_VERSION")}`,i}(e,c,h),f=this.getAndSaveBinary(d,(()=>function(e,t,n,s){const a=n.map(((e,n)=>{const s={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(s.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:s}})),i=a.map((e=>e.shapeInfo)),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},u=H(a,o,t),l=e.createProgram(u);let c=null;const h=e.getUniformLocation(l,"NAN",!1);1===(0,r.OBj)().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(l,"INFINITY",!1));const p=!1,d={},f={},m={};for(let n=0;n<t.variableNames.length;n++){const s=t.variableNames[n];d[s]=e.getUniformLocation(l,s,p),d[`offset${s}`]=e.getUniformLocation(l,`offset${s}`,p),t.enableShapeUniforms&&(f[`${s}Shape`]=e.getUniformLocation(l,`${s}Shape`,p),m[`${s}TexShape`]=e.getUniformLocation(l,`${s}TexShape`,p))}let g,y,b;t.enableShapeUniforms&&(g=e.getUniformLocation(l,"outShape",p),b=e.getUniformLocation(l,"outShapeStrides",p),y=e.getUniformLocation(l,"outTexShape",p));const x=[];return t.customUniforms&&t.customUniforms.forEach(((t,n)=>{x[n]=e.getUniformLocation(l,t.name,p)})),{program:t,source:u,webGLProgram:l,uniformLocations:d,customUniformLocations:x,inShapeInfos:i,outShapeInfo:o,infLoc:c,nanLoc:h,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:g,outShapeStridesLocation:b,outTexShapeLocation:y}}(this.gpgpu,e,c,h))),m=null!=this.activeTimers;let g;m&&(g=this.startTimer()),function(e,t,n,s,a){t.program.enableShapeUniforms||(se(t.inShapeInfos,n),se([t.outShapeInfo],[s]));const i=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(i,o[0],o[1]):e.setOutputMatrixTexture(i,o[0],o[1]),e.setProgram(t.webGLProgram),1===(0,r.OBj)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,s)=>{const a=t.program.variableNames[s],i=t.uniformLocations[a],o=t.uniformLocations[`offset${a}`],u=t.inShapesLocations[`${a}Shape`],l=t.inTexShapesLocations[`${a}TexShape`];if(u){const{uniformShape:s}=ee(t.program.packedInputs,n.shape,n.texData.texShape);switch(s.length){case 1:e.gl.uniform1iv(u,new Int32Array(s));break;case 2:e.gl.uniform2iv(u,new Int32Array(s));break;case 3:e.gl.uniform3iv(u,new Int32Array(s));break;case 4:e.gl.uniform4iv(u,new Int32Array(s))}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=i)if(n.isUniform)if(r.D5U.sizeFromShape(n.shape)<2)e.gl.uniform1f(i,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(i,t)}else null!=n.texData.slice&&null!=o&&e.gl.uniform1i(o,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,i,s)}));const u=t.outShapeLocation;if(u)switch(s.shape.length){case 1:e.gl.uniform1iv(u,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(u,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(u,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(u,new Int32Array(s.shape))}if(t.outShapeStridesLocation){const n=r.D5U.computeStrides(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach(((n,s)=>{const r=t.customUniformLocations[s],i=a[s];if("float"===n.type)e.gl.uniform1fv(r,i);else if("vec2"===n.type)e.gl.uniform2fv(r,i);else if("vec3"===n.type)e.gl.uniform3fv(r,i);else if("vec4"===n.type)e.gl.uniform4fv(r,i);else if("int"===n.type)e.gl.uniform1iv(r,i);else if("ivec2"===n.type)e.gl.uniform2iv(r,i);else if("ivec3"===n.type)e.gl.uniform3iv(r,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(r,i)}})),e.executeProgram()}(this.gpgpu,f,c,h,s),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),m&&(g=this.endTimer(g),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(g)}));const y=(0,r.OBj)().get("WEBGL_FLUSH_THRESHOLD");if(y>0){const e=r.D5U.now();e-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,r.OBj)().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,s,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||((0,r.OBj)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,r.lub)((()=>{if(!(0,r.OBj)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,r.OBj)().getBool("DEBUG");(0,r.OBj)().set("DEBUG",!1);const t=this.abs((0,r.iD$)(1e-8)).dataSync()[0];if((0,r.OBj)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:s,values:a,texture:i,usage:o,isPacked:u}=t;if(null!=i)return;const c=null!=this.activeTimers;let h;c&&(h=r.D5U.now());let p=t.texShape;if(null==p&&(p=function(e,t=!1){let n=(0,r.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?r.D5U.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=r.D5U.squeezeShape(e);e=t.newShape}let s=r.D5U.sizeFromShape(e);if(e.length<=1&&s<=n)return[1,s];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=T(e);let n=2,a=2;return e.length&&([n,a]=C(e)),s=t*(n/2)*(a/2),r.D5U.sizeToSquarishShape(s).map((e=>2*e))}return r.D5U.sizeToSquarishShape(s)}(n,u),t.texShape=p),null!=a){const e=$(n);let i,o=p[1],f=p[0];const m=a instanceof Uint8Array;u?([o,f]=d(p[0],p[1]),i=new ce(e,m)):i=new le(e,m);const g=this.makeTensorInfo([f,o],s);this.texData.get(g.dataId).usage=m?l.PIXELS:l.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(g.dataId),o,f,a);const y=[[f,o]],b=!0,x=this.runWebGLProgram(i,[g],s,y,b),v=this.texData.get(x.dataId);t.texture=v.texture,t.texShape=v.texShape,t.isPacked=v.isPacked,t.usage=v.usage,this.disposeIntermediateTensorInfo(g),this.texData.delete(x.dataId),t.values=null,c&&(this.uploadWaitMs+=r.D5U.now()-h)}else{const e=this.acquireTexture(p,o,s,u);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:s}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*r.D5U.bytesPerElement(t)}}hn.nextDataId=0;const pn="3.9.0";r.C2$.isBrowser()&&(0,r.jqO)("webgl",(()=>new hn),2);class dn{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=r.Wap.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=re(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class fn{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r.Wap.assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;this.enableShapeUniforms=re(a);let i="";if(s)if(0===a||1===r.D5U.sizeFromShape(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${Z(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?i+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=Kt("coords",a);this.enableShapeUniforms?i+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:i+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function mn(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const gn={kernelName:r.iJz,backendName:"webgl",kernelFunc:mn};function yn(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),i=n.texData.get(a.dataId),o=mn({inputs:{x:s},backend:n}),u=mn({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:u},a}const bn={kernelName:r.Zz9,backendName:"webgl",kernelFunc:yn},xn="return (a < 0.) ? b * a : a;",vn="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",wn={kernelName:r.J$2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{alpha:i}=s,o=n.makeTensorInfo([],"float32",r.D5U.createScalarValue(i,"float32")),u=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new fn(vn,a.shape,o.shape):new dn(xn,a.shape,o.shape),l=n.runWebGLProgram(u,[a,o],a.dtype);return n.disposeIntermediateTensorInfo(o),l}},kn="return (a < 0.) ? b * a : a;",In="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",Sn={kernelName:r.o0g,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s,alpha:a}=t,i=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new fn(In,s.shape,a.shape):new dn(kn,s.shape,a.shape);return n.runWebGLProgram(i,[s,a],s.dtype)}};function Nn({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:a,backend:i})=>{const{x:o}=a,u=i,l=s||o.dtype;if(u.shouldExecuteOnCPU([o])&&null!=n){const e=u.texData.get(o.dataId),t=n(e.values,l);return u.makeTensorInfo(o.shape,l,t)}let c;return c=(0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new an(o.shape,t):new nn(o.shape,e),u.runWebGLProgram(c,[o],l)}}function Tn({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:a,dtype:i}){return({inputs:o,backend:u})=>{const{a:l,b:c}=o,h=u;if(s&&"complex64"===l.dtype){const t=h.texData.get(l.dataId),n=h.texData.get(c.dataId),[s,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,s]=t,a={dataId:n.dataId,dtype:n.dtype,shape:l.shape},i={dataId:s.dataId,dtype:s.dtype,shape:c.shape},o=new dn(e,l.shape,c.shape);return h.runWebGLProgram(o,[a,i],(0,r.x8V)(n.dtype,s.dtype))})),i=yn({inputs:{real:s,imag:a},backend:h});return h.disposeIntermediateTensorInfo(s),h.disposeIntermediateTensorInfo(a),i}const p=i||(0,r.x8V)(l.dtype,c.dtype);if(("string"===l.dtype||"string"===c.dtype||h.shouldExecuteOnCPU([l,c]))&&null!=a){const e=h.texData.get(l.dataId).values,t=h.texData.get(c.dataId).values,n="string"===l.dtype?r.Wap.fromUint8ToStringArray(e):e,s="string"===l.dtype?r.Wap.fromUint8ToStringArray(t):t,[i,o]=a(l.shape,c.shape,n,s,p),u=h.makeTensorInfo(o,p);return h.texData.get(u.dataId).values=i,u}let d;return d=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new fn(t,l.shape,c.shape,n):new dn(e,l.shape,c.shape),h.runWebGLProgram(d,[l,c],p)}}function Cn(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?In:kn;if("leakyrelu"===e)return t?vn:xn;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class $n{constructor(e,t,n,s=!1,r=!1,a=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=re(this.outputShape.length);const l=s?e[1]:e[2],c=Math.ceil(l/2),h=s?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",d=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class En{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=r.Wap.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const An="return a * b;";function Dn(e){const{inputs:t,backend:n}=e,{a:s,b:a}=t,i=r.Wap.upcastType(s.dtype,a.dtype);if("complex64"===s.dtype){const e=n.texData.get(s.dataId),t=n.texData.get(a.dataId),r=new En("return areal * breal - aimag * bimag;",s.shape,a.shape),i=new En("return areal * bimag + aimag * breal;",s.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(r,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=yn({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([s,a])){const e=n.texData.get(s.dataId),t=n.texData.get(a.dataId),[r,o]=Tt(s.shape,a.shape,e.values,t.values,i),u=n.makeTensorInfo(o,i);return n.texData.get(u.dataId).values=r,u}let o;return o=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new fn(An,s.shape,a.shape):new dn(An,s.shape,a.shape),n.runWebGLProgram(o,[s,a],i)}const Rn={kernelName:r.wYn,backendName:"webgl",kernelFunc:Dn};function _n(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{shape:i}=s,o=n,u=r.D5U.sizeFromShape(a.shape),l=r.D5U.inferFromImplicitShape(i,u),c=r.D5U.sizeFromShape(l);r.D5U.assert(u===c,(()=>`The new shape (${l}) has ${c} elements and the old shape (${a.shape}) has ${u} elements. The new shape and old shape must have the same number of elements.`));const h=o.texData.get(a.dataId);return!h.isPacked||A(a.shape,l)||null!==h.texture&&A(h.shape,l)?(o.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype}):function(e,t,n){const s=[T(e.shape),...C(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[T(t),...C(t)],i=new Qt(a,s),o=[s],u=n.runWebGLProgram(i,[r],e.dtype,o,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(a,l,o)}const Fn={kernelName:r.HZH,backendName:"webgl",kernelFunc:_n};class On{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:a,outSize:i}=e;this.outputShape=[s,i];const o=4*Math.floor(n/4),u=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${r.D5U.isInt(e)?e.toPrecision(2):e}, ones);`}let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class Mn{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";r%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}function Ln(e,t,n,s){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],s=r.Wap.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}(e.shape);let i=e;for(let r=0;r<a.length;r++){const{inSize:o,windowSize:u,outSize:l}=a[r];let c,h;c="mean"===n?0===r?new On({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new On({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new Mn({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=i,i=s.runWebGLProgram(c,[i],t),h.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(h)}return i}class zn{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const s=Z(this.rank),r=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let t=0;t<e.length;t++)s[e[t]]=n[t];return s.join()}(t);this.userCode=`\n    void main() {\n      ${s} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}}class Bn{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=Z(this.rank),r=qt("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=r[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${s} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Pn(e,t,n){const s=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Bn(e.shape,t):new zn(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function Un(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;return function(e,t,n,s){const a=t,i=e.shape.length,o=r.D5U.parseAxisParam(a,e.shape);let u=o;const l=r.Wap.getAxesPermutation(u,i),c=null!=l;let h=e;c&&(h=Pn(e,l,s),u=r.Wap.getInnerMostAxes(u.length,i)),r.Wap.assertAxesAreInnerMostDims("sum",u,i);const[p,d]=r.Wap.computeOutAndReduceShapes(h.shape,u);let f=p;n&&(f=r.Wap.expandShapeToKeepDim(p,o));const m=r.D5U.sizeFromShape(d),g=_n({inputs:{x:h},attrs:{shape:[r.D5U.sizeFromShape(e.shape)/m,m]},backend:s}),y=Ln(g,(0,r.z4k)(e.dtype),"sum",s),b=_n({inputs:{x:y},attrs:{shape:f},backend:s});return s.disposeIntermediateTensorInfo(g),s.disposeIntermediateTensorInfo(y),c&&s.disposeIntermediateTensorInfo(h),b}(a,i,o,n)}const Wn={kernelName:r.GBy,backendName:"webgl",kernelFunc:Un};function Vn(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,i=n,o=r.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=r.shape[a[e]];let l;if(i.shouldExecuteOnCPU([r])){const e=i.texData.get(r.dataId).values,t=jt(e,r.shape,r.dtype,a,u);l=i.makeTensorInfo(u,r.dtype),i.texData.get(l.dataId).values=t}else l=Pn(r,a,i);return l}const Hn={kernelName:r.G3Y,backendName:"webgl",kernelFunc:Vn};function Gn({a:e,b:t,transposeA:n,transposeB:s,backend:a,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:u=0,activation:l=null}){const c=e.shape.length,h=t.shape.length,p=n?e.shape[c-2]:e.shape[c-1],d=s?t.shape[h-1]:t.shape[h-2],f=n?e.shape[c-1]:e.shape[c-2],m=s?t.shape[h-2]:t.shape[h-1],g=e.shape.slice(0,-2),y=t.shape.slice(0,-2),b=r.D5U.sizeFromShape(g),x=r.D5U.sizeFromShape(y),v=b===x||1===b||1===x;r.D5U.assert(c>=2&&h>=2&&v,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${y}).`));const w=(b>x?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([f,m]);r.D5U.assert(p===d,(()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`));const k=n?[b,p,f]:[b,f,p],I=s?[x,m,d]:[x,d,m],S=_n({inputs:{x:e},backend:a,attrs:{shape:k}}),N=_n({inputs:{x:t},backend:a,attrs:{shape:I}}),T=[S,N],C=Math.max(b,x),$=n?S.shape[1]:S.shape[2],E=null!=i,A=null!=o,D="leakyrelu"===l,R=null!=l?Cn(l,!0):null;let _;if((1===f||1===m)&&$>1e3&&!1===(E||A||D||null!=R)){let e=S,t=N;n&&(e=Vn({inputs:{x:S},backend:a,attrs:{perm:[0,2,1]}}),T.push(e)),s&&(t=Vn({inputs:{x:N},backend:a,attrs:{perm:[0,2,1]}}),T.push(t));const r=1===m;let i=e;1!==m&&(i=_n({inputs:{x:e},backend:a,attrs:{shape:[C,$,1]}}),T.push(i));const o=1===m?2:1;let u=t;r&&(u=_n({inputs:{x:t},backend:a,attrs:{shape:[C,1,$]}}),T.push(u));const l=Dn({inputs:{a:i,b:u},backend:a});_=Un({inputs:{x:l},backend:a,attrs:{axis:o,keepDims:!0}}),T.push(l)}else{const l=(0,r.x8V)(e.dtype,t.dtype),c=new $n(k,I,[C,f,m],n,s,E,R,A,D),h=[S,N];if(null!=i&&h.push(i),A&&h.push(o),D){const e=a.makeTensorInfo([],"float32",r.D5U.createScalarValue(u,"float32"));h.push(e),T.push(e)}_=a.runWebGLProgram(c,h,l)}const F=_n({inputs:{x:_},backend:a,attrs:{shape:w}});T.push(_);for(const e of T)a.disposeIntermediateTensorInfo(e);return F}const jn={kernelName:r.usg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=s;return Gn({a:r,b:a,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},Xn="return abs(x);",qn={kernelName:r.SYM,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const e=n.texData.get(s.dataId),t=_t(e.values);return n.makeTensorInfo(s.shape,s.dtype,t)}let a;return a=(0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new an(s.shape,Xn):new nn(s.shape,Xn),n.runWebGLProgram(a,[s],s.dtype)}},Kn=Nn({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Yn={kernelName:r.VGw,backendName:"webgl",kernelFunc:Kn},Qn=Nn({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Jn={kernelName:r.SpW,backendName:"webgl",kernelFunc:Qn},Zn="return a + b;",es=Tn({opSnippet:Zn,packedOpSnippet:Zn,supportsComplex:!0,cpuKernelImpl:it}),ts={kernelName:r.mm_,backendName:"webgl",kernelFunc:es};class ns{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${s};\n        setOutput(result);\n      }\n    `}}class ss{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${s};\n        setOutput(result);\n      }\n    `}}const rs={kernelName:r.Xze,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,a=n;if(1===a.length)return mn({inputs:{x:a[0]},backend:s});if(a.length>(0,r.OBj)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:s}),r=e({inputs:a.slice(t),backend:s});return e({inputs:[n,r],backend:s})}const i=a.map((e=>e.dtype)).reduce(((e,t)=>(0,r.x8V)(e,t))),o=a.map((e=>e.shape)),u=(0,r.OBj)().getBool("WEBGL_PACK")?new ss(a[0].shape,o):new ns(a[0].shape,o);return s.runWebGLProgram(u,a,i)}},as={kernelName:r.oT6,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,u=a.shape.length,l=r.D5U.parseAxisParam(i,a.shape);let c=l;const h=r.Wap.getAxesPermutation(c,u);let p=a;null!=h&&(p=Vn({inputs:{x:a},backend:n,attrs:{perm:h}}),c=r.Wap.getInnerMostAxes(c.length,u)),r.Wap.assertAxesAreInnerMostDims("all",c,u);const[d,f]=r.Wap.computeOutAndReduceShapes(p.shape,c),m=_n({inputs:{x:p},backend:n,attrs:{shape:[-1,r.D5U.sizeFromShape(f)]}}),g=Ln(m,m.dtype,"all",n);let y;return y=_n(o?{inputs:{x:g},backend:n,attrs:{shape:r.Wap.expandShapeToKeepDim(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),y}},is={kernelName:r.IKK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,u=a.shape.length,l=r.D5U.parseAxisParam(i,a.shape);let c=l;const h=r.Wap.getAxesPermutation(c,u);let p=a;null!=h&&(p=Vn({inputs:{x:a},backend:n,attrs:{perm:h}}),c=r.Wap.getInnerMostAxes(c.length,u)),r.Wap.assertAxesAreInnerMostDims("any",c,u);const[d,f]=r.Wap.computeOutAndReduceShapes(p.shape,c),m=_n({inputs:{x:p},backend:n,attrs:{shape:[-1,r.D5U.sizeFromShape(f)]}}),g=Ln(m,m.dtype,"any",n);let y;return y=_n(o?{inputs:{x:g},backend:n,attrs:{shape:r.Wap.expandShapeToKeepDim(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),y}};class os{constructor(e,t,n){this.variableNames=["A"];const{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${s}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class us{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,r.D5U.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],i=Math.ceil(a/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),s||this.variableNames.push("bestIndicesA");const o=this.outputShape,u=o.length,l=Z(u),c=Kt("coords",u);let h,p;if(1===i){p=u+1;const e=Z(p);h=`\n        ${e} sourceLocR = ${e}(${c.join()}, 0);\n        ++${c[u-1]};\n        ${e} sourceLocG = ${e}(${c.join()}, 0);\n        ++${c[u-2]};\n        ${e} sourceLocA = ${e}(${c.join()}, 0);\n        --${c[u-1]};\n        ${e} sourceLocB = ${e}(${c.join()}, 0);\n        --${c[u-2]};`}else p=u,h=`\n        ${l} sourceLocR = coords;\n        ++${c[u-1]};\n        ${l} sourceLocG = coords;\n        ++${c[u-2]};\n        ${l} sourceLocA = coords;\n        --${c[u-1]};\n        ${l} sourceLocB = coords;\n        --${c[u-2]};`;const d=["x","y","z","w","u","v"].slice(0,p),f="."+d[p-1],m=d.map((e=>"int "+e)),g=Kt("sourceLocR",p-1).concat("inIdx.r"),y=Kt("sourceLocG",p-1).concat("inIdx.g"),b=Kt("sourceLocB",p-1).concat("inIdx.b"),x=Kt("sourceLocA",p-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",w=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,k=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,I=s?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${c[u-1]} < ${o[u-1]-1};\n        bool hasNextRow = ${c[u-2]} < ${o[u-2]-1};\n        ${h}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function ls(e,t,n,s=null){let a=t.shape[0],i=t.shape[1];null!=s&&(a=s.shape[0],i=s.shape[1]);const o=r.Wap.computeOptimalWindowSize(i),u={windowSize:o,inSize:i,batchSize:a,outSize:Math.ceil(i/o)},l=new os(u,n,null==s),c=[t];null!=s&&c.push(s);const h=e.runWebGLProgram(l,c,"int32");if(1===h.shape[1])return h;const p=ls(e,t,n,h);return e.disposeIntermediateTensorInfo(h),p}function cs(e,t,n,s=null){const a=null!=s?s.shape:t.shape,i=a[a.length-1],o=r.Wap.computeOptimalWindowSize(i),u=new us(a,o,n,null==s),l=null==s?[t]:[t,s],c=e.runWebGLProgram(u,l,"int32");if(c.shape.length===t.shape.length){const s=cs(e,t,n,c);return e.disposeIntermediateTensorInfo(c),s}return c}function hs(e,t,n,s){const a=[n];if(r.Wap.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),a,t.shape.length),!(0,r.OBj)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],i=e.texData.get(t.dataId);let o=t;null!==i&&i.isPacked&&(o=e.unpackTensor(t),n.push(o));const[u,l]=r.Wap.computeOutAndReduceShapes(o.shape,a),c=r.D5U.sizeFromShape(l),h=_n({inputs:{x:o},backend:e,attrs:{shape:[-1,c]}});n.push(h);const p=ls(e,h,s);n.push(p);const d=_n({inputs:{x:p},backend:e,attrs:{shape:u}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return cs(e,t,s)}const ps={kernelName:r.sJF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i}=s;let o=r.D5U.parseAxisParam(i,a.shape);const u=r.Wap.getAxesPermutation(o,a.shape.length);let l=a;const c=[];null!=u&&(l=Vn({inputs:{x:a},backend:n,attrs:{perm:u}}),c.push(l),o=r.Wap.getInnerMostAxes(o.length,l.shape.length)),r.Wap.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);const h=hs(n,l,o[0],"max");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},ds={kernelName:r.aJk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i}=s;let o=r.D5U.parseAxisParam(i,a.shape);const u=r.Wap.getAxesPermutation(o,a.shape.length);let l=a;const c=[];null!=u&&(l=Vn({inputs:{x:a},backend:n,attrs:{perm:u}}),c.push(l),o=r.Wap.getInnerMostAxes(o.length,l.shape.length)),r.Wap.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);const h=hs(n,l,o[0],"min");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},fs=Nn({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),ms={kernelName:r.M2y,backendName:"webgl",kernelFunc:fs},gs=Nn({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),ys={kernelName:r.qw7,backendName:"webgl",kernelFunc:gs},bs=Nn({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),xs={kernelName:r.jMg,backendName:"webgl",kernelFunc:bs},vs=Tn({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),ws={kernelName:r.QCc,backendName:"webgl",kernelFunc:vs},ks=Nn({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Is={kernelName:r.Oyi,backendName:"webgl",kernelFunc:ks};class Ss{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${s?r?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const x=4*Math.floor(a/4),v=a%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class Ns{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(a/4),k=a%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const Ts={kernelName:r.JhU,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;M(a,"avgPool");const{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=s;r.D5U.assert(r.Wap.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=r.Wap.computePool2DInfo(a.shape,i,o,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&r.D5U.arraysEqual(c.inShape,c.outShape))return mn({inputs:{x:a},backend:n});const h=new Ss(c,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}},Cs={kernelName:r._k9,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l,dataFormat:c}=s,h=r.Wap.computePool3DInfo(a.shape,i,o,[1,1,1],u,l,c),p=new Ns(h,"avg",!1);return n.runWebGLProgram(p,[a],"float32")}};class $s{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Es{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const As={kernelName:r.IMb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:i}=t,o=i,{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=s,p=r.Wap.computePool3DInfo(o.shape,u,l,[1,1,1],c,h),d=new Es(p);return n.runWebGLProgram(d,[a],o.dtype)}},Ds={kernelName:r.ROF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:i}=t,o=i;M([a,i],"avgPoolGrad");const{filterSize:u,strides:l,pad:c}=s,h=r.Wap.computePool2DInfo(o.shape,u,l,1,c),p=new $s(h);return n.runWebGLProgram(p,[a],o.dtype)}},Rs={kernelName:r.XLW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;return Gn({a:r,b:a,transposeA:i,transposeB:o,backend:n})}};class _s{constructor(e,t,n,s,a,i){this.outputShape=[],this.variableNames=["x","mean","variance"],r.Wap.assertAndGetBroadcastShape(e,t),r.Wap.assertAndGetBroadcastShape(e,n);let o="0.0";null!=s&&(r.Wap.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let u="1.0";null!=a&&(r.Wap.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${u};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Fs{constructor(e,t,n,s,a,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],r.Wap.assertAndGetBroadcastShape(e,t),r.Wap.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";null!=s&&(r.Wap.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let u="vec4(1.0)";null!=a&&(r.Wap.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${u};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Os={kernelName:r.sHE,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,mean:a,variance:i,offset:o,scale:u}=e;r.D5U.assert(a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),r.D5U.assert(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),r.D5U.assert(null==u||a.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const c=[s,a,i];let h=null;null!=o&&(h=o.shape,c.push(o));let p=null;null!=u&&(p=u.shape,c.push(u));const d=(0,r.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new Fs(s.shape,a.shape,i.shape,h,p,l):new _s(s.shape,a.shape,i.shape,h,p,l);return t.runWebGLProgram(d,c,c[0].dtype)}};class Ms{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Z(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return Ls.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let s;s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${Ls[t]} = start[${t}] + coords.${Ls[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${s}\n        setOutput(getSource(${n}));\n      }\n    `}}const Ls=["x","y","z","w","u","v"];class zs{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Z(this.rank),n=Kt("coords",this.rank),s=Kt("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${s[this.rank-1]};\n        result.y = ${a};\n        --${s[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${s[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${s[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${s[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function Bs(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{begin:i,size:o}=s,[u,l]=r.kuN.parseSliceParams(a,i,o);if(r.kuN.assertParamsValid(a,u,l),0===r.D5U.sizeFromShape(l))return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=Ft(e.values,u,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,t)}const{isPacked:c}=n.texData.get(a.dataId),h=r.kuN.isSliceContinous(a.shape,u,l);if(c||!h){const e=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new zs(l):new Ms(l),t=[u];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,s){const a=s.texData.get(e.dataId),i=s.makeTensorInfo(n,e.dtype),o=s.texData.get(i.dataId);Object.assign(o,a),o.refCount=1,o.shape=n,o.dtype=e.dtype;let u=r.kuN.computeFlatOffset(t,r.D5U.computeStrides(e.shape));a.slice&&(u+=a.slice.flatOffset),o.slice={flatOffset:u,origDataId:a.slice&&a.slice.origDataId||e.dataId};const l=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,l+1),i}(a,u,l,n)}const Ps={kernelName:r.p2w,backendName:"webgl",kernelFunc:Bs},Us={kernelName:r.zws,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:i,crops:o}=s;r.D5U.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const u=i.reduce(((e,t)=>e*t)),l=r.Wap.getReshaped(a.shape,i,u),c=r.Wap.getPermuted(l.length,i.length),h=r.Wap.getReshapedPermuted(a.shape,i,u),p=r.Wap.getSliceBeginCoords(o,i.length),d=r.Wap.getSliceSize(h,o,i.length),f=[],m=_n({inputs:{x:a},backend:n,attrs:{shape:l}}),g=Vn({inputs:{x:m},backend:n,attrs:{perm:c}}),y=_n({inputs:{x:g},backend:n,attrs:{shape:h}}),b=Bs({inputs:{x:y},backend:n,attrs:{begin:p,size:d}});return f.push(m),f.push(g),f.push(y),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},Ws={kernelName:r.zvY,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=n.readSync(r.dataId),u=n.readSync(a.dataId),l=ot(o,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,l)}},Vs=Tn({opSnippet:"return float(a != b);",cpuKernelImpl:$t,dtype:"bool"}),Hs={kernelName:r.yQU,backendName:"webgl",kernelFunc:Vs};function Gs(e){const{inputs:t,backend:n}=e,{input:s}=t;return mn({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.real},backend:n})}const js={kernelName:r.xJR,backendName:"webgl",kernelFunc:Gs},Xs={kernelName:r.RFZ,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s,attrs:a}=t,{x:i}=n,{dtype:o}=a;if("complex64"===o){if("complex64"===i.dtype)return mn({inputs:{x:i},backend:s});const t=r.lls(i.shape),n=e({inputs:{x:i},backend:s,attrs:{dtype:"float32"}}),a=yn({inputs:{real:n,imag:t},backend:s});return t.dispose(),s.disposeIntermediateTensorInfo(n),a}if("complex64"===i.dtype){const t=Gs({inputs:{input:i},backend:s}),n=e({inputs:{x:t},backend:s,attrs:{dtype:o}});return s.disposeIntermediateTensorInfo(t),n}if(!r.D5U.hasEncodingLoss(i.dtype,o)){const e=mn({inputs:{x:i},backend:s});return{dataId:e.dataId,shape:e.shape,dtype:o}}if("int32"===o)return function(e,t){const n=new nn(e.shape,"return float(int(x));"),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}(i,s);if("bool"===o){const e=s.makeTensorInfo([],"bool",r.D5U.getTypedArrayFromDType("bool",1)),t=Vs({inputs:{a:i,b:e},backend:s});return s.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${o}`)}},qs="return ceil(x);",Ks=Nn({opSnippet:qs,packedOpSnippet:qs,cpuKernelImpl:lt}),Ys={kernelName:r.gJX,backendName:"webgl",kernelFunc:Ks};class Qs{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class Js{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const Zs={kernelName:r.xnO,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{clipValueMin:i,clipValueMax:o}=s;let u;u=(0,r.OBj)().getBool("WEBGL_PACK_CLIP")?new Js(a.shape):new Qs(a.shape);const l=[[i],[o]];return n.runWebGLProgram(u,[a],a.dtype,l)}};class er{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function tr(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const nr={kernelName:r.yj2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new er(s.shape),i=[tr(s,r.complexTensorInfos.real),tr(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class sr{constructor(e){this.outputShape=[],this.outputShape=r.Wap.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const s=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${s}));`)}const s=t.length,a=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class rr{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=r.Wap.computeOutShape(e,t);const n=this.outputShape,s=n.length,a=Z(s),i=Kt("coords",s),o=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map(((e,t)=>`T${t}`));const u=new Array(e.length-1);u[0]=e[0][t];for(let n=1;n<u.length;n++)u[n]=u[n-1]+e[n][t];const l=o[t],c=o.slice(-2),h=o.join();let p=`if (${l} < ${u[0]}) {\n        return getChannel(\n            getT0(${h}), vec2(${c.join()}));\n        }`;for(let e=1;e<u.length;e++){const t=u[e-1];p+=`\n        if (${l} < ${u[e]}  && ${l} >= ${u[e-1]}) {\n          return getChannel(\n            getT${e}(${ar(o,l,t)}),\n            vec2(${ar(c,l,t)}));\n        }`}const d=u.length,f=u[u.length-1];p+=`\n        return getChannel(\n          getT${d}(${ar(o,l,f)}),\n          vec2(${ar(c,l,f)}));`,this.userCode=`\n      float getValue(${o.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[s-1]} = ${i[s-1]} + 1;\n        if (${i[s-1]} < ${n[s-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[s-2]} = ${i[s-2]} + 1;\n        if (${i[s-2]} < ${n[s-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[s-1]} = ${i[s-1]} - 1;\n        if (${i[s-2]} < ${n[s-2]} &&\n            ${i[s-1]} < ${n[s-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function ar(e,t,n){const s=e.indexOf(t);return e.map(((e,t)=>t===s?`${e} - ${n}`:e)).join()}function ir(e){const{inputs:t,backend:n}=e,{input:s}=t;return mn({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.imag},backend:n})}const or={kernelName:r.J_u,backendName:"webgl",kernelFunc:ir};function ur(e,t,n){const s=e[0].dtype;if("complex64"===s){const s=e.map((e=>Gs({inputs:{input:e},backend:n}))),r=e.map((e=>ir({inputs:{input:e},backend:n}))),a=ur(s,t,n),i=ur(r,t,n),o=yn({inputs:{real:a,imag:i},backend:n});return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===s&&(a=!0),a){const a=e.map((e=>{const s=r.D5U.sizeFromShape(e.shape.slice(t));return _n({inputs:{x:e},backend:n,attrs:{shape:[-1,s]}})})),i=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=r.Wap.computeOutShape(a.map((e=>e.shape)),1),u=1===a[0].shape[0],l=ct(i,o,s,u),c=r.Wap.computeOutShape(e.map((e=>e.shape)),t),h=n.makeTensorInfo(c,s,l);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}if(e.length>(0,r.OBj)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const s=Math.floor(e.length/2),r=ur(e.slice(0,s),t,n),a=ur(e.slice(s),t,n),i=ur([r,a],t,n);return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}if((0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const r=new rr(e.map((e=>e.shape)),t);return n.runWebGLProgram(r,e,s)}const{tensors2D:i,outShape:o}=function(e,t,n){const s=r.Wap.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>_n({inputs:{x:e},attrs:{shape:[-1,r.D5U.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:s}}(e,t,n),u=new sr(i.map((e=>e.shape))),l=n.runWebGLProgram(u,i,s);i.forEach((e=>n.disposeIntermediateTensorInfo(e)));const c=_n({inputs:{x:l},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(l),c}function lr(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s,i=r.D5U.parseAxisParam(a,t[0].shape)[0],o=r.Wap.computeOutShape(t.map((e=>e.shape)),i);if(0===r.D5U.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const u=t.filter((e=>r.D5U.sizeFromShape(e.shape)>0));if(1===u.length)return mn({inputs:{x:u[0]},backend:n});const l=u.map((e=>e.shape));return r.Wap.assertParamsConsistent(l,i),ur(u,i,n)}const cr={kernelName:r.Eh3,backendName:"webgl",kernelFunc:lr};class hr{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class pr{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${s});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class dr{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=re(this.outputShape.length);const{dataFormat:n}=t,s=z(),r="channelsLast"===n,a=r?0:1,i=r?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${r}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${s.output} = result;\n      }\n    `}}function fr({x:e,filter:t,convInfo:n,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape,c=s.texData.get(e.dataId),h=n.inChannels,p=l[0]*l[1]*l[2],d=n.outChannels,f="channelsLast"===n.dataFormat;let m;const g=[];if((1!==p&&1!==d||!(h>1e3))&&c.isPacked&&f&&null!=c.texture&&l[2]%2!=0&&r.D5U.arraysEqual(c.shape.slice(-3),l.slice(-3))){const h=l[0]*l[1]*(l[2]+1),p={dataId:e.dataId,shape:[1,h,n.inChannels],dtype:e.dtype},d=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,r.D5U.assert(A(c.shape,p.shape),(()=>`packed reshape ${c.shape} to ${p.shape} isn't free`));const f=_n({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(f);const y=Gn({a:p,b:f,backend:s,transposeA:!1,transposeB:!1,bias:a,activation:u,preluActivationWeights:i,leakyreluAlpha:o}),b=s.texData.get(y.dataId);r.D5U.assert(b.isPacked,(()=>"batchMatMul result is expected to be packed")),c.shape=d,b.shape=n.outShape,m=mn({inputs:{x:y},backend:s}),m.shape=n.outShape,g.push(y)}else{const r=_n({inputs:{x:e},backend:s,attrs:{shape:[1,f?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),c=_n({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=Gn({a:r,b:c,transposeA:!1,transposeB:!1,backend:s,bias:a,activation:u,preluActivationWeights:i,leakyreluAlpha:o});m=_n({inputs:{x:h},backend:s,attrs:{shape:n.outShape}}),g.push(r),g.push(c),g.push(h)}for(const e of g)s.disposeIntermediateTensorInfo(e);return m}function mr({x:e,filter:t,convInfo:n,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const{filterWidth:l,filterHeight:c,inChannels:h,outWidth:p,outHeight:d,dataFormat:f}=n,m="channelsLast"===f,g=l*c*h,y=d*p,b=[g,y],x=[],v=_n({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),w=_n({inputs:{x:t},backend:s,attrs:{shape:[1,g,r.D5U.sizeFromShape(t.shape)/g]}});x.push(v),x.push(w);const k=new dr(b,n),I=[v.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],S=s.runWebGLProgram(k,[v],"float32",I),N=_n({inputs:{x:S},backend:s,attrs:{shape:[1,b[0],b[1]]}});x.push(S),x.push(N);const T=null!=a,C=null!=i,$="leakyrelu"===u,E=u?Cn(u,!0):null,A=new $n(N.shape,w.shape,[1,y,n.outChannels],!0,!1,T,E,C,$),D=[N,w];if(a&&D.push(a),C&&D.push(i),$){const e=s.makeTensorInfo([],"float32",r.D5U.createScalarValue(o,"float32"));D.push(e),x.push(e)}const R=s.runWebGLProgram(A,D,"float32"),_=_n({inputs:{x:R},backend:s,attrs:{shape:m?[1,d,p,n.outChannels]:[1,n.outChannels,d,p]}});x.push(R);for(const e of x)s.disposeIntermediateTensorInfo(e);return _}const gr={kernelName:r.mhS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:u,dataFormat:l,dilations:c,dimRoundingMode:h}=s,p=r.Wap.convertConv2DDataFormat(l),d=r.Wap.computeConv2DInfo(a.shape,i.shape,o,c,u,h,!1,p);let f;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if((0,r.OBj)().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])f=mr({x:a,filter:i,convInfo:d,backend:n});else{const e=new hr(d);f=n.runWebGLProgram(e,[a,i],"float32")}else f=fr({x:a,filter:i,convInfo:d,backend:n});const m=_n({inputs:{x:f},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class yr{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class br{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=a?1:2,l=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class xr{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${r};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${s} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class vr{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=s-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${s}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${s} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const wr={kernelName:r.wUP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:i}=t,{strides:o,pad:u,dataFormat:l,dimRoundingMode:c,filterShape:h}=s,p=r.Wap.convertConv2DDataFormat(l),d=r.Wap.computeConv2DInfo(a.shape,h,o,1,u,c,!1,p),f=new yr(d);return n.runWebGLProgram(f,[a,i],"float32")}},kr={kernelName:r.wm,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:i}=t,{inputShape:o,strides:u,pad:l,dataFormat:c,dimRoundingMode:h}=s,p=r.Wap.convertConv2DDataFormat(c),d=r.Wap.computeConv2DInfo(o,i.shape,u,1,l,h,!1,p),f=new br(d);return n.runWebGLProgram(f,[a,i],"float32")}},Ir={kernelName:r.x12,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:u,dilations:l}=s,c=r.Wap.computeConv3DInfo(a.shape,i.shape,o,l,u),h=new pr(c);return n.runWebGLProgram(h,[a,i],"float32")}},Sr={kernelName:r.o2y,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:i}=t,{strides:o,pad:u,filterShape:l}=s,c=r.Wap.computeConv3DInfo(a.shape,l,o,1,u),h=new xr(c);return n.runWebGLProgram(h,[a,i],"float32")}},Nr={kernelName:r.ik2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:i}=t,{pad:o,strides:u,inputShape:l}=s,c=r.Wap.computeConv3DInfo(l,i.shape,u,1,o),h=new vr(c);return n.runWebGLProgram(h,[a,i],"float32")}},Tr=Nn({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),Cr={kernelName:r.mc4,backendName:"webgl",kernelFunc:Tr},$r=Nn({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),Er={kernelName:r.TR1,backendName:"webgl",kernelFunc:$r};class Ar{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const p="bilinear"===s?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const Dr={kernelName:r.VcC,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=s,c=new Ar(r.shape,a.shape,o,u,l);return n.runWebGLProgram(c,[r,a,i],"float32")}};class Rr{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const s=e.length,r=t?"0.0":`getX(${_r(s,"coords")})`,a=e[e.length-1];let i="",o="";t?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${Z(s)} coords = getOutputCoords();\n        int end = ${Fr(s,"coords")};\n        float val = ${r};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${Fr(s,"coords")} = idx;\n          val += getX(${_r(s,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function _r(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function Fr(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const Or={kernelName:r.iHb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,exclusive:o,reverse:u}=s,l=a.shape.length,c=r.Wap.getAxesPermutation([i],l);let h=a;null!=c&&(h=Vn({inputs:{x:a},backend:n,attrs:{perm:c}}));const p=r.Wap.getInnerMostAxes(1,l)[0];if(p!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${i}`);const d=h.shape[p];let f=mn({inputs:{x:h},backend:n});for(let e=0;e<=Math.ceil(Math.log2(d))-1;e++){const t=new Rr(h.shape,!1,u),s=[[e]],r=f;f=n.runWebGLProgram(t,[f],f.dtype,s),n.disposeIntermediateTensorInfo(r)}if(o){const e=new Rr(h.shape,o,u),t=f;f=n.runWebGLProgram(e,[f],f.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=c){const e=Vn({inputs:{x:f},backend:n,attrs:{perm:r.Wap.getUndoAxesPermutation(c)}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(h),e}return f}},Mr={kernelName:r.QRR,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(a.dataId),s=ot(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,s)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(a),s=ut(e,t,i,o);return n.makeTensorInfo(s.shape,a.dtype,s.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};class Lr{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const zr={kernelName:r.T0n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockSize:i,dataFormat:o}=s;r.D5U.assert(i>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${i}`));const u=a.shape[0],l="NHWC"===o?a.shape[1]:a.shape[2],c="NHWC"===o?a.shape[2]:a.shape[3],h="NHWC"===o?a.shape[3]:a.shape[1],p=l*i,d=c*i,f=h/(i*i),m=new Lr("NHWC"===o?[u,p,d,f]:[u,f,p,d],i,o);return n.runWebGLProgram(m,[a],a.dtype)}};class Br{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=re(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let u="",l="";n&&(u=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class Pr{constructor(e,t=!1,n=null,s=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=re(this.outputShape.length);const i=e.outChannels/e.inChannels,o=e.padInfo.left,u=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,h=e.filterWidth,p=h;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<h;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;for(let e=0;e<c;e++){for(let e=0;e<h;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+=`\n        xR = xRCorner + ${e} * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      `;for(let t=0;t<(p+1)/2;t++){const n=2*t;if(d+=`\n          xC = xCCorner + ${n*l};\n          `,1===u){if(n<h&&(o%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n              `,d+=1===l&&n>0?`\n                xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                  } else {\n                    xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                xC${n} = xTexelC${n};\n                `,n+1<h)){const e=o%2==0?r.D5U.nearestLargerEven(l):l;l%2==0&&o%2==1||l%2!=0&&o%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                    xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${n+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${n+1}Ready = 1;\n                  }\n                  `,l>1&&(d+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                      xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${n}Ready = 1;\n                    }\n                    `),d+=`\n                  xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                  `):d+=1===e?`\n                    xC${n+1} = xTexelC${n};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                      xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${n+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${n+1}Ready = 1;\n                    }\n\n                    xC${n+1} = xTexelC${n+1};\n                    `}}else n<h&&(o%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                  xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${n+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${n+1}Ready = 1;\n                }\n\n                xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n              `,n+1<h&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                  xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${n+1}.zw = vec2(0.);\n                  }\n                  xTexelC${n+1}Ready = 1;\n                }\n\n                xC${n} = vec4(\n                  xTexelC${n}.xy, xTexelC${n+1}.xy);\n              `,n+1<h&&(d+=`\n                  xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                `)));n<h&&(d+=`\n            wTexel = getW(${e}, ${n}, d1, q);\n            dotProd += xC${n} * vec4(wTexel.xz, wTexel.xz);\n          `,n+1<h&&(d+=`\n              wTexel = getW(${e}, ${n+1}, d1, q);\n              dotProd += xC${n+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n        }\n      "}let f="",m="";n&&(f=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${g}\n        ${m}\n        setOutput(result);\n      }\n    `}}const Ur={kernelName:r.cie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:u,dilations:l,dimRoundingMode:c}=s;let h=l;null==h&&(h=[1,1]),r.D5U.assert(r.Wap.eitherStridesOrDilationsAreOne(o,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${h}'`));const p=r.Wap.computeConv2DInfo(a.shape,i.shape,o,h,u,c,!0);let d;d=(0,r.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?new Pr(p):new Br(p);const f=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return n.runWebGLProgram(d,[a,i],"float32",f)}};class Wr{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Vr{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Hr={kernelName:r.sL$,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:i}=t,{strides:o,dilations:u,pad:l,dimRoundingMode:c,filterShape:h}=s,p=r.Wap.computeConv2DInfo(a.shape,h,o,u,l,c,!0),d=new Wr(p);return n.runWebGLProgram(d,[a,i],"float32")}},Gr={kernelName:r.y7R,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:i}=t,{strides:o,dilations:u,pad:l,dimRoundingMode:c,inputShape:h}=s,p=r.Wap.computeConv2DInfo(h,i.shape,o,u,l,c,!0),d=new Vr(p);return n.runWebGLProgram(d,[a,i],"float32")}};class jr{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const Xr={kernelName:r.$w,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,a=[...s.shape,...s.shape],i=r.D5U.sizeFromShape(s.shape),o=_n({inputs:{x:s},backend:n,attrs:{shape:[i]}}),u=new jr(i),l=n.runWebGLProgram(u,[o],o.dtype),c=_n({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),c}};class qr{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=s;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const Kr={kernelName:r.p4S,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:u,dilations:l}=s,c=r.Wap.computeDilation2DInfo(a.shape,i.shape,o,u,"NHWC",l);let h;const p=new qr(c);h=n.runWebGLProgram(p,[a,i],"float32");const d=_n({inputs:{x:h},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(h),d}},Yr={kernelName:r.$g6,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:a}=s,i=t,{allDims:o,summedDims:u,idDims:l}=r.Wap.decodeEinsumEquation(a,i.length);r.Wap.checkEinsumDimSizes(o.length,l,i);const{path:c,steps:h}=r.Wap.getEinsumComputePath(u,l),p=h.length;let d=null,f=o.length;const m=[];for(let e=0;e<p;++e){for(const t of h[e]){const{permutationIndices:e,expandDims:s}=r.Wap.getEinsumPermutation(f,l[t]);let a;r.Wap.isIdentityPermutation(e)?a=i[t]:(a=Vn({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),m.push(a));const o=a.shape.slice();for(let e=0;e<s.length;++e)o.splice(s[e],0,1);r.D5U.arraysEqual(a.shape,o)||(a=_n({inputs:{x:a},backend:n,attrs:{shape:o}}),m.push(a)),null===d?d=a:(d=Dn({inputs:{a,b:d},backend:n}),m.push(d))}e<p-1&&(c[e]>=0&&(d=Un({inputs:{x:d},backend:n,attrs:{axis:c[e]-(o.length-f),keepDims:!1}}),m.push(d)),f--)}for(const e of m)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},Qr=Nn({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Jr={kernelName:r.SX0,backendName:"webgl",kernelFunc:Qr},Zr={kernelName:r.HEU,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:s,y:a}=t,i=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new fn("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,a.shape):new dn("return (b >= 1.0) ? a : a * (b + 1.0);",s.shape,a.shape);return n.runWebGLProgram(i,[s,a],s.dtype)}},ea=Tn({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:ht}),ta={kernelName:r.hdR,backendName:"webgl",kernelFunc:ea},na=Nn({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${r.Wap.ERF_P};\n  float a1 = ${r.Wap.ERF_A1};\n  float a2 = ${r.Wap.ERF_A2};\n  float a3 = ${r.Wap.ERF_A3};\n  float a4 = ${r.Wap.ERF_A4};\n  float a5 = ${r.Wap.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),sa={kernelName:r.Omj,backendName:"webgl",kernelFunc:na},ra="return exp(x);",aa=Nn({opSnippet:ra,packedOpSnippet:ra,cpuKernelImpl:pt}),ia={kernelName:r.NEP,backendName:"webgl",kernelFunc:aa};function oa(e){const{inputs:t,attrs:n,backend:s}=e,{dim:a}=n,{input:i}=t,o=i.shape.length,u=i.shape.slice();let l=a;return a<0&&(r.D5U.assert(-(o+1)<=a,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),l=o+a+1),u.splice(l,0,1),_n({inputs:{x:i},backend:s,attrs:{shape:u}})}const ua={kernelName:r.YFo,backendName:"webgl",kernelFunc:oa},la="return exp(x) - 1.0;",ca=Nn({opSnippet:la,packedOpSnippet:la,cpuKernelImpl:dt}),ha={kernelName:r.Y0y,backendName:"webgl",kernelFunc:ca};class pa{constructor(e,t,n){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${s});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${s}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function da(e,t,n){const s=n.texData.get(e.dataId),a=r.D5U.sizeFromShape(e.shape),i=e.shape[e.shape.length-1],o=_n({inputs:{x:e},backend:n,attrs:{shape:[a/i,i]}}),u=o.shape,l=new pa("real",u,t),c=new pa("imag",u,t),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:u},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:u}],p=n.runWebGLProgram(l,h,"float32"),d=n.runWebGLProgram(c,h,"float32"),f=yn({inputs:{real:p,imag:d},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d);const m=_n({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}const fa={kernelName:r.vwp,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return da(s,!1,n)}};class ma{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function ga(e){const{backend:t,attrs:n}=e,{shape:s,value:a}=n;let{dtype:i}=n;if(i=i||r.D5U.inferDtype(a),"string"===i){const e=r.D5U.getArrayFromDType(i,r.D5U.sizeFromShape(s));return e.fill(a),t.makeTensorInfo(s,i,e)}{const e=new ma(s,a),n=[[a]];return t.runWebGLProgram(e,[],i,n)}}const ya={kernelName:r.deh,backendName:"webgl",kernelFunc:ga};class ba{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const xa={kernelName:r.Uyb,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,s=t,r=new ba(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},va="return floor(x);",wa=Nn({opSnippet:va,packedOpSnippet:va,cpuKernelImpl:ft}),ka={kernelName:r.OR,backendName:"webgl",kernelFunc:wa},Ia=Tn({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Sa={kernelName:r.jeX,backendName:"webgl",kernelFunc:Ia};class Na{constructor(e){this.variableNames=["A"];const t=z(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class Ta{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=z(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${s}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const Ca={kernelName:r.eBW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e;let{pixels:a}=t;const{numChannels:i}=s,o="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,u="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[c,h]=o?[a.videoWidth,a.videoHeight]:[a.width,a.height],p=[h,c],d=[h,c,i];(u||o)&&(null==$a&&($a=document.createElement("canvas").getContext("2d")),$a.canvas.width=c,$a.canvas.height=h,$a.drawImage(a,0,0,c,h),a=$a.canvas);const f=n.makeTensorInfo(p,"int32");n.texData.get(f.dataId).usage=l.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(f.dataId),a);const m=(0,r.OBj)().getBool("WEBGL_PACK")?new Ta(d):new Na(d),g=n.runWebGLProgram(m,[f],"int32");return n.disposeData(f.dataId),g}};let $a;const Ea={kernelName:r._V0,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i,bias:o,preluActivationWeights:u}=t,{strides:l,pad:c,dataFormat:h,dilations:p,dimRoundingMode:d,activation:f,leakyreluAlpha:m}=s,g=r.Wap.convertConv2DDataFormat(h),y=r.Wap.computeConv2DInfo(a.shape,i.shape,l,p,c,d,!1,g);let b;const x=[];if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if((0,r.OBj)().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])b=mr({x:a,filter:i,convInfo:y,backend:n,bias:o,activation:f,preluActivationWeights:u,leakyreluAlpha:m});else{const e=null!=o,t=null!=u,s="leakyrelu"===f,l=f?Cn(f,!1):null,c=new hr(y,e,l,t,s),h=[a,i];if(o&&h.push(o),u&&h.push(u),s){const e=n.makeTensorInfo([],"float32",r.D5U.createScalarValue(m,"float32"));h.push(e),x.push(e)}b=n.runWebGLProgram(c,h,"float32")}else b=fr({x:a,filter:i,convInfo:y,backend:n,bias:o,activation:f,preluActivationWeights:u,leakyreluAlpha:m});const v=_n({inputs:{x:b},backend:n,attrs:{shape:y.outShape}});return x.push(b),x.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}},Aa={kernelName:r.luS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i,bias:o,preluActivationWeights:u}=t,{strides:l,pad:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s,m=[];let g=h;null==g&&(g=[1,1]),r.D5U.assert(r.Wap.eitherStridesOrDilationsAreOne(l,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`));const y=r.Wap.computeConv2DInfo(a.shape,i.shape,l,g,c,p,!0),b=(0,r.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,x=d?Cn(d,b):null,v=[a,i],w=null!=o,k=null!=u,I="leakyrelu"===d;if(w&&v.push(o),k&&v.push(u),I){const e=n.makeTensorInfo([],"float32",r.D5U.createScalarValue(f,"float32"));v.push(e),m.push(e)}let S;S=b?new Pr(y,w,x,k,I):new Br(y,w,x,k,I);const N=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],T=n.runWebGLProgram(S,v,"float32",N);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),T}};class Da{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const s=Z(t.length),r=Z(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${s} strides = ${s}(${this.strides});\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const Ra={kernelName:r.q1x,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:a}=t,i=a.shape,o=i[i.length-1],u=r.D5U.sizeFromShape(s.shape),[l,c,h,p]=r.Wap.prepareAndValidate(s,a),d=_n({inputs:{x:a},backend:n,attrs:{shape:[c,o]}}),f=_n({inputs:{x:s},backend:n,attrs:{shape:[r.D5U.sizeFromShape(s.shape)/h,h]}});if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(s),r=mt(e,t,s.dtype,c,o,h,p,s.shape,u);return n.makeTensorInfo(l,s.dtype,r.values)}const m=new Da(o,p,[c,h]),g=n.runWebGLProgram(m,[f,d],f.dtype),y=_n({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),y}};class _a{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=Z(this.rank),s=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let t=0;t<e.length;t++)2===t?s.push("int(getIndices(resRC.x, resRC.z))"):s.push(`${n[t]}`);return s.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function Fa(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,indices:i}=t,{axis:o,batchDims:u}=s,l=r.D5U.parseAxisParam(o,a.shape)[0],c=r.Wap.segment_util.collectGatherOpShapeInfo(a,i,l,u),h=r.D5U.sizeFromShape(i.shape),p=[],d=_n({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=_n({inputs:{x:i},backend:n,attrs:{shape:[c.batchSize,h/c.batchSize]}});p.push(d),p.push(f);const m=[c.batchSize,c.outerSize,h/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([a,i])||"string"===a.dtype){const e=n.bufferSync(f),t=n.bufferSync(d),s=gt(t,e,m);return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c.outputShape,s.dtype,s.values)}const g=new _a(d.shape,m),y=n.runWebGLProgram(g,[d,f],d.dtype);p.push(y);const b=_n({inputs:{x:y},backend:n,attrs:{shape:c.outputShape}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}const Oa={kernelName:r.qi_,backendName:"webgl",kernelFunc:Fa},Ma=Tn({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:yt,dtype:"bool"}),La={kernelName:r.iZT,backendName:"webgl",kernelFunc:Ma},za=Tn({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:bt}),Ba={kernelName:r.Acj,backendName:"webgl",kernelFunc:za},Pa={kernelName:r.Qg5,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return da(s,!0,n)}},Ua=Nn({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),Wa={kernelName:r.avt,backendName:"webgl",kernelFunc:Ua},Va=Nn({opSnippet:"return float(isinf(x));",dtype:"bool"}),Ha={kernelName:r.iWB,backendName:"webgl",kernelFunc:Va},Ga=Nn({opSnippet:"return float(isnan(x));",dtype:"bool"}),ja={kernelName:r.r7n,backendName:"webgl",kernelFunc:Ga},Xa=Tn({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:xt,dtype:"bool"}),qa={kernelName:r.vtC,backendName:"webgl",kernelFunc:Xa},Ka=Tn({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:vt,dtype:"bool"}),Ya={kernelName:r.CAk,backendName:"webgl",kernelFunc:Ka},Qa={kernelName:r.e7N,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=wt(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}},Ja=Nn({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:kt}),Za={kernelName:r.ZbH,backendName:"webgl",kernelFunc:Ja},ei=Nn({opSnippet:"return log(1.0 + x);"}),ti={kernelName:r.kU,backendName:"webgl",kernelFunc:ei},ni=Tn({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),si={kernelName:r.PYm,backendName:"webgl",kernelFunc:ni},ri=Nn({opSnippet:"return float(!(x >= 1.0));"}),ai={kernelName:r.VfG,backendName:"webgl",kernelFunc:ri},ii=Tn({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),oi={kernelName:r.MZg,backendName:"webgl",kernelFunc:ii};class ui{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${u})`:1===r?`1.0/(${u})`:`exp(log(${u}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class li{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${u})`:1===r?`1.0/(${u})`:`exp(log(${u}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const ci={kernelName:r.eZ0,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{depthRadius:i,bias:o,alpha:u,beta:l}=s,c=(0,r.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new li(a.shape,i,o,u,l):new ui(a.shape,i,o,u,l);return n.runWebGLProgram(c,[a],a.dtype)}};class hi{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${s}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${s})\n                * float(${r})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const pi={kernelName:r.Hhh,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=s,h=new hi(r.shape,o,u,l,c);return n.runWebGLProgram(h,[r,a,i],r.dtype)}};function di(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{reductionIndices:i,keepDims:o}=s,u=a.shape.length,l=r.D5U.parseAxisParam(i,a.shape);let c=l;const h=r.Wap.getAxesPermutation(c,u),p=null!=h,d=n.shouldExecuteOnCPU([a]);let f=a;if(p){if(d){const e=n.texData.get(f.dataId).values,t=new Array(u);for(let e=0;e<t.length;e++)t[e]=a.shape[h[e]];const s=jt(e,a.shape,a.dtype,h,t);f=n.makeTensorInfo(t,a.dtype),n.texData.get(f.dataId).values=s}else f=Pn(a,h,n);c=r.Wap.getInnerMostAxes(c.length,u)}r.Wap.assertAxesAreInnerMostDims("max",c,u);const[m,g]=r.Wap.computeOutAndReduceShapes(f.shape,c);let y,b=m;if(o&&(b=r.Wap.expandShapeToKeepDim(m,l)),d){const e=n.texData.get(f.dataId).values,t=It(e,r.D5U.sizeFromShape(g),b,a.dtype);y=n.makeTensorInfo(b,a.dtype),n.texData.get(y.dataId).values=t}else y=function(e,t,n,s){const a=r.D5U.sizeFromShape(t),i=_n({inputs:{x:e},attrs:{shape:[r.D5U.sizeFromShape(e.shape)/a,a]},backend:s}),o=Ln(i,e.dtype,"max",s),u=_n({inputs:{x:o},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(o),u}(f,g,b,n);return p&&n.disposeIntermediateTensorInfo(f),y}const fi={kernelName:r.YoZ,backendName:"webgl",kernelFunc:di},mi=Tn({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:St}),gi={kernelName:r.BMI,backendName:"webgl",kernelFunc:mi},yi={kernelName:r.mTV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;M(a,"maxPool");const{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=s;r.D5U.assert(r.Wap.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=r.Wap.computePool2DInfo(a.shape,i,o,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&r.D5U.arraysEqual(c.inShape,c.outShape))return mn({inputs:{x:a},backend:n});const h=new Ss(c,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}},bi={kernelName:r.OAf,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{filterSize:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=s,h=r.Wap.computePool3DInfo(a.shape,i,o,[1,1,1],u,c,l),p=new Ns(h,"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}};class xi{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=a-1-e.padInfo.left,u=r*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class vi{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,p=l-1-e.padInfo.left,d=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const wi={kernelName:r.OU7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:i}=t,o=i,{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=s,p=r.Wap.computePool3DInfo(o.shape,u,l,[1,1,1],c,h),d=new Ns(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new vi(p),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},ki={kernelName:r.OV7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:i,output:o}=t,u=i;M([i,o],"maxPoolGrad");const{filterSize:l,strides:c,pad:h,dimRoundingMode:p}=s,d=r.Wap.computePool2DInfo(u.shape,l,c,1,h,p),f=new Ss(d,"max",!0),m=n.runWebGLProgram(f,[u],u.dtype),g=new xi(d),y=n.runWebGLProgram(g,[a,m],u.dtype);return n.disposeIntermediateTensorInfo(m),y}},Ii={kernelName:r.vFR,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:a,strides:i,pad:o,includeBatchInIndex:u}=t,l=n;r.D5U.assert(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const c=[1,1];r.D5U.assert(r.Wap.eitherStridesOrDilationsAreOne(i,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=r.Wap.computePool2DInfo(s.shape,a,i,c,o),[p,d]=function(e,t,n,s){let r=new Ss(n,"max",!1);const a=s.runWebGLProgram(r,[e],"float32");return r=new Ss(n,"max",!0,!0,t),[a,s.runWebGLProgram(r,[e],"float32")]}(s,u,h,l);return[p,d]}},Si={kernelName:r.q2K,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{keepDims:a,axis:i}=t,o=n,u=s.shape.length,l=r.D5U.parseAxisParam(i,s.shape);let c=l;const h=r.Wap.getAxesPermutation(c,u),p=null!=h,d=o.shouldExecuteOnCPU([s]),f=[];let m=s;if(p){if(d){const e=o.texData.get(m.dataId).values,t=new Array(u);for(let e=0;e<t.length;e++)t[e]=s.shape[h[e]];const n=jt(e,s.shape,s.dtype,h,t);m=o.makeTensorInfo(t,s.dtype),o.texData.get(m.dataId).values=n}else m=Pn(s,h,o);f.push(m),c=r.Wap.getInnerMostAxes(c.length,u)}r.Wap.assertAxesAreInnerMostDims("sum",c,u);const[g,y]=r.Wap.computeOutAndReduceShapes(m.shape,c);let b=g;a&&(b=r.Wap.expandShapeToKeepDim(g,l));const x=function(e,t,n,s){const a=r.D5U.sizeFromShape(t),i=_n({inputs:{x:e},attrs:{shape:[r.D5U.sizeFromShape(e.shape)/a,a]},backend:s}),o=Ln(i,"float32","mean",s),u=_n({inputs:{x:o},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(o),u}(m,y,b,o);for(const e of f)o.disposeIntermediateTensorInfo(e);return x}},Ni={kernelName:r.c17,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,u=a.shape.length,l=r.D5U.parseAxisParam(i,a.shape);let c=l;const h=r.Wap.getAxesPermutation(c,u);let p=a;null!=h&&(p=Vn({inputs:{x:a},backend:n,attrs:{perm:h}}),c=r.Wap.getInnerMostAxes(c.length,a.shape.length)),r.Wap.assertAxesAreInnerMostDims("min",c,u);const[d,f]=r.Wap.computeOutAndReduceShapes(p.shape,c),m=_n({inputs:{x:p},backend:n,attrs:{shape:[-1,r.D5U.sizeFromShape(f)]}}),g=Ln(m,m.dtype,"min",n);let y;return y=_n(o?{inputs:{x:g},backend:n,attrs:{shape:r.Wap.expandShapeToKeepDim(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),y}},Ti=Tn({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Nt}),Ci={kernelName:r.q8u,backendName:"webgl",kernelFunc:Ti};class $i{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=Z(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),u="reflect"===n?0:1;this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${s}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class Ei{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=Z(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=Kt("rc",s),u=Kt("source",s),l=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===s){const e=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[s-2]} += 1;\n        if(${o[s-2]} < ${this.outputShape[s-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[s-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const Ai={kernelName:r.jQs,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s}=e,{paddings:a,mode:i}=n,o=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ei(s.shape,a,i):new $i(s.shape,a,i);return t.runWebGLProgram(o,[s],s.dtype)}},Di=Tn({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Ri={kernelName:r.Vbg,backendName:"webgl",kernelFunc:Di};class _i{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const Fi=Tn({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),Oi={kernelName:r.oHH,backendName:"webgl",kernelFunc:Fi},Mi="return a - b;",Li=Tn({opSnippet:Mi,packedOpSnippet:Mi,supportsComplex:!0,cpuKernelImpl:Vt}),zi={kernelName:r.Tr8,backendName:"webgl",kernelFunc:Li};function Bi(e){const{inputs:t,backend:n,attrs:s}=e,{logits:a}=t,{dim:i}=s,o=r.D5U.parseAxisParam([i],a.shape),u=di({inputs:{x:a},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=r.Wap.expandShapeToKeepDim(u.shape,o),c=_n({inputs:{x:u},backend:n,attrs:{shape:l}}),h=Li({inputs:{a,b:c},backend:n}),p=aa({inputs:{x:h},backend:n}),d=Un({inputs:{x:p},backend:n,attrs:{axis:o,keepDims:!1}}),f=_n({inputs:{x:d},backend:n,attrs:{shape:l}}),m=Fi({inputs:{a:p,b:f},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}const Pi={kernelName:r.Gcp,backendName:"webgl",kernelFunc:Bi},Ui={kernelName:r.NZg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s,u=o?r:Bi({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new _i(l,c,a),p=[[i]],d=n.runWebGLProgram(h,[u],"int32",p);return o||n.disposeIntermediateTensorInfo(u),d}},Wi="return -x;",Vi={kernelName:r.kuV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){const e=n.texData.get(s.dataId),[t,r]=Ct(e.values,s.shape,s.dtype);return n.makeTensorInfo(r,s.dtype,t)}let a;return a=(0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new an(s.shape,Wi):new nn(s.shape,Wi),n.runWebGLProgram(a,[s],s.dtype)}},Hi=r.GDt.GP,Gi={kernelName:r.uv1,backendName:"webgl",kernelFunc:function(e){r.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:a,scores:i}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:l}=s,c=n.readSync(a.dataId),h=n.readSync(i.dataId),{selectedIndices:p}=Hi(c,h,o,u,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},ji=r.GDt.qP,Xi={kernelName:r.cye,backendName:"webgl",kernelFunc:function(e){r.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:a,scores:i}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:l,padToMaxOutputSize:c}=s,h=n.readSync(a.dataId),p=n.readSync(i.dataId),{selectedIndices:d,validOutputs:f}=ji(h,p,o,u,l,c);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},qi=r.GDt.pA,Ki={kernelName:r.W0H,backendName:"webgl",kernelFunc:function(e){r.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:a,scores:i}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:l,softNmsSigma:c}=s,h=n.readSync(a.dataId),p=n.readSync(i.dataId),d=o,f=u,m=l,g=c,{selectedIndices:y,selectedScores:b}=qi(h,p,d,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class Yi{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${s}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const Qi={kernelName:r.we_,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{indices:a}=t,{depth:i,onValue:o,offValue:u}=s,l=r.D5U.sizeFromShape(a.shape),c=new Yi(l,i,o,u),h=_n({inputs:{x:a},backend:n,attrs:{shape:[l]}}),p=n.runWebGLProgram(c,[h],a.dtype);n.disposeIntermediateTensorInfo(h);const d=_n({inputs:{x:p},backend:n,attrs:{shape:[...a.shape,i]}});return n.disposeIntermediateTensorInfo(p),d}};function Ji(e){const{inputs:t,backend:n}=e,{x:s}=t;if("complex64"===s.dtype){const e=Gs({inputs:{input:s},backend:n}),t=Ji({inputs:{x:e},backend:n}),r=ir({inputs:{input:s},backend:n}),a=Ji({inputs:{x:r},backend:n}),i=yn({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return ga({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:n})}const Zi={kernelName:r.RuY,backendName:"webgl",kernelFunc:Ji},eo={kernelName:r.qWM,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=Gs({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=ir({inputs:{input:r},backend:s}),i=Ji({inputs:{x:a},backend:s}),o=yn({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return ga({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:s})}},to={kernelName:r.QiL,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s;if(1===t.length)return oa({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const i=t[0].shape,o=t[0].dtype;t.forEach((e=>{r.D5U.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),r.D5U.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],l=lr({inputs:t.map((e=>{const t=oa({inputs:{input:e},backend:n,attrs:{dim:a}});return u.push(t),t})),backend:n,attrs:{axis:a}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class no{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=Z(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class so{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=Z(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=Kt("rc",s),u=Kt("source",s),l=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${u.slice(-2).join()})`,h=[`${r} rc = outputLoc;`,`${o[s-1]} += 1;\n       if(${l}) {\n      `,1===s?"":`}\n       rc = outputLoc;\n       ${o[s-2]} += 1;\n       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${o[s-1]} += 1;\n         if(${l}) {`],p=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let e=0,t=1===s?2:4;e<t;e++)d+=`\n        ${h[e]}\n        if (${p}) {\n          result[${e}] = float(value);\n        } else {\n          ${r} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;d+=1===s?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const ro=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{paddings:i,constantValue:o}=s;if(0===r.D5U.sizeFromShape(a.shape))return ga({backend:n,attrs:{shape:i.map(((e,t)=>e[0]+a.shape[t]+e[1])),value:o,dtype:a.dtype}});const u=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new so(a.shape,i,o):new no(a.shape,i,o),l=[[o]];return n.runWebGLProgram(u,[a],a.dtype,l)},ao={kernelName:r.lyA,backendName:"webgl",kernelFunc:ro},io=Tn({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),oo={kernelName:r.pe_,backendName:"webgl",kernelFunc:io},uo={kernelName:r.DlI,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,u=a.shape.length,l=[],c=r.D5U.parseAxisParam(i,a.shape);let h=c;const p=r.Wap.getAxesPermutation(h,u);let d,f=a;if(null!=p&&(f=Vn({inputs:{x:a},backend:n,attrs:{perm:p}}),h=r.Wap.getInnerMostAxes(h.length,u),l.push(f)),r.Wap.assertAxesAreInnerMostDims("prod",h,u),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:s,outDtype:r}=Et(f.shape,f.dtype,e,h);d=n.makeTensorInfo(s,r,t)}else{const[e,t]=r.Wap.computeOutAndReduceShapes(f.shape,h),s=r.D5U.sizeFromShape(t),i=_n({inputs:{x:f},backend:n,attrs:{shape:[-1,s]}}),o=Ln(i,(0,r.z4k)(a.dtype),"prod",n);d=_n({inputs:{x:o},backend:n,attrs:{shape:e}}),l.push(i),l.push(o)}if(o){l.push(d);const e=r.Wap.expandShapeToKeepDim(d.shape,c);d=_n({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},lo=e=>{const{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:i}=n,o=At(s,r,a,i);return t.makeTensorInfo([o.length],i,o)},co={kernelName:r.e6w,backendName:"webgl",kernelFunc:lo},ho=Nn({opSnippet:"return 1.0 / x;"}),po={kernelName:r.$HU,backendName:"webgl",kernelFunc:ho},fo=Nn({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),mo={kernelName:r.qkr,backendName:"webgl",kernelFunc:fo},go=Nn({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),yo={kernelName:r.SbG,backendName:"webgl",kernelFunc:go};class bo{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class xo{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const vo={kernelName:r._Yw,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:o,size:u}=s,[l,c]=u,h=(0,r.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new xo(a.shape,l,c,i,o):new bo(a.shape,l,c,i,o);return n.runWebGLProgram(h,[a],"float32")}};class wo{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const ko={kernelName:r.zbQ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new wo(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class Io{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let p;p=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class So{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let p;p=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const No={kernelName:r.dpD,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:o,size:u}=s,[l,c]=u,h=(0,r.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new So(a.shape,l,c,i,o):new Io(a.shape,l,c,i,o);return n.runWebGLProgram(h,[a],a.dtype)}};class To{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Co={kernelName:r.Hmb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new To(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class $o{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const s=e.map(((n,s)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(s))).join(","),r=Z(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}class Eo{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const s=Kt("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,i=Z(n);function o(n){const s=e.map(((s,r)=>function(n,s){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${s[n]} - 1`:`${s[n]}`}(r,n)));return`getChannel(getX(${s.join(",")}), vec2(${s.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(s.slice())};\n          if(${r}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(s.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\n            if(${r}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const Ao={kernelName:r.mKl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{dims:i}=s,o=a.shape.length,u=r.D5U.parseAxisParam(i,a.shape);if(0===o)return mn({inputs:{x:a},backend:n});const l=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Eo(a.shape,u):new $o(a.shape,u);return n.runWebGLProgram(l,[a],a.dtype)}};class Do{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],s=e[2];this.outputShape=e;let r="";r="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${r}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Ro={kernelName:r.b9H,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:a,fillValue:i,center:o}=t,u=n,l=new Do(s.shape,i),[c,h]=r.Wap.getImageCenter(o,s.shape[1],s.shape[2]),p=[[c,h,Math.sin(a),Math.cos(a)]];return u.runWebGLProgram(l,[s],s.dtype,p)}},_o=Nn({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),Fo={kernelName:r.e07,backendName:"webgl",kernelFunc:_o},Oo=Nn({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Dt}),Mo={kernelName:r.bV0,backendName:"webgl",kernelFunc:Oo};class Lo{constructor(e,t,n,s,r,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=Z(r.length),u=Z(a.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let h="";1===s?h="i":2===s&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${r});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const zo={kernelName:r.xQA,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:a,updates:i}=t,{shape:o}=s,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:p}=r.Wap.calculateShapes(i,a,o),d=[p/c,c];if(0===p)return n.makeTensorInfo(o,a.dtype);const f=_n({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=_n({inputs:{x:i},backend:n,attrs:{shape:[l,c]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0])),y=new Lo(l,u,f.shape.length,m.shape.length,h,d),b=n.runWebGLProgram(y,[m,f,g],m.dtype),x=_n({inputs:{x:b},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),x}};class Bo{constructor(e,t,n){let s,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",s="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let s=0;s<t.length;s++)i.push(`${n[s]}`),s<e&&a.push(`${n[s]}`);s=a.join(),r=i.join()}const a=Z(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${s});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}const Po={kernelName:r.PhF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:a,e:i}=t,o=new Bo(s.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(o,[s,a,i],(0,r.x8V)(a.dtype,i.dtype))}},Uo=Nn({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${r.Wap.SELU_SCALEALPHA};\n  float scale = ${r.Wap.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),Wo={kernelName:r.oFR,backendName:"webgl",kernelFunc:Uo},Vo="return 1.0 / (1.0 + exp(-1.0 * x));",Ho=Nn({opSnippet:Vo,packedOpSnippet:Vo,cpuKernelImpl:Rt}),Go={kernelName:r.a5O,backendName:"webgl",kernelFunc:Ho},jo=Nn({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),Xo={kernelName:r.i5y,backendName:"webgl",kernelFunc:jo},qo=Nn({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),Ko={kernelName:r.RQH,backendName:"webgl",kernelFunc:qo},Yo=Nn({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),Qo={kernelName:r.wYB,backendName:"webgl",kernelFunc:Yo},Jo=Nn({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),Zo={kernelName:r.MRv,backendName:"webgl",kernelFunc:Jo},eu={kernelName:r.TQc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:i,paddings:o}=s;r.D5U.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const u=i.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...o);for(let e=1+i.length;e<a.shape.length;++e)l.push([0,0]);const c=[],h=ro({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),p=r.Wap.getReshaped(h.shape,i,u,!1),d=r.Wap.getPermuted(p.length,i.length,!1),f=r.Wap.getReshapedPermuted(h.shape,i,u,!1),m=_n({inputs:{x:h},backend:n,attrs:{shape:p}}),g=Vn({inputs:{x:m},backend:n,attrs:{perm:d}}),y=_n({inputs:{x:g},backend:n,attrs:{shape:f}});return c.push(h),c.push(m),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},tu={kernelName:r.O3z,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(s.dataId),u=n.readSync(r.dataId),l=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,p,d,f,m]=Ot(o,s.shape,s.dtype,u,r.dtype,l,c);return[n.makeTensorInfo(p,s.dtype,h),n.makeTensorInfo([p[0]],r.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}},nu={kernelName:r.nhH,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(r.dataId)),o=n.readSync(s.dataId),u=Array.from(n.readSync(a.dataId)),[l,c,h]=Mt(o,s.shape,s.dtype,i,u);return[n.makeTensorInfo(c,s.dtype,l),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},su={kernelName:r.w3H,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=n.readSync(s.dataId),o=n.readSync(r.dataId),u=n.readSync(a.dataId),[l,c]=Lt(i,s.shape,s.dtype,o,u,!0);return n.makeTensorInfo(c,s.dtype,l)}},ru={kernelName:r.ZjV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=n.readSync(s.dataId),o=n.readSync(r.dataId),u=n.readSync(a.dataId),[l,c]=Lt(i,s.shape,s.dtype,o,u);return n.makeTensorInfo(c,s.dtype,l)}},au={kernelName:r.D2d,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:a,sparseValues:i,defaultValue:o}=t,{outputShape:u}=s,{sliceRank:l,numUpdates:c,strides:h,outputSize:p}=r.Wap.calculateShapes(i,a,u),d=new Lo(c,l,a.shape.length,i.shape.length,h,[p,1],!1),f=n.runWebGLProgram(d,[i,a,o],i.dtype),m=_n({inputs:{x:f},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(f),m}},iu={kernelName:r.L8s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{numOrSizeSplits:i,axis:o}=s,u=r.D5U.parseAxisParam(o,a.shape)[0],l=r.Wap.prepareSplitSize(a,i,u),c=a.shape.length,h=new Array(c).fill(0),p=a.shape.slice();return l.map((e=>{const t=[...p];t[u]=e;const s=Bs({inputs:{x:a},backend:n,attrs:{begin:h,size:t}});return h[u]+=e,s}))}},ou="return sqrt(x);",uu=Nn({opSnippet:ou,packedOpSnippet:ou,cpuKernelImpl:zt}),lu={kernelName:r.FKq,backendName:"webgl",kernelFunc:uu},cu=Nn({opSnippet:"return x * x;"}),hu={kernelName:r.bK0,backendName:"webgl",kernelFunc:cu},pu="return (a - b) * (a - b);",du=Tn({opSnippet:pu,packedOpSnippet:pu}),fu={kernelName:r._tC,backendName:"webgl",kernelFunc:du},mu={kernelName:r.h8e,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:s}=e,r=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new nn(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}};class gu{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const s=n.length,r=Z(n.length),a=Z(n.length);let i="";if(1===s)i="coords * strides + begin";else{let e=0;i=n.map(((t,s)=>(e++,1===n.length?`coords * strides[${s}] + begin[${s}]`:`coords[${e-1}] * strides[${s}] + begin[${s}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${e});\n      ${r} strides = ${r}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const yu={kernelName:r.jQk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{begin:i,end:o,strides:u,beginMask:l,endMask:c,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:d}=s,{nonStrided:f,$begin:m,$strides:g,size:y,newShape:b,outShape:x}=r.kuN.sliceInfo(a.shape,i,o,u,l,c,h,p,d),v=_n({inputs:{x:a},backend:n,attrs:{shape:b}});let w;if(f){const e=Bs({inputs:{x:v},backend:n,attrs:{begin:m,size:y}});w=_n({inputs:{x:e},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(e)}else if(x.some((e=>0===e)))w=n.makeTensorInfo(x,a.dtype,[]);else if(n.shouldExecuteOnCPU([v])){const e=n.texData.get(v.dataId).values,t=(0,r.f3b)(v.shape,v.dtype,e),s=Bt(x,t,g,m);w=n.makeTensorInfo(x,v.dtype,s.values)}else{const e=new gu(m,g,x);w=n.runWebGLProgram(e,[v],v.dtype)}const k=_n({inputs:{x:w},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),k}},bu={kernelName:r._JP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=s,{data:c,dataSplits:h}=t,p=n.readSync(c.dataId),d=n.readSync(h.dataId),[f,m]=Pt(p,d,r,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},xu={kernelName:r.s1s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(a.dataId),u=n.readSync(i.dataId)[0],[l,c,h]=Ut(o,u,r),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},vu={kernelName:r.XkS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=Wt(i,r);return n.makeTensorInfo(a.shape,"int32",o)}},wu=Nn({opSnippet:"return tan(x);"}),ku={kernelName:r.sEM,backendName:"webgl",kernelFunc:wu},Iu=Nn({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),Su={kernelName:r.MIZ,backendName:"webgl",kernelFunc:Iu};class Nu{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const s=Z(this.rank),r=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let t=0;t<e.length;t++)s.push(`imod(${n[t]}, ${e[t]})`);return s.join()}(e);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function Tu(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{reps:i}=s;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>r.D5U.decodeString(e))):e,s=(0,r.f3b)(a.shape,a.dtype,t),o=Ht(s,i);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new Nu(a.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}const Cu={kernelName:r.n9L,backendName:"webgl",kernelFunc:Tu};class $u{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class Eu{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function Au(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function Du(e){let t=1;for(;t<e;)t*=2;return t}const Ru={kernelName:r.cWu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{k:i,sorted:o}=s,u=(0,r.OBj)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=(0,r.OBj)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=a.shape,h=c[c.length-1];if(n.shouldExecuteOnCPU([a])||h<u||i>l){const e=n.readSync(a.dataId),[t,s]=Gt(e,c,a.dtype,i,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(s.shape,s.dtype,s.values)]}if(0===i)return c[c.length-1]=0,[n.makeTensorInfo(c,a.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(1===h)return[a,ga({attrs:{shape:c,dtype:"int32",value:0},backend:n})];const p=n.texData.get(a.dataId),d=null!==p&&p.isPacked,f=d?n.unpackTensor(a):a,m=r.D5U.sizeFromShape(c)/h,g=_n({inputs:{x:f},attrs:{shape:[m,h]},backend:n});d&&Au(n,f);const y=Du(i),b=Du(h);let x=null;const v=()=>null===x?[g,g]:[g,x],w=(e,t,s)=>{const r=v(),a=new $u(s),i=[[h],[null===x?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=x;x=n.runWebGLProgram(a,r,"int32",i),Au(n,o)};for(let e=1;e<y;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)w(t,n,[m,b])}for(let e=b;e>y;e/=2){const t=v(),s=new Eu([m,e/2]),r=[[h],[null===x?1:0],[y]],a=x;x=n.runWebGLProgram(s,t,"int32",r),Au(n,a);const i=y/2,o=2*i;for(let e=i;e>=1;e/=2)w(o,e,x.shape)}let k=x;x=Bs({inputs:{x},backend:n,attrs:{begin:0,size:[m,i]}}),Au(n,k);let I=Fa({inputs:{x:g,indices:x},backend:n,attrs:{axis:1,batchDims:1}});Au(n,g);const S=c.slice(0,-1);S.push(i),k=x,x=_n({inputs:{x},attrs:{shape:S},backend:n}),Au(n,k);const N=I;return I=_n({inputs:{x:I},attrs:{shape:S},backend:n}),Au(n,N),[I,x]}};class _u{constructor(e,t,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(s){default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${r});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${r});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const Fu={kernelName:r.wx7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=s,[c,h,p,d]=r.shape,[f,m]=null!=l?l:[h,p],g=new _u(h,p,i,o,u,[c,f,m,d]);return n.runWebGLProgram(g,[r,a],"float32")}},Ou={kernelName:r.kpP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;M(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(a.dataId),{outputValues:o,outputShape:u,indices:l}=Xt(i,r,a.shape,a.dtype);return[s.makeTensorInfo(u,a.dtype,o),s.makeTensorInfo([l.length],"int32",l)]}},Mu={kernelName:r.ToN,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r,o=i.shape.length,u=r.shape[a],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(l[c++]=i.shape[e]);const h=[],p=new Array(o).fill(0),d=i.shape.slice();d[a]=1;const f=new Array(u);for(let e=0;e<f.length;e++){p[a]=e;const t=Bs({inputs:{x:i},backend:n,attrs:{begin:p,size:d}}),s=_n({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=s,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class Lu{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,i=a*Math.ceil(r/n);this.outputShape=[s,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let h="";r%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const zu=[ci,pi,jn,qn,Yn,Jn,ts,rs,as,is,ps,ds,ms,ys,ws,xs,Is,Cs,Ts,As,Ds,Rs,Os,Us,Ws,Xs,Ys,Zs,nr,bn,cr,wr,kr,gr,Sr,Nr,Ir,Cr,Er,Dr,Or,Mr,zr,Hr,Gr,Ur,Xr,Kr,Yr,Jr,Zr,ta,sa,ia,ua,ha,fa,ya,xa,ka,Sa,Ca,Ea,Aa,Ra,Oa,La,Ba,gn,Pa,or,Wa,Ha,ja,wn,qa,Ya,Qa,ti,Za,si,ai,oi,fi,bi,yi,wi,ki,Ii,gi,Si,Ni,Ci,Ai,Ri,Ui,Rn,Vi,Gi,Xi,Ki,Hs,Qi,eo,to,ao,oo,Sn,uo,co,js,Oi,po,yo,mo,Fn,vo,ko,No,Co,Ao,Ro,Fo,Mo,zo,Po,Wo,Go,Xo,Ko,Qo,Ps,Pi,Zo,eu,tu,nu,su,ru,au,iu,lu,hu,fu,mu,yu,bu,xu,vu,zi,Wn,ku,Su,Cu,Ru,Fu,Hn,Ou,Mu,{kernelName:r.Qvg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,segmentIds:i}=t,{numSegments:o}=s,u=a.shape.length,l=[];let c=0;const h=r.Wap.getAxesPermutation([c],u);let p=a;null!=h&&(p=Vn({inputs:{x:a},backend:n,attrs:{perm:h}}),l.push(p),c=r.Wap.getInnerMostAxes(1,u)[0]);const d=r.Wap.segment_util.computeOutShape(p.shape,c,o),f=r.D5U.sizeFromShape([p.shape[c]]),m=_n({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}});l.push(m);const g=(0,r.z4k)(a.dtype),y=(e,t,s,a,i)=>{const o=e.shape[0],u=e.shape[1],c=r.Wap.segment_util.segOpComputeOptimalWindowSize(u,i),h=new Lu({windowSize:c,inSize:u,batchSize:o,numSegments:i},t),p=n.compileAndRun(h,[e,s],a);if(l.push(p),p.shape[1]===i)return p;const d=lo({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),f=Tu({inputs:{x:d},backend:n,attrs:{reps:[u/c]}});return l.push(d),l.push(f),y(p,t,f,a,i)},b=_n({inputs:{x:y(m,"unsortedSegmentSum",i,g,o)},backend:n,attrs:{shape:d}});let x=b;if(null!=h){l.push(b);const e=r.Wap.getUndoAxesPermutation(h);x=Vn({inputs:{x},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},Zi];for(const e of zu)(0,r.wCN)(e)},2766:(e,t,n)=>{"use strict";n.d(t,{YL:()=>ws,gJ:()=>ks});var s={};n.r(s),n.d(s,{json:()=>F});var r={};n.r(r),n.d(r,{json:()=>O});var a={};n.r(a),n.d(a,{json:()=>M});var i={};n.r(i),n.d(i,{json:()=>L});var o={};n.r(o),n.d(o,{json:()=>z});var u={};n.r(u),n.d(u,{json:()=>B});var l={};n.r(l),n.d(l,{json:()=>P});var c={};n.r(c),n.d(c,{json:()=>U});var h={};n.r(h),n.d(h,{json:()=>W});var p={};n.r(p),n.d(p,{json:()=>V});var d={};n.r(d),n.d(d,{json:()=>H});var f={};n.r(f),n.d(f,{json:()=>G});var m={};n.r(m),n.d(m,{json:()=>j});var g={};n.r(g),n.d(g,{json:()=>X});var y={};n.r(y),n.d(y,{json:()=>q});var b={};n.r(b),n.d(b,{json:()=>K});var x={};n.r(x),n.d(x,{json:()=>Y});var v={};n.r(v),n.d(v,{json:()=>Q});var w={};n.r(w),n.d(w,{json:()=>J});var k,I,S=n(1140);!function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(k||(k={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(I||(I={}));const N={};function T(e){return N[e]}function C(e,t,n,s,r){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd;if("tensor"===a.type)return $(t.inputNames[a.inputIndexStart],n,s,r);if("tensors"===a.type)return t.inputNames.slice(e,i).map((e=>$(e,n,s,r)));const o=$(t.inputNames.slice(e)[0],n,s,r),u=o.dataSync();return"number"===a.type?u[0]:S.D5U.toNestedArray(o.shape,u)}const i=t.attrParams[e];return i&&i.value}function $(e,t,n,s){const[r,a]=D(e);if(null!=s){const e=s.getHashTableHandleByName(r);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[A(r,e)]));return void 0!==i?t[A(r,i)][a]:void 0}function E(e,t){const[n,s,r]=D(e);return[A(n,t&&t.currentContextId),s,r]}function A(e,t){return t?`${e}-${t}`:e}function D(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],s=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),s]}function R(e,t,n){let s=C("pad",e,t,n);if("explicit"===s){s=C("explicitPaddings",e,t,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)r[e][0]=s[2*e],r[e][1]=s[2*e+1];return r}return s}function _(e){return e.kept?e:(0,S.d9v)(e)}const F=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],O=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],M=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],L=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],z=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],B=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],P=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],U=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],W=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],V=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],H=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],G=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],j=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],X=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],q=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],K=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],Y=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Q=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],J=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class Z{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[s,r,a,i,o,u,l,c,h,p,d,f,m,g,y,b,x,v,w].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,s=[],r=[],a=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?s.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e)),{});let o=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[s,,r]=E(e),a=i[s];if(null!=a.outputs){const e=a.outputs.indexOf(r);if(-1!==e){const r=`${s}:${e}`;t.inputNames[n]=r}}t.inputs.push(a),a.children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=i[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=E(e),n=i[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=E(e),n=i[t];n&&(n.signatureKey=l[e],o.push(n))})):o=s;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const d={nodes:i,inputs:o,outputs:u,weights:r,placeholders:s,signature:t,functions:p};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=T(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const s=n.type;let r;switch(n.type){case"string":r=te(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=te(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=he(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=he(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=se(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=se(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=ce(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ce(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=ne(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ne(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=de(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=de(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=le(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=le(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=pe(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=pe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=ie(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ie(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=oe(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=oe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=ae(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ae(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:r,type:s},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let s={};null!=t&&(s=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const r=[],a=[];e.signature.inputArg.forEach((e=>{const[t]=E(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:re(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),s[t]=n})),Object.keys(s).forEach((e=>{const t=s[e];t.inputNames.forEach(((e,n)=>{const[r,,a]=E(e),i=s[r];if(null!=i.outputs){const e=i.outputs.indexOf(a);if(-1!==e){const s=`${r}:${e}`;t.inputNames[n]=s}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=E(i[e.name]),r=s[t];null!=r&&(r.defaultOutput=n,a.push(r))}));const o=this.mapArgsToSignature(e);return{nodes:s,inputs:r,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function ee(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,S.OBj)().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function te(e,t,n,s=!1){const r=e[t];return null!=r?ee(r.s,s):n}function ne(e,t,n){const s=e[t];return s?s.b:n}function se(e,t,n){const s=e[t]||{},r=null!=s.i?s.i:null!=s.f?s.f:n;return"number"==typeof r?r:parseInt(r,10)}function re(e){switch("string"==typeof e&&(e=k[e]),e){case k.DT_FLOAT:return"float32";case k.DT_INT32:case k.DT_INT64:case k.DT_INT8:case k.DT_UINT8:return"int32";case k.DT_BOOL:return"bool";case k.DT_DOUBLE:return"float32";case k.DT_STRING:return"string";default:return null}}function ae(e,t,n){const s=e[t];return s&&s.func?s.func.name:n}function ie(e,t,n){const s=e[t];return s&&s.type?re(s.type):n}function oe(e,t,n){const s=e[t];return s&&s.list&&s.list.type?s.list.type.map((e=>re(e))):n}function ue(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function le(e,t,n){const s=e[t];return s&&s.shape?ue(s.shape):n}function ce(e,t,n){const s=e[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function he(e,t,n,s=!1){const r=e[t];return r&&r.list&&r.list.s?r.list.s.map((e=>ee(e,s))):n}function pe(e,t,n){const s=e[t];return s&&s.list&&s.list.shape?s.list.shape.map((e=>ue(e))):n}function de(e,t,n){const s=e[t];return s&&s.list&&s.list.b?s.list.b:n}class fe{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return $(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return $(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return se(this.node.rawAttrs,e,t);if(null!=n.s)return te(this.node.rawAttrs,e,t);if(null!=n.b)return ne(this.node.rawAttrs,e,t);if(null!=n.shape)return le(this.node.rawAttrs,e,t);if(null!=n.type)return ie(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return ce(this.node.rawAttrs,e,t);if(null!=n.list.s)return he(this.node.rawAttrs,e,t);if(null!=n.list.shape)return pe(this.node.rawAttrs,e,t);if(null!=n.list.b)return de(this.node.rawAttrs,e,t);if(null!=n.list.type)return oe(this.node.rawAttrs,e,t)}return t}}var me=n(6407),ge=n(7097),ye=n(9121),be=n(3740),xe=n(569),ve=n(2668);const we=(0,ve.op)({addN_:function(e){xe.hu(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),xe.hu(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>(0,be._1)(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!xe.cO(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const s=t;return ge.BV.runKernel(ye.Xz,s)}});var ke=n(5228),Ie=n(4841),Se=n(1274),Ne=n(9322),Te=n(9165),Ce=n(827),$e=n(4513),Ee=n(632),Ae=n(3453),De=n(5265),Re=n(6235),_e=n(7839),Fe=n(1470),Oe=n(2421),Me=n(1891),Le=n(7037),ze=n(9812),Be=n(369),Pe=n(6825),Ue=n(1661),We=n(173),Ve=n(2699),He=n(3233),Ge=n(4650),je=n(4842),Xe=n(3426),qe=n(6943),Ke=n(2597),Ye=n(7474),Qe=n(4386),Je=n(7370),Ze=n(9036),et=n(766),tt=n(7409),nt=n(7809),st=n(5503),rt=n(625),at=n(9331),it=n(4434),ot=n(3254),ut=n(3694),lt=n(3261),ct=n(248),ht=n(1869),pt=n(1173),dt=n(2279),ft=n(3582),mt=n(2634),gt=n(9451),yt=n(9133),bt=n(8151),xt=n(6230);function vt(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){S.D5U.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let s=0;s<e.length;s++){const r=e[s],a=t[s];S.D5U.assert(r<0||a<0||r===a,(()=>n+` Shapes ${e} and ${t} must match`))}}}function wt(e){return"number"!=typeof e&&!e.some((e=>e<0))}function kt(e,t,n){let s=It(e,n);const r=!wt(s);if(r&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&t.forEach((e=>{s=It(e.shape,s)})),!wt(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function It(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let s=0;s<e.length;++s){const r=e[s],a=t[s];if(r>=0&&a>=0&&r!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[s]=r>=0?r:a}return n}class St{constructor(e,t,n,s,r,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=s,this.identicalElementShapes=r,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=(0,S.iD$)(0),(0,S.CnY)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),vt(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,(0,S.CnY)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,S.XeE)([],[0].concat(this.elementShape));const n=this.readMany(e);return vt(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,S.knu)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return(0,S.XeE)([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return vt(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),(0,S.zoF)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,(0,S.HHK)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const s=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const r=0===n?0:t.size/n,a=[];(0,S.lub)((()=>{t=(0,S.XLQ)(t,[1,n,r]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:s[n-1],0],o=[1,e[n],r];a[n]=(0,S.XLQ)((0,S.tPi)(t,i,o),this.elementShape)}return a}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,a)}}class Nt{constructor(e,t,n,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);vt(t,e.shape,"TensorList shape mismatch: "),(0,S.CnY)(e)})),this.idTensor=(0,S.iD$)(0),this.maxNumElements=s,(0,S.CnY)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Nt([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);vt(e,this.elementShape,"TensorList shape mismatch: ");const s=kt(this.elementShape,this.tensors,e);return(0,S.lub)((()=>{const e=this.tensors.map((e=>(0,S.XLQ)(e,s)));return(0,S.knu)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=kt(this.elementShape,this.tensors,e),s=this.tensors.pop();return vt(s.shape,e,"TensorList shape mismatch: "),(0,S.XLQ)(s,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(vt(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,S.CnY)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);vt(this.tensors[e].shape,t,"TensorList shape mismatch: ");const s=kt(this.elementShape,this.tensors,t);return(0,S.XLQ)(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);vt(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,S.CnY)(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);vt(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const s=kt(this.elementShape,this.tensors,n);return 0===e.length?(0,S.XeE)([],[0].concat(s)):(0,S.lub)((()=>{const t=e.map((e=>(0,S.XLQ)(this.tensors[e],s)));return(0,S.knu)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);vt(this.elementShape,t,"TensorList shape mismatch: ");const n=kt(this.elementShape,this.tensors,t);return 0===this.size()?(0,S.XeE)([],[0].concat(n)):(0,S.lub)((()=>{const e=this.tensors.map((e=>(0,S.XLQ)(e,n)));return(0,S.zoF)(e,0)}))}}var Tt=n(1355),Ct=n(4794),$t=n(4624),Et=n(1405),At=n(4718),Dt=n(473),Rt=n(5176),_t=n(1174);const Ft=(0,ve.op)({maxPoolWithArgmax_:function(e,t,n,s,r=!1){const a={x:(0,be._1)(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:s,includeBatchInIndex:r},o=ge.BV.runKernel(ye.vF,a,i);return{result:o[0],indexes:o[1]}}});var Ot=n(1749),Mt=n(5020),Lt=n(557);function zt(e,t,n){const[s,r]=C("fusedOps",e,t,n),a="biasadd"===s,i=!a,o="prelu"===r,u="fusedbatchnorm"===s,l=C("numArgs",e,t,n);if(a){if(o&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&a&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=C("strides",e,t,n),h=R(e,t,n),p=C("dataFormat",e,t,n).toUpperCase(),d=C("dilations",e,t,n);let[f,m]=C("args",e,t,n);return i&&(m=f,f=void 0),{stride:c,pad:h,dataFormat:p,dilations:d,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:C("leakyreluAlpha",e,t,n)}}var Bt=n(4006);function Pt(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:e,stop:t,num:n};return ge.BV.runKernel(ye.e7,{},s)}var Ut=n(4968);const Wt=(0,ve.op)({multinomial_:function(e,t,n,s=!1){const r=(0,be._1)(e,"logits","multinomial"),a=r.size,i=r.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?(0,Ut.X)(r,[1,-1]):r},u={numSamples:t,seed:n,normalized:s},l=ge.BV.runKernel(ye.NZ,o,u);return 1===i?(0,Ut.X)(l,[l.size]):l}});var Vt=n(6708),Ht=n(4917),Gt=n(7846),jt=n(5002),Xt=n(7245),qt=n(3596),Kt=n(9640),Yt=n(6577),Qt=n(8869),Jt=n(2271),Zt=n(8333);const en=async function(e){const t=(0,be._1)(e,"condition","whereAsync","bool"),n=await t.data(),s=(0,Zt.Z)(t.shape,n);return e!==t&&t.dispose(),s};var tn=n(4077);function nn(e,t,n){return{boxes:C("boxes",e,t,n),scores:C("scores",e,t,n),maxOutputSize:C("maxOutputSize",e,t,n),iouThreshold:C("iouThreshold",e,t,n),scoreThreshold:C("scoreThreshold",e,t,n),softNmsSigma:C("softNmsSigma",e,t,n)}}var sn=n(3243),rn=n(9608),an=n(6092),on=n(9494);class un{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,S.iD$)(0),this.tensorMap=new Map,(0,S.CnY)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return on.i(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),(0,S.lub)((()=>{const e=(0,S.HHK)(t),s=n.length,r=e.length;S.D5U.assert(s===r,(()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${r} elements.`));for(let t=0;t<s;t++){const s=n[t],r=e[t];(0,S.CnY)(r),this.tensorMap.set(s,r)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,S.lub)((()=>{const e=[];for(let s=0;s<n.length;s++){const r=n[s],a=this.findWithDefault(r,t);e.push(a)}return(0,S.knu)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}var ln=n(6477),cn=n(6500),hn=n(636),pn=n(7630),dn=n(6573),fn=n(624),mn=n(2856),gn=n(8651),yn=n(5750),bn=n(5912),xn=n(8687);const vn=(0,ve.op)({einsum_:function(e,...t){const n=t.map(((e,t)=>(0,be._1)(e,`tensors${t}`,"einsum"))),s={equation:e};return ge.BV.runKernel(ye.$g,n,s)}});var wn=n(9065),kn=n(7505),In=n(9648),Sn=n(682),Nn=n(1510);const Tn=(0,ve.op)({sparseToDense_:function(e,t,n,s=0){const r=(0,be._1)(e,"sparseIndices","sparseToDense","int32"),a=(0,be._1)(t,"sparseValues","sparseToDense"),i=(0,be._1)(s,"defaultValue","sparseToDense",a.dtype);!function(e,t,n,s){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const r=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,a,n,i);const o={sparseIndices:r,sparseValues:a,defaultValue:i},u={outputShape:n};return ge.BV.runKernel(ye.D2,o,u)}});var Cn=n(3307),$n=n(5130),En=n(5735),An=n(5475),Dn=n(781),Rn=n(2998),_n=n(47),Fn=n(7394),On=n(7405),Mn=n(3865);const Ln=(0,ve.op)({denseBincount_:function(e,t,n,s=!1){const r=(0,be._1)(e,"x","denseBincount"),a=(0,be._1)(t,"weights","denseBincount");xe.hu("int32"===r.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`)),xe.hu(r.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`)),xe.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),xe.hu(a.size===r.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`));const i={x:r,weights:a},o={size:n,binaryOutput:s};return ge.BV.runKernel(ye.QR,i,o)}});var zn=n(6884),Bn=n(4926),Pn=n(7486),Un=n(2676),Wn=n(5158),Vn=n(9590),Hn=n(2991),Gn=n(4136),jn=n(7501),Xn=n(8644),qn=n(3028);const Kn=(0,ve.op)({scatterND_:function(e,t,n){const s=(0,be._1)(e,"indices","scatterND","int32"),r=(0,be._1)(t,"updates","scatterND");qn.b0(r,s,n);const a={indices:s,updates:r},i={shape:n};return ge.BV.runKernel(ye.xQ,a,i)}}),Yn=(0,ve.op)({gatherND_:function(e,t){const n=(0,be._1)(t,"indices","gatherND","int32"),s={params:(0,be._1)(e,"x","gatherND","string_or_numeric"),indices:n};return ge.BV.runKernel(ye.q1,s)}});var Qn=n(7020),Jn=n(8447),Zn=n(3710),es=n(4415),ts=n(1300),ns=n(1483),ss=n(9682),rs=n(7918),as=n(8441),is=n(9112),os=n(8247);const us=(0,ve.op)({broadcastArgs_:function(e,t){const n=(0,be._1)(e,"s0","broadcastArgs","int32"),s=(0,be._1)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==s.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const r={s0:n,s1:s};return ge.BV.runKernel(ye.eE,r)}});function ls(e,t,n,s){const r=((e,t,n)=>{switch(e.category){case"arithmetic":return S.lub((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[me.I(C("a",e,t,n),C("b",e,t,n))];case"AddN":return[we(C("tensors",e,t,n))];case"FloorMod":case"Mod":return[ke.w(C("a",e,t,n),C("b",e,t,n))];case"Mul":return[Ie.d(C("a",e,t,n),C("b",e,t,n))];case"RealDiv":case"Div":return[Se.h(C("a",e,t,n),C("b",e,t,n))];case"DivNoNan":return[Ne.N(C("a",e,t,n),C("b",e,t,n))];case"FloorDiv":return[Te.q(C("a",e,t,n),C("b",e,t,n))];case"Sub":return[Ce.l(C("a",e,t,n),C("b",e,t,n))];case"Minimum":return[$e.L(C("a",e,t,n),C("b",e,t,n))];case"Maximum":return[Ee.g(C("a",e,t,n),C("b",e,t,n))];case"Pow":return[Ae.s(C("a",e,t,n),C("b",e,t,n))];case"SquaredDifference":return[De.$(C("a",e,t,n),C("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return S.lub((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Re.W(C("x",e,t,n))];case"Acos":return[_e.K(C("x",e,t,n))];case"Acosh":return[Fe._(C("x",e,t,n))];case"Asin":return[Oe.Z(C("x",e,t,n))];case"Asinh":return[Me.V(C("x",e,t,n))];case"Atan":return[Le.z(C("x",e,t,n))];case"Atan2":return[ze.f(C("x",e,t,n),C("y",e,t,n))];case"Atanh":return[Be.C(C("x",e,t,n))];case"Ceil":return[Pe.m(C("x",e,t,n))];case"Complex":return[Ue.P(C("real",e,t,n),C("imag",e,t,n))];case"Cos":return[We.m(C("x",e,t,n))];case"Cosh":return[Ve.f(C("x",e,t,n))];case"Elu":return[He.p(C("x",e,t,n))];case"Erf":return[Ge.q(C("x",e,t,n))];case"Exp":return[je.Q(C("x",e,t,n))];case"Expm1":return[Xe.t(C("x",e,t,n))];case"Floor":return[qe.G(C("x",e,t,n))];case"Log":return[Ke.c(C("x",e,t,n))];case"Log1p":return[Ye.K(C("x",e,t,n))];case"Imag":return[Qe.a(C("x",e,t,n))];case"Neg":return[Je.W(C("x",e,t,n))];case"Reciprocal":return[Ze.M(C("x",e,t,n))];case"Real":return[et.k(C("x",e,t,n))];case"Relu":return[tt.U(C("x",e,t,n))];case"Round":return[nt.N(C("x",e,t,n))];case"Selu":return[st.U(C("x",e,t,n))];case"Sigmoid":return[rt.X(C("x",e,t,n))];case"Sin":return[at.O(C("x",e,t,n))];case"Sign":return[it.X(C("x",e,t,n))];case"Sinh":return[ot.R(C("x",e,t,n))];case"Softplus":return[ut.W(C("x",e,t,n))];case"Sqrt":return[lt._(C("x",e,t,n))];case"Square":return[ct.h(C("x",e,t,n))];case"Tanh":return[ht.A(C("x",e,t,n))];case"Tan":return[pt.O(C("x",e,t,n))];case"ClipByValue":return[dt.i(C("x",e,t,n),C("clipValueMin",e,t,n),C("clipValueMax",e,t,n))];case"Relu6":return[ft.b(C("x",e,t,n))];case"Rsqrt":return[mt.b($(e.inputNames[0],t,n))];case"Prod":return[gt.W(C("x",e,t,n),C("axes",e,t,n))];case"LeakyRelu":return[yt.h(C("x",e,t,n),C("alpha",e,t,n))];case"Prelu":return[bt.A(C("x",e,t,n),C("alpha",e,t,n))];case"IsNan":return[xt.i($(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const s=C("thenBranch",e,t,n),r=C("elseBranch",e,t,n),a=C("cond",e,t,n),i=C("args",e,t,n);return(await a.data())[0]?n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const s=C("body",e,t,n),r=C("cond",e,t,n),a=C("args",e,t,n),i=await n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map((e=>e.id));let u=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let l=a;for(;u[0];){const e=l;l=await n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await a[0].data(),a.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[_(C("pred",e,t,n))];case"Switch":{const s=C("pred",e,t,n);let r=C("data",e,t,n);return r.kept||(r=_(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=e.inputNames.find((e=>void 0!==$(e,t,n)));return s?[_($(s,t,n))]:void 0}case"Enter":{const s=C("frameName",e,t,n),r=C("tensor",e,t,n);return n.enterFrame(s),[_(r)]}case"Exit":{const s=C("tensor",e,t,n);return n.exitFrame(),[_(s)]}case"NextIteration":{const s=C("tensor",e,t,n);return n.nextIteration(),[_(s)]}case"TensorArrayV3":{const s=C("size",e,t,n),r=C("dtype",e,t,n),a=C("elementShape",e,t,n),i=C("dynamicSize",e,t,n),o=C("clearAfterRead",e,t,n),u=C("identicalElementShapes",e,t,n),l=C("name",e,t,n),c=new St(l,r,s,a,u,i,o);return n.addTensorArray(c),[c.idTensor,(0,S.iD$)(1)]}case"TensorArrayWriteV3":{const s=C("tensorArrayId",e,t,n),r=C("index",e,t,n),a=C("tensor",e,t,n),i=n.getTensorArray(s.id);return i.write(r,a),[i.idTensor]}case"TensorArrayReadV3":{const s=C("tensorArrayId",e,t,n),r=C("index",e,t,n);return[n.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=C("tensorArrayId",e,t,n),r=C("indices",e,t,n),a=C("dtype",e,t,n);return[n.getTensorArray(s.id).gather(r,a)]}case"TensorArrayScatterV3":{const s=C("tensorArrayId",e,t,n),r=C("indices",e,t,n),a=C("tensor",e,t,n),i=n.getTensorArray(s.id);return i.scatter(r,a),[i.idTensor]}case"TensorArrayConcatV3":{const s=C("tensorArrayId",e,t,n),r=n.getTensorArray(s.id),a=C("dtype",e,t,n);return[r.concat(a)]}case"TensorArraySplitV3":{const s=C("tensorArrayId",e,t,n),r=C("tensor",e,t,n),a=C("lengths",e,t,n),i=n.getTensorArray(s.id);return i.split(a,r),[i.idTensor]}case"TensorArraySizeV3":{const s=C("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return[(0,S.iD$)(r.size(),"int32")]}case"TensorArrayCloseV3":{const s=C("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=C("tensorListId",e,t,n),r=C("index",e,t,n),a=C("tensor",e,t,n),i=n.getTensorList(s.id);return i.setItem(r,a),[i.idTensor]}case"TensorListGetItem":{const s=C("tensorListId",e,t,n),r=C("index",e,t,n),a=C("elementShape",e,t,n),i=C("elementDType",e,t,n);return[n.getTensorList(s.id).getItem(r,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const s=C("indices",e,t,n),r=function(e,t,n,s){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const r=Math.max(...t);if(null!=s&&-1!==s&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const a=new Nt([],n,e.dtype,s),i=(0,S.HHK)(e,0);return t.forEach(((e,t)=>{a.setItem(e,i[t])})),a}(C("tensor",e,t,n),s,C("elementShape",e,t,n),C("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=C("elementShape",e,t,n),r=C("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=function(e,t,n){return new Nt([],e,t,n)}(s,r,C(a,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const s=C("tensorListId",e,t,n),r=C("indices",e,t,n),a=C("elementShape",e,t,n),i=C("elementDType",e,t,n);return[n.getTensorList(s.id).gather(r,i,a)]}case"TensorListStack":{const s=C("tensorListId",e,t,n),r=C("elementShape",e,t,n),a=C("elementDType",e,t,n),i=C("numElements",e,t,n);return[n.getTensorList(s.id).stack(r,a,i)]}case"TensorListFromTensor":{const s=function(e,t,n){const s=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);vt(e.shape.slice(1),t,"TensorList shape mismatch: ");const r=(0,S.HHK)(e);return new Nt(r,t,s)}(C("tensor",e,t,n),C("elementShape",e,t,n),C("elementDType",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListConcat":{const s=C("tensorListId",e,t,n),r=n.getTensorList(s.id),a=C("dtype",e,t,n),i=C("elementShape",e,t,n);return[r.concat(a,i)]}case"TensorListPushBack":{const s=C("tensorListId",e,t,n),r=C("tensor",e,t,n),a=n.getTensorList(s.id);return a.pushBack(r),[a.idTensor]}case"TensorListPopBack":{const s=C("tensorListId",e,t,n),r=C("elementShape",e,t,n),a=C("elementDType",e,t,n);return[n.getTensorList(s.id).popBack(r,a)]}case"TensorListSplit":{const s=C("tensor",e,t,n),r=C("elementShape",e,t,n),a=function(e,t,n){let s=0;const r=t.map((e=>(s+=e,s)));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${s}, and tensor's shape is: ${e.shape}`);const a=It(e.shape.slice(1),n),i=0===s?0:e.size/s,o=(0,S.lub)((()=>{const n=[];e=(0,S.XLQ)(e,[1,s,i]);for(let s=0;s<t.length;++s){const o=[0,0===s?0:r[s-1],0],u=[1,t[s],i];n[s]=(0,S.XLQ)((0,S.tPi)(e,o,u),a)}return e.dispose(),n})),u=new Nt([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)u.setItem(e,o[e]);return u}(s,C("lengths",e,t,n),r);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return S.lub((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const s=C("stride",e,t,n),r=C("pad",e,t,n),a=C("dataFormat",e,t,n).toUpperCase(),i=C("dilation",e,t,n);return[Tt.P(C("x",e,t,n),C("filter",e,t,n),s,r,a,i)]}case"Conv2D":{const s=C("strides",e,t,n),r=R(e,t,n),a=C("dataFormat",e,t,n).toUpperCase(),i=C("dilations",e,t,n);return[Ct.T(C("x",e,t,n),C("filter",e,t,n),[s[1],s[2]],r,a,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:s,pad:r,dataFormat:a,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=zt(e,t,n);return[$t.conv2d({x:C("x",e,t,n),filter:C("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:r,dataFormat:a,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=zt(e,t,n);return[$t.depthwiseConv2d({x:C("x",e,t,n),filter:C("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=C("outputShape",e,t,n),r=C("strides",e,t,n),a=R(e,t,n);return[Et.b(C("x",e,t,n),C("filter",e,t,n),s,[r[1],r[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=C("strides",e,t,n),r=R(e,t,n),a=C("dilations",e,t,n),i=C("dataFormat",e,t,n).toUpperCase();return[At.B(C("input",e,t,n),C("filter",e,t,n),[s[1],s[2]],r,i,[a[1],a[2]])]}case"Conv3D":{const s=C("strides",e,t,n),r=C("pad",e,t,n),a=C("dataFormat",e,t,n).toUpperCase(),i=C("dilations",e,t,n);return[Dt.p(C("x",e,t,n),C("filter",e,t,n),[s[1],s[2],s[3]],r,a,[i[1],i[2],i[3]])]}case"AvgPool":{const s=C("strides",e,t,n),r=C("pad",e,t,n),a=C("kernelSize",e,t,n);return[Rt.w(C("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPool":{const s=C("strides",e,t,n),r=C("pad",e,t,n),a=C("kernelSize",e,t,n);return[_t._(C("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPoolWithArgmax":{const s=C("strides",e,t,n),r=C("pad",e,t,n),a=C("kernelSize",e,t,n),i=C("includeBatchInIndex",e,t,n),{result:o,indexes:u}=Ft(C("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r,i);return[o,u]}case"AvgPool3D":{const s=C("strides",e,t,n),r=C("pad",e,t,n),a=C("kernelSize",e,t,n);return[Ot.u(C("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"MaxPool3D":{const s=C("strides",e,t,n),r=C("pad",e,t,n),a=C("kernelSize",e,t,n);return[Mt.Y(C("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"Dilation2D":{const s=C("strides",e,t,n),r=C("pad",e,t,n),a=C("dilations",e,t,n),i=s[1],o=s[2],u=a[1],l=a[2];return[Lt.W(C("x",e,t,n),C("filter",e,t,n),[i,o],r,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return S.lub((()=>((e,t,n)=>{switch(e.op){case"Fill":{const s=C("shape",e,t,n),r=C("dtype",e,t,n),a=C("value",e,t,n);return[Bt.h(s,a,r)]}case"LinSpace":return[Pt(C("start",e,t,n),C("stop",e,t,n),C("num",e,t,n))];case"Multinomial":{const s=C("logits",e,t,n),r=C("numSamples",e,t,n),a=C("seed",e,t,n);return[Wt(s,r,a)]}case"OneHot":{const s=C("indices",e,t,n),r=C("depth",e,t,n),a=C("onValue",e,t,n),i=C("offValue",e,t,n);return[Vt.l(s,r,a,i)]}case"Ones":return[Ht.i(C("shape",e,t,n),C("dtype",e,t,n))];case"OnesLike":return[Gt.J(C("x",e,t,n))];case"RandomUniform":return[jt.L(C("shape",e,t,n),C("minval",e,t,n),C("maxval",e,t,n),C("dtype",e,t,n))];case"Range":{const s=C("start",e,t,n),r=C("stop",e,t,n),a=C("step",e,t,n);return[Xt.w(s,r,a,C("dtype",e,t,n))]}case"TruncatedNormal":{const s=C("shape",e,t,n),r=C("mean",e,t,n),a=C("stdDev",e,t,n),i=C("seed",e,t,n);return[qt.X(s,r,a,C("dtype",e,t,n),i)]}case"Zeros":return[Kt.l(C("shape",e,t,n),C("dtype",e,t,n))];case"ZerosLike":return[Yt.P(C("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=nn(e,t,n),l=await Qt.BHj.nonMaxSuppressionWithScoreAsync(s,r,a,i,o,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=nn(e,t,n),u=C("padToMaxOutputSize",e,t,n),l=await Qt.BHj.nonMaxSuppressionPaddedAsync(s,r,a,i,o,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=nn(e,t,n);return[await Qt.BHj.nonMaxSuppressionAsync(s,r,a,i,o)]}case"Where":{const s=Jt.p(C("condition",e,t,n),"bool"),r=[await en(s)];return s.dispose(),r}case"ListDiff":return async function(e,t){const n=(0,be._1)(e,"x","setdiff1d"),s=(0,be._1)(t,"y","setdiff1d");xe.hu(n.dtype===s.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`)),xe.hu(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),xe.hu(1===s.rank,(()=>`y should be 1D tensor, but got y (${s.shape}).`));const r=await n.data(),a=await s.data(),i=new Set(a);let o=0;for(let e=0;e<r.length;e++)i.has(r[e])||o++;const u=new tn.YD([o],n.dtype),l=new tn.YD([o],"int32");for(let e=0,t=0;e<r.length;e++)i.has(r[e])||(u.values[t]=r[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]}(C("x",e,t,n),C("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return S.lub((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const s=C("x",e,t,n),r=C("k",e,t,n),a=C("sorted",e,t,n),i=sn.h(s,r,a);return[i.values,i.indices]}case"Unique":{const s=C("x",e,t,n),r=rn.T(s);return[r.values,r.indices]}case"UniqueV2":{const s=C("x",e,t,n),r=C("axis",e,t,n),a=rn.T(s,r);return[a.values,a.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return S.lub((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const s=C("images",e,t,n),r=C("size",e,t,n),a=C("alignCorners",e,t,n),i=C("halfPixelCenters",e,t,n);return[Qt.BHj.resizeBilinear(s,[r[0],r[1]],a,i)]}case"ResizeNearestNeighbor":{const s=C("images",e,t,n),r=C("size",e,t,n),a=C("alignCorners",e,t,n),i=C("halfPixelCenters",e,t,n);return[Qt.BHj.resizeNearestNeighbor(s,[r[0],r[1]],a,i)]}case"CropAndResize":{const s=C("image",e,t,n),r=C("boxes",e,t,n),a=C("boxInd",e,t,n),i=C("cropSize",e,t,n),o=C("method",e,t,n),u=C("extrapolationValue",e,t,n);return[Qt.BHj.cropAndResize(s,r,a,i,o,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return S.lub((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const s=C("default",e,t,n);return[$(e.name,t,n)||s];case"Placeholder":return[$(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[_(C("x",e,t,n))];case"IdentityN":return C("x",e,t,n).map((e=>_(e)));case"Shape":return[an.R(C("x",e,t,n).shape,"int32")];case"ShapeN":return C("x",e,t,n).map((e=>an.R(e.shape)));case"Size":return[on.i(C("x",e,t,n).size,"int32")];case"Rank":return[on.i(C("x",e,t,n).rank,"int32")];case"NoOp":return[on.i(1)];case"Print":const r=C("x",e,t,n),a=C("data",e,t,n),i=C("message",e,t,n),o=C("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<a.length;e++)console.log(Array.prototype.slice.call(a[e].dataSync()).slice(0,o));return[r];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return S.lub((()=>((e,t,n)=>{switch(e.op){case"Equal":return[ln.D(C("a",e,t,n),C("b",e,t,n))];case"NotEqual":return[cn.Q(C("a",e,t,n),C("b",e,t,n))];case"Greater":return[hn.p(C("a",e,t,n),C("b",e,t,n))];case"GreaterEqual":return[pn.b(C("a",e,t,n),C("b",e,t,n))];case"Less":return[dn.d(C("a",e,t,n),C("b",e,t,n))];case"LessEqual":return[fn.z(C("a",e,t,n),C("b",e,t,n))];case"LogicalAnd":return[mn.H(C("a",e,t,n),C("b",e,t,n))];case"LogicalNot":return[gn.h(C("a",e,t,n))];case"LogicalOr":return[yn.K(C("a",e,t,n),C("b",e,t,n))];case"Select":case"SelectV2":return[bn.a(C("condition",e,t,n),C("a",e,t,n),C("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return S.lub((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[xn.O(C("a",e,t,n),C("b",e,t,n),C("transposeA",e,t,n),C("transposeB",e,t,n))];case"Einsum":return[vn(C("equation",e,t,n),...C("tensors",e,t,n))];case"Transpose":return[wn.p(C("x",e,t,n),C("perm",e,t,n))];case"_FusedMatMul":const[s,r]=C("fusedOps",e,t,n),a="biasadd"===s,i="prelu"===r,o=C("numArgs",e,t,n),u=C("leakyreluAlpha",e,t,n);if(a){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,c]=C("args",e,t,n);return[$t.matMul({a:C("a",e,t,n),b:C("b",e,t,n),transposeA:C("transposeA",e,t,n),transposeB:C("transposeB",e,t,n),bias:l,activation:r,preluActivationWeights:c,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return S.lub((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[kn.t(C("x",e,t,n),C("mean",e,t,n),C("variance",e,t,n),C("offset",e,t,n),C("scale",e,t,n),C("epsilon",e,t,n))];case"LRN":return[In.G(C("x",e,t,n),C("radius",e,t,n),C("bias",e,t,n),C("alpha",e,t,n),C("beta",e,t,n))];case"Softmax":return[Sn.X(C("x",e,t,n))];case"LogSoftmax":return[Nn.C(C("x",e,t,n))];case"SparseToDense":return[Tn(C("sparseIndices",e,t,n),C("outputShape",e,t,n),C("sparseValues",e,t,n),C("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return S.lub((()=>((e,t,n)=>{switch(e.op){case"Max":{const s=C("axis",e,t,n),r=C("keepDims",e,t,n);return[Cn.F(C("x",e,t,n),s,r)]}case"Mean":{const s=C("axis",e,t,n),r=C("keepDims",e,t,n);return[$n.J(C("x",e,t,n),s,r)]}case"Min":{const s=C("axis",e,t,n),r=C("keepDims",e,t,n);return[En.V(C("x",e,t,n),s,r)]}case"Sum":{const s=C("axis",e,t,n),r=C("keepDims",e,t,n);return[An.S(C("x",e,t,n),s,r)]}case"All":{const s=C("axis",e,t,n),r=C("keepDims",e,t,n);return[Dn.$(C("x",e,t,n),s,r)]}case"Any":{const s=C("axis",e,t,n),r=C("keepDims",e,t,n);return[Rn.Y(C("x",e,t,n),s,r)]}case"ArgMax":{const s=C("axis",e,t,n);return[_n.N(C("x",e,t,n),s)]}case"ArgMin":{const s=C("axis",e,t,n);return[Fn.v(C("x",e,t,n),s)]}case"Prod":{const s=C("axis",e,t,n),r=C("keepDims",e,t,n);return[gt.W(C("x",e,t,n),s,r)]}case"Cumsum":{const s=C("axis",e,t,n),r=C("exclusive",e,t,n),a=C("reverse",e,t,n);return[On.z(C("x",e,t,n),s,r,a)]}case"Bincount":const s=C("x",e,t,n),r=C("weights",e,t,n),a=C("size",e,t,n);return[Mn.y(s,r,a)];case"DenseBincount":{const s=C("x",e,t,n),r=C("weights",e,t,n),a=C("size",e,t,n),i=C("binaryOutput",e,t,n);return[Ln(s,r,a,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return S.lub((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const s=C("n",e,t,n),r=C("axis",e,t,n);let a=C("tensors",e,t,n);return a=a.slice(0,s),[zn.z(a,r)]}case"Gather":{const s=C("x",e,t,n),r=C("indices",e,t,n);return[Bn.I(s,Jt.p(r,"int32"),0)]}case"GatherV2":{const s=C("axis",e,t,n),r=C("batchDims",e,t,n),a=C("x",e,t,n),i=C("indices",e,t,n);return[Bn.I(a,Jt.p(i,"int32"),s,r)]}case"Reverse":{const s=C("dims",e,t,n),r=[];for(let e=0;e<s.length;e++)s[e]&&r.push(e);const a=C("x",e,t,n);return[Pn.G(a,r)]}case"ReverseV2":{const s=C("axis",e,t,n),r=C("x",e,t,n);return[Pn.G(r,s)]}case"Slice":{const s=C("begin",e,t,n),r=C("size",e,t,n);return[Un.t(C("x",e,t,n),s,r)]}case"StridedSlice":{const s=C("begin",e,t,n),r=C("end",e,t,n),a=C("strides",e,t,n),i=C("beginMask",e,t,n),o=C("endMask",e,t,n),u=C("ellipsisMask",e,t,n),l=C("newAxisMask",e,t,n),c=C("shrinkAxisMask",e,t,n),h=C("x",e,t,n);return[Wn.N(h,s,r,a,i,o,u,l,c)]}case"Pack":return(0,S.lub)((()=>{const s=C("axis",e,t,n),r=C("tensors",e,t,n),a=r[0].shape,i=Vn.L(r[0]).shape,o=r.map((e=>{const t=S.D5U.arraysEqual(e.shape,a);if(!t&&!S.D5U.arraysEqual(Vn.L(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:Ut.X(e,a)}));return[Hn.k(o,s)]}));case"Unpack":{const s=C("axis",e,t,n),r=C("tensor",e,t,n);return Gn.H(r,s)}case"Tile":{const s=C("reps",e,t,n);return[jn.G(C("x",e,t,n),s)]}case"Split":case"SplitV":{const s=C("axis",e,t,n),r=C("numOrSizeSplits",e,t,n),a=C("x",e,t,n);return Xn.V(a,r,s)}case"ScatterNd":{const s=C("indices",e,t,n),r=C("values",e,t,n),a=C("shape",e,t,n);return[Kn(s,r,a)]}case"GatherNd":{const s=C("x",e,t,n),r=C("indices",e,t,n);return[Yn(s,r)]}case"SparseToDense":{const s=C("sparseIndices",e,t,n),r=C("outputShape",e,t,n),a=C("sparseValues",e,t,n),i=C("defaultValue",e,t,n);return[Tn(s,a,r,a.dtype===i.dtype?i:Jt.p(i,a.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return S.lub((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:r,emptyRowIndicator:a,reverseIndexMap:i}=Qt.rVs.sparseFillEmptyRows(C("indices",e,t,n),C("values",e,t,n),C("denseShape",e,t,n),C("defaultValue",e,t,n));return[s,r,a,i]}case"SparseReshape":{const{outputIndices:s,outputShape:r}=Qt.rVs.sparseReshape(C("inputIndices",e,t,n),C("inputShape",e,t,n),C("newShape",e,t,n));return[s,r]}case"SparseSegmentMean":return[Qt.rVs.sparseSegmentMean(C("data",e,t,n),C("indices",e,t,n),C("segmentIds",e,t,n))];case"SparseSegmentSum":return[Qt.rVs.sparseSegmentSum(C("data",e,t,n),C("indices",e,t,n),C("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return S.lub((()=>((e,t,n)=>{switch(e.op){case"FFT":return[Qn.k(C("x",e,t,n))];case"IFFT":return[Jn.S(C("x",e,t,n))];case"RFFT":return[Zn.Q(C("x",e,t,n))];case"IRFFT":return[es.w(C("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return S.lub((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:s,nGramsSplits:r}=Qt.Z_8.stringNGrams(C("data",e,t,n),C("dataSplits",e,t,n),C("separator",e,t,n),C("nGramWidths",e,t,n),C("leftPad",e,t,n),C("rightPad",e,t,n),C("padWidth",e,t,n),C("preserveShortSequences",e,t,n));return[s,r]}case"StringSplit":{const{indices:s,values:r,shape:a}=Qt.Z_8.stringSplit(C("input",e,t,n),C("delimiter",e,t,n),C("skipEmpty",e,t,n));return[s,r,a]}case"StringToHashBucketFast":return[Qt.Z_8.stringToHashBucketFast(C("input",e,t,n),C("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return S.lub((()=>((e,t,n)=>{switch(e.op){case"Cast":return[Jt.p(C("x",e,t,n),C("dtype",e,t,n))];case"ExpandDims":{const s=C("axis",e,t,n);return[ts.d(C("x",e,t,n),s)]}case"Squeeze":{const s=C("axis",e,t,n);return[Vn.L(C("x",e,t,n),s)]}case"Reshape":return[Ut.X(C("x",e,t,n),C("shape",e,t,n))];case"MirrorPad":return[ns.V(C("x",e,t,n),C("padding",e,t,n),C("mode",e,t,n))];case"PadV2":case"Pad":return[ss.v(C("x",e,t,n),C("padding",e,t,n),C("constantValue",e,t,n))];case"SpaceToBatchND":{const s=C("blockShape",e,t,n),r=C("paddings",e,t,n);return[rs.f(C("x",e,t,n),s,r)]}case"BatchToSpaceND":{const s=C("blockShape",e,t,n),r=C("crops",e,t,n);return[as.E(C("x",e,t,n),s,r)]}case"DepthToSpace":{const s=C("blockSize",e,t,n),r=C("dataFormat",e,t,n).toUpperCase();return[is.n(C("x",e,t,n),s,r)]}case"BroadcastTo":return[os.U(C("x",e,t,n),C("shape",e,t,n))];case"BroadcastArgs":return[us(C("s0",e,t,n),C("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,s)=>{switch(e.op){case"HashTable":case"HashTableV2":{const r=C("keyDType",e,t,n),a=C("valueDType",e,t,n),i=new un(r,a);return s.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const r=C("tableHandle",e,t,n,s),a=C("keys",e,t,n),i=C("values",e,t,n),o=s.getHashTableById(r.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const r=C("tableHandle",e,t,n,s),a=C("keys",e,t,n),i=C("defaultValue",e,t,n),o=s.getHashTableById(r.id);return[await o.find(a,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=C("tableHandle",e,t,n,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,s);case"custom":const r=T(e.op);if(r&&r.customExecutor)return r.customExecutor(new fe(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return S.D5U.isPromise(r)?r.then((e=>[].concat(e))):[].concat(r)}class cs{constructor(e={},t={},n={},s={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function hs(e,t,n,s){const r=new Set,a=[];let i=null,o=null;const u=new Set,l=Object.keys(e).map((e=>D(e)[0]));let c=[];null!=s&&(c=s.map((e=>D(e.name)[0])));const h=[...t];for(;h.length>0;){const e=h.pop();(ms(e)||gs(e)||ys(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>r.has(e)))),r.add(e.name),null==n[e.name]&&-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),h.push(e))})):a.push(e.name))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:a,dynamicNode:i,syncInputs:o}}const ps=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],ds=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],fs=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function ms(e){return ps.indexOf(e.op)>=0}function gs(e){return ds.indexOf(e.op)>=0}function ys(e){return fs.indexOf(e.op)>=0}class bs{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new bs(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),s=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)}compile(e,t){const n=hs(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:r,syncInputs:a}=n;if(null!=r)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){const n=t.map((e=>e.name)),r=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${r}]. Missing the following inputs: [${s}]`)}return function(e,t,n){const{usedNodes:s,inputs:r}=n,a=[],i=Object.keys(r).map((e=>D(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{s.has(e.name)&&a.push(e)})),e.weights.forEach((e=>{s.has(e.name)&&a.push(e)})),null!=o&&o.forEach((e=>{s.has(e.name)&&a.push(e)}));const u=new Set,l=[];for(;a.length>0;){const e=a.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach((e=>{!u.has(e.name)&&s.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&a.push(e)}))}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const s=n.map((e=>this.graph.nodes[D(e)[0]])),r=t.map((e=>D(e)[0]));let a=r.map((e=>this.graph.nodes[e]));0===a.length&&(a=this._outputs);const i=this.getCompilationKey(s,a);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,a),this.compiledMap.set(i,o));const u={},l={};return(0,S.lub)((()=>{const n=new cs(this.weightMap,u,l,this.functionExecutorMap),s=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=D(t),a=[];a[r]=e[t],s[n]=a}));const a=this.getFrozenTensorIds(s),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!s[t.name]){const e=ls(t,s,n,this._resourceManager);if(S.D5U.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);s[t.name]=e,this.checkTensorForDisposal(t.name,t,s,n,a,r,i)}}return null==this.parent&&n.dispose(a),t.map((e=>$(e,s,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,s,r,a,i){"control"!==t.category&&-1===a.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const t=function(e,t,n){return t[A(e,n.currentContextId)]}(e.name,n,s);null!=t&&t.forEach((e=>{if(e&&!e.kept&&!r.has(e.id)){const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,s={},r={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const a=new cs(this.weightMap,s,r,this.functionExecutorMap),i=await this.executeWithControlFlow(e,a,t,n),o=t.map((e=>$(e,i,a))),u=o.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),c=new Set([...u,...l,...this.weightIds]);return Object.keys(i).forEach((e=>{i[e].forEach((e=>{!e||e.kept||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&a.dispose(c),o}async executeFunctionAsync(e,t,n){const s=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(s,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,s){const r=Object.keys(e),a=r.map((e=>this.graph.nodes[D(e)[0]])),i=n.map((e=>D(e)[0]));let o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:h}=hs(e,o,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,s]=D(t),r=[];r[s]=e[t],d[n]=r}));const f={},m=this.getFrozenTensorIds(d),g={};for(;p.length>0;){const e=this.processStack(a,p,t,d,g,m,i,f,u);await Promise.all(e)}null!=c||s||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!ms(e)&&!$(e.name,d,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${r}]. Consider providing the following inputs: [${l}]. ${e}`)}return d}processStack(e,t,n,s,r,a,i,o,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&C("isConstant",e.node,s,n)&&([c]=E(e.node.name,n)),null==s[e.node.name]){const h=ls(e.node,s,n,this._resourceManager);c||([c]=E(e.node.name,n));const p=n.currentContext;S.D5U.isPromise(h)?l.push(h.then((l=>(s[c]=l,n.currentContext=p,this.checkTensorForDisposal(c,e.node,s,n,a,i,o),this.processChildNodes(e.node,t,n,s,r,u),l)))):(s[c]=h,this.checkTensorForDisposal(c,e.node,s,n,a,i,o),this.processChildNodes(e.node,t,n,s,r,u))}else this.processChildNodes(e.node,t,n,s,r,u)}return l}processChildNodes(e,t,n,s,r,a){e.children.forEach((e=>{const[i]=E(e.name,n);!r[i]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!$(e,s,n)))&&(r[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!$(e,s,n)))&&(r[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[s]=D(t),r=this.graph.nodes[s];if(r.attrParams.shape&&r.attrParams.shape.value){const e=r.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));S.D5U.assert(t,(()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}r.attrParams.dtype&&r.attrParams.dtype.value&&S.D5U.assert(n.dtype===r.attrParams.dtype.value,(()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=D(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=D(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class xs{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class vs{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new xs}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=S.io.browserHTTPRequest(e,this.loadOptions);else{const t=S.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(S.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const s=S.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new bs(Z.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=Z.Instance.transformGraph(e.modelInitializer);this.initializer=new bs(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=S.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof S.esB||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,s)=>(t[n]=e[s],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function ws(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new vs(e,t);return await n.load(),n}const ks="3.9.0"},8713:(e,t,n)=>{"use strict";n.d(t,{JL:()=>s,Zu:()=>r});class s{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class r{refCount(e){return a("refCount")}incRef(e){return a("incRef")}timerAvailable(){return!0}time(e){return a("time")}read(e){return a("read")}readSync(e){return a("readSync")}numDataIds(){return a("numDataIds")}disposeData(e,t){return a("disposeData")}write(e,t,n){return a("write")}move(e,t,n,s,r){return a("move")}memory(){return a("memory")}floatPrecision(){return a("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return a("dispose")}}function a(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},3337:(e,t,n)=>{"use strict";function s(e,t,n){const s=function(e,t,n){return function(e,t,n){let s=0,r=e.length,a=0,i=!1;for(;s<r;){a=s+(r-s>>>1);const o=n(t,e[a]);o>0?s=a+1:(r=a,i=!o)}return i?s:-s-1}(e,t,n||r)}(e,t,n),a=s<0?-(s+1):s;e.splice(a,0,t)}function r(e,t){return e>t?1:e<t?-1:0}function a(e,t,n,s,r){return u(e,t,n,s,r,0)}function i(e,t,n,s,r,a){return u(e,t,n,s,r,0,!1,a,!0)}function o(e,t,n,s,r,a){return u(e,t,n,s,r,a,!0)}function u(e,t,n,r,a,i,o=!1,u=!1,p=!1){const d=[];for(let e=0;e<t.length;e++)t[e]>a&&d.push({score:t[e],boxIndex:e,suppressBeginIndex:0});d.sort(h);const f=i>0?-.5/i:0,m=[],g=[];for(;m.length<n&&d.length>0;){const t=d.pop(),{score:n,boxIndex:i,suppressBeginIndex:o}=t;if(n<a)break;let u=!1;for(let n=m.length-1;n>=o;--n){const s=l(e,i,m[n]);if(s>=r){u=!0;break}if(t.score=t.score*c(r,f,s),t.score<=a)break}t.suppressBeginIndex=m.length,u||(t.score===n?(m.push(i),g.push(t.score)):t.score>a&&s(d,t,h))}const y=m.length,b=n-y;u&&b>0&&(m.push(...new Array(b).fill(0)),g.push(...new Array(b).fill(0)));const x={selectedIndices:m};return o&&(x.selectedScores=g),p&&(x.validOutputs=y),x}function l(e,t,n){const s=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),a=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),u=Math.max(s[1],s[3]),l=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),p=Math.max(r[1],r[3]),d=(o-a)*(u-i),f=(h-l)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(a,l),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(u,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function c(e,t,n){const s=Math.exp(t*n*n);return n<=e?s:0}function h(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{GP:()=>a,qP:()=>i,pA:()=>o})},8333:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});var s=n(2657);function r(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=(0,s.f)(e,"int32"),a=(0,s.f)([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}},7097:(e,t,n)=>{"use strict";n.d(t,{BV:()=>v,wv:()=>x});var s=n(8713),r=n(2885),a=n(5938),i=n(9121),o=n(6151),u=n(9122),l=n(569);class c{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new p)}profileKernel(e,t,n){let s;const a=()=>{s=n()};let i;const o=u.now();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(a);else{a();for(const e of s)e.dataSync();i=Promise.resolve({kernelMs:u.now()-o})}if((0,r.OB)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<s.length;t++){const n=s[t];n.data().then((t=>{h(t,n.dtype,e)}))}return{kernelName:e,outputs:s,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),s,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function h(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const s=e[t];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${n}'`),!0}return!1}class p{logKernelProfile(e,t,n,s,r,a){const i="number"==typeof s?l.oj(`${s}ms`,9):s.error,o=l.oj(e,25),u=t.rank,c=t.size,h=l.oj(t.shape.toString(),14);let p="";for(const e in r){const n=r[e];if(null!=n){const s=n.shape||t.shape,r=s.length;p+=`${e}: ${r}D ${r>0?s:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${h}\t%c${c}\t%c${p}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var d=n(4077),f=n(747),m=n(4706);function g(e){return null!=e.kernelName}class y{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class b{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new y}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(m.Z(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new c(this.backendInstance),!0}setupRegisteredKernels(){(0,o.tr)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,o.tr)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof s.Zu||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,s=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,m.Z(`Initialization of backend ${e} failed`),m.Z(n.stack||n.message)),!1)));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}}catch(t){return m.Z(`Initialization of backend ${e} failed`),m.Z(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,s=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}return this.scopedRun((()=>this.startScope(s)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return b.nextTensorId++}nextVariableId(){return b.nextVariableId++}clone(e){const t=v.runKernel(i.iJ,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return v.runKernel(i.RF,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==(0,o.pI)(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const s=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-t-r-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;let i,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const c=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){const{kernelName:t,inputs:r,attrs:a}=e;null==this.backendName&&this.backend;const c=(0,o.pI)(t,this.backendName);l.hu(null!=c,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();u=c.kernelFunc({inputs:r,attrs:a,backend:this.backend});const i=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const o=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:s}=e;return this.makeTensorFromDataId(t,n,s)}));if(s){const e=this.getTensorsForGradient(t,r,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,r=e=>{s&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();u=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,e,n),n}}const{inputs:h,attrs:p}=e,d=g(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(c,h,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=i()})),s&&this.addTapeNode(c,h,t,d,n,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map((e=>null!=h[e]?h[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const s=(0,o.uk)(e);if(null!=s){const e=s.inputsToSave||[],r=s.outputsToSave||[];let a;s.saveAllInputs?(l.hu(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>r[t]));return a.concat(i)}return[]}makeTensor(e,t,n,s){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;"string"===n&&l.HD(e[0])&&(r=e.map((e=>u.encodeString(e))));const a=s.write(r,t,n),i=new d.es(t,n,a,this.nextTensorId());if(this.trackTensor(i,s),"string"===n){const e=this.state.tensorInfo.get(a),t=(0,l.Ub)(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,s){n=n||"float32";const r=new d.es(t,n,e,this.nextTensorId());return this.trackTensor(r,s),r}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),null!=s&&s!==e.dtype&&(e=e.cast(s));const r=new d._w(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*l.bT(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof d._w||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*l.bT(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,s,r,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},u=(0,o.uk)(e);null!=u&&(s=u.gradFunc),null!=s&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],s=l.wT(e.size,e.dtype);return this.makeTensor(s,e.shape,e.dtype)}return e})),s(e.length>1?e:e[0],r,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,f.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==s.id||this.track(e)}))}gradients(e,t,n,s=!1){if(l.hu(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));l.hu(r instanceof d.es,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const s={},r={};for(let e=0;e<t.length;e++)s[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(s[n.id]){a.outputs.forEach((e=>s[e.id]=!0)),o=!0,r[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],s=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in s)a[s[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(r[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const r=n.inputs[t];s[r.id]&&(e[t]=r)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,r);if(!s&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=(0,l.p8)((0,l.NA)(e),"float32");return v.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,s){for(let r=t.length-1;r>=0;r--){const a=t[r],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[t]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);const i=a.inputs[t];if(!l.cO(r.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=r;else{const t=e[i.id];e[i.id]=s(t,r),t.dispose()}}}}(e,a,(e=>this.tidy(e)),w);const s=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:s}}))}customGrad(e){return l.hu(l.mf(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;l.hu(t.every((e=>e instanceof d.es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};return t.forEach(((e,t)=>{s[t]=e})),this.runKernelFunc({forwardFunc:(s,r)=>(n=e(...t,r),l.hu(n.value instanceof d.es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),l.hu(l.mf(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,s)=>{const r=n.gradFunc(e,s),a=Array.isArray(r)?r:[r];l.hu(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),l.hu(a.every((e=>e instanceof d.es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=(0,u.now)(),n=await this.backend.time(e);return n.wallMs=(0,u.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new y;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function x(){const e=(0,a.D)();if(null==e._tfengine){const t=new r.qA(e);e._tfengine=new b(t)}return(0,r.iG)(e._tfengine.ENV),(0,d.Vi)((()=>e._tfengine)),e._tfengine}b.nextTensorId=0,b.nextVariableId=0;const v=x();function w(e,t){const n={a:e,b:t};return v.runKernel(i.mm,n)}},2885:(e,t,n)=>{"use strict";n.d(t,{qA:()=>a,OB:()=>o,iG:()=>l});var s=n(569),r=n(4706);class a{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=i,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&r.Z(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];r.Z(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,s.tI)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function i(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function o(){return u}let u=null;function l(e){u=e}},5938:(e,t,n)=>{"use strict";let s;function r(){if(null==s){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}s=e}return s}function a(e,t){const n=function(){const e=r();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const s=t();return n.set(e,s),n.get(e)}}n.d(t,{D:()=>r,R:()=>a})},4368:(e,t,n)=>{"use strict";n.d(t,{SR:()=>o,sq:()=>u,lu:()=>l,B9:()=>c,Cn:()=>h,N_:()=>p,jq:()=>d,y3:()=>f});var s=n(7097),r=n(2885),a=n(4077),i=n(747);function o(){return s.BV}function u(){return s.BV.memory()}function l(e,t){return s.BV.tidy(e,t)}function c(e){(0,i.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function h(e){return s.BV.keep(e)}function p(){return s.BV.backendName}function d(e,t,n=1){return s.BV.registerBackend(e,t,n)}function f(){return s.BV.backend}(0,a.FZ)((function(e){(0,r.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}))},633:(e,t,n)=>{"use strict";n.d(t,{cb:()=>o,pn:()=>i});var s=n(7097),r=n(4077),a=n(569);function i(e,t){a.hu(a.mf(e),(()=>"The f passed in variableGrads(f) must be a function")),a.hu(null==t||Array.isArray(t)&&t.every((e=>e instanceof r._w)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in s.BV.registeredVariables)t.push(s.BV.registeredVariables[e])}const i=n?t.filter((e=>!e.trainable)):null,o=t.length;t=t.filter((e=>e.trainable)),a.hu(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`));const{value:u,grads:l}=s.BV.gradients(e,t,null,!0);a.hu(l.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),a.hu(0===u.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${u.rank} tensor`));const c={};return t.forEach(((e,t)=>{null!=l[t]&&(c[e.name]=l[t])})),null!=i&&i.forEach((e=>c[e.name]=null)),{value:u,grads:c}}function o(e){return s.BV.customGrad(e)}},1140:(e,t,n)=>{"use strict";n.d(t,{SYM:()=>Fe.SY,VGw:()=>Fe.VG,SpW:()=>Fe.Sp,mm_:()=>Fe.mm,Xze:()=>Fe.Xz,oT6:()=>Fe.oT,IKK:()=>Fe.IK,sJF:()=>Fe.sJ,aJk:()=>Fe.aJ,M2y:()=>Fe.M2,qw7:()=>Fe.qw,jMg:()=>Fe.jM,QCc:()=>Fe.QC,Oyi:()=>Fe.Oy,JhU:()=>Fe.Jh,_k9:()=>Fe._k,IMb:()=>Fe.IM,ROF:()=>Fe.RO,XLW:()=>Fe.XL,zws:()=>Fe.zw,zvY:()=>Fe.zv,eEB:()=>Fe.eE,RFZ:()=>Fe.RF,gJX:()=>Fe.gJ,xnO:()=>Fe.xn,Zz9:()=>Fe.Zz,yj2:()=>Fe.yj,Eh3:()=>Fe.Eh,mhS:()=>Fe.mh,wUP:()=>Fe.wU,wm:()=>Fe.wm,x12:()=>Fe.x1,o2y:()=>Fe.o2,ik2:()=>Fe.ik,mc4:()=>Fe.mc,TR1:()=>Fe.TR,VcC:()=>Fe.Vc,iHb:()=>Fe.iH,JLz:()=>xn.JL,QRR:()=>Fe.QR,T0n:()=>Fe.T0,cie:()=>Fe.ci,sL$:()=>Fe.sL,y7R:()=>Fe.y7,$w:()=>Fe.$w,p4S:()=>Fe.p4,Vn9:()=>Fe.Vn,ekb:()=>Fe.ek,$g6:()=>Fe.$g,SX0:()=>Fe.SX,HEU:()=>Fe.HE,hdR:()=>Fe.hd,Omj:()=>Fe.Om,NEP:()=>Fe.NE,YFo:()=>Fe.YF,Y0y:()=>Fe.Y0,vwp:()=>Fe.vw,deh:()=>Fe.de,Uyb:()=>Fe.Uy,OR:()=>Fe.OR,jeX:()=>Fe.je,eBW:()=>Fe.eB,sHE:()=>Fe.sH,_V0:()=>Fe._V,luS:()=>Fe.lu,q1x:()=>Fe.q1,qi_:()=>Fe.qi,iZT:()=>Fe.iZ,Acj:()=>Fe.Ac,Qg5:()=>Fe.Qg,iJz:()=>Fe.iJ,J_u:()=>Fe.J_,avt:()=>Fe.av,iWB:()=>Fe.iW,r7n:()=>Fe.r7,Zuw:()=>xn.Zu,eZ0:()=>Fe.eZ,Hhh:()=>Fe.Hh,J$2:()=>Fe.J$,vtC:()=>Fe.vt,CAk:()=>Fe.CA,e7N:()=>Fe.e7,ZbH:()=>Fe.Zb,kU:()=>Fe.kU,PYm:()=>Fe.PY,VfG:()=>Fe.Vf,MZg:()=>Fe.MZ,YoZ:()=>Fe.Yo,mTV:()=>Fe.mT,OAf:()=>Fe.OA,OU7:()=>Fe.OU,OV7:()=>Fe.OV,vFR:()=>Fe.vF,BMI:()=>Fe.BM,q2K:()=>Fe.q2,c17:()=>Fe.c1,q8u:()=>Fe.q8,jQs:()=>Fe.jQ,Vbg:()=>Fe.Vb,NZg:()=>Fe.NZ,wYn:()=>Fe.wY,kuV:()=>Fe.ku,uv1:()=>Fe.uv,cye:()=>Fe.cy,W0H:()=>Fe.W0,yQU:()=>Fe.yQ,we_:()=>Fe.we,qWM:()=>Fe.qW,gaJ:()=>et,QiL:()=>Fe.Qi,lyA:()=>Fe.ly,pe_:()=>Fe.pe,o0g:()=>Fe.o0,DlI:()=>Fe.Dl,e6w:()=>Fe.e6,xJR:()=>Fe.xJ,oHH:()=>Fe.oH,$HU:()=>Fe.$H,qkr:()=>Fe.qk,SbG:()=>Fe.Sb,HZH:()=>Fe.HZ,_Yw:()=>Fe._Y,zbQ:()=>Fe.zb,dpD:()=>Fe.dp,Hmb:()=>Fe.Hm,mKl:()=>Fe.mK,b9H:()=>Fe.b9,e07:()=>Fe.e0,bV0:()=>Fe.bV,xQA:()=>Fe.xQ,PhF:()=>Fe.Ph,oFR:()=>Fe.oF,a5O:()=>Fe.a5,i5y:()=>Fe.i5,RQH:()=>Fe.RQ,wYB:()=>Fe.w3,p2w:()=>Fe.p2,Gcp:()=>Fe.Gc,MRv:()=>Fe.MR,TQc:()=>Fe.TQ,O3z:()=>Fe.O3,nhH:()=>Fe.nh,w3H:()=>Fe.YW,ZjV:()=>Fe.Zj,D2d:()=>Fe.D2,L8s:()=>Fe.L8,FKq:()=>Fe.FK,bK0:()=>Fe.bK,_tC:()=>Fe._t,h8e:()=>Fe.h8,jQk:()=>Fe.m2,_JP:()=>Fe._J,s1s:()=>Fe.s1,XkS:()=>Fe.Xk,Tr8:()=>Fe.Tr,GBy:()=>Fe.GB,sEM:()=>Fe.sE,MIZ:()=>Fe.MI,esB:()=>me.es,YDk:()=>me.YD,n9L:()=>Fe.n9,cWu:()=>Fe.cW,wx7:()=>Fe.wx,G3Y:()=>Fe.G3,kpP:()=>Fe.kp,ToN:()=>Fe.To,Qvg:()=>Fe.Qv,RuY:()=>Fe.Ru,usg:()=>Fe.us,WnP:()=>nt.WnP,IHx:()=>nt.IHx,$6P:()=>nt.$6P,YjB:()=>nt.YjB,NqF:()=>nt.NqF,wS1:()=>nt.wS1,uR5:()=>nt.uR5,y3$:()=>Qe.y3,Wap:()=>u,Dxk:()=>nt.Dxk,JY5:()=>nt.JY5,p3b:()=>nt.p3b,Xhn:()=>a,f3b:()=>nt.f3b,pju:()=>nt.pju,iUl:()=>nt.iUl,d9v:()=>nt.d9v,zoF:()=>nt.zoF,gME:()=>nt.gME,Izb:()=>nt.Izb,MNy:()=>nt.MNy,ZaL:()=>nt.ZaL,PAt:()=>nt.PAt,Tek:()=>nt.Tek,bc:()=>nt.bc,pdZ:()=>nt.pdZ,$QV:()=>nt.$QV,B10:()=>nt.B10,C2$:()=>s,B90:()=>Qe.B9,hiC:()=>nt.hiC,rvX:()=>nt.rvX,pyx:()=>nt.pyx,SRH:()=>Qe.SR,OBj:()=>d.OB,DgJ:()=>nt.DgJ,Qqt:()=>nt.Qqt,dt4:()=>nt.dt4,iyy:()=>nt.iyy,hlL:()=>nt.hlL,GWj:()=>nt.GWj,imm:()=>nt.imm,Iqj:()=>nt.Iqj,N_N:()=>Qe.N_,pjt:()=>nt.pjt,brS:()=>nt.brS,BHj:()=>nt.BHj,io:()=>r,CnY:()=>Qe.Cn,GDt:()=>l,hi7:()=>nt.hi7,$r2:()=>nt.$r2,cM7:()=>nt.cM7,Krr:()=>nt.Krr,CmS:()=>nt.CmS,HvI:()=>nt.HvI,OI3:()=>nt.OI3,Fp7:()=>nt.Fp7,_sB:()=>nt._sB,YQQ:()=>nt.YQQ,gWQ:()=>nt.gWQ,J69:()=>nt.J69,sq6:()=>Qe.sq,LTh:()=>nt.LTh,Gi7:()=>nt.Gi7,dC7:()=>nt.dC7,W76:()=>nt.W76,glt:()=>St,Quu:()=>nt.Quu,lfX:()=>nt.lfX,iUs:()=>nt.iUs,JpU:()=>nt.JpU,vku:()=>nt.vku,AL3:()=>nt.AL3,nGf:()=>nt.nGf,LGj:()=>nt.LGj,jqO:()=>Qe.jq,wCN:()=>Oe.wC,UYe:()=>nt.UYe,XLQ:()=>nt.XLQ,GYS:()=>nt.GYS,iD$:()=>nt.iD$,U8D:()=>nt.U8D,U_I:()=>nt.U_I,m7h:()=>i,XD2:()=>nt.XD2,tPi:()=>nt.tPi,jZU:()=>nt.jZU,SmN:()=>nt.SmN,CnO:()=>nt.CnO,p0P:()=>nt.p0P,kuN:()=>He,XAC:()=>nt.XAC,Wvh:()=>nt.Wvh,Vl2:()=>nt.Vl2,_b3:()=>nt._b3,L9e:()=>nt.L9e,knu:()=>nt.knu,luU:()=>nt.luU,Smz:()=>nt.Smz,z4k:()=>tt.z4,AEp:()=>nt.AEp,XeE:()=>nt.XeE,RRF:()=>nt.RRF,odF:()=>nt.odF,piX:()=>qe,lub:()=>Qe.lu,Gg6:()=>nt.Gg6,p_j:()=>kt,p4s:()=>nt.p4s,Xu6:()=>nt.Xu6,HHK:()=>nt.HHK,x8V:()=>tt.x8,D5U:()=>Ke,VD$:()=>nt.VD$,jTM:()=>Ye,arb:()=>nt.arb,lls:()=>nt.lls,P84:()=>nt.P84});var s={};n.r(s),n.d(s,{isBrowser:()=>p,isMobile:()=>h});var r={};n.r(r),n.d(r,{browserFiles:()=>ve,browserHTTPRequest:()=>Ee,concatenateArrayBuffers:()=>S,copyModel:()=>ue,decodeWeights:()=>v,encodeWeights:()=>x,fromMemory:()=>Re,getLoadHandlers:()=>F,getModelArtifactsForJSON:()=>C,getModelArtifactsInfoForJSON:()=>$,getSaveHandlers:()=>_,http:()=>$e,isHTTPScheme:()=>Te,listModels:()=>ie,loadWeights:()=>Ie,moveModel:()=>le,registerLoadRouter:()=>R,registerSaveRouter:()=>D,removeModel:()=>oe,weightsLoaderFactory:()=>Se,withSaveHandler:()=>_e});var a={};n.r(a),n.d(a,{fromPixels:()=>Ve,fromPixelsAsync:()=>Ue,toPixels:()=>We});var i={};n.r(i),n.d(i,{Serializable:()=>Ge,SerializationMap:()=>je,registerClass:()=>Xe});var o={};n.r(o),n.d(o,{collectGatherOpShapeInfo:()=>fn,computeOutShape:()=>dn,segOpComputeOptimalWindowSize:()=>pn});var u={};n.r(u),n.d(u,{ERF_A1:()=>Vt,ERF_A2:()=>Ht,ERF_A3:()=>Gt,ERF_A4:()=>jt,ERF_A5:()=>Xt,ERF_P:()=>Wt,PARALLELIZE_THRESHOLD:()=>Dt,SELU_SCALE:()=>Ut.$,SELU_SCALEALPHA:()=>Ut.y,applyActivation:()=>At.QH,assertAndGetBroadcastShape:()=>Tt.$N,assertAxesAreInnerMostDims:()=>Nt.lB,assertParamsConsistent:()=>Ct,assignToTypedArray:()=>en,axesAreInnerMostDims:()=>Nt.YB,calculateShapes:()=>Pt.SU,checkEinsumDimSizes:()=>on,combineLocations:()=>Nt.Vh,complexWithEvenIndex:()=>Qt,complexWithOddIndex:()=>Jt,computeConv2DInfo:()=>Et.Ix,computeConv3DInfo:()=>Et.jw,computeDefaultPad:()=>Et.aO,computeDilation2DInfo:()=>Et.Rf,computeOptimalWindowSize:()=>Rt,computeOutAndReduceShapes:()=>Nt.kz,computeOutShape:()=>$t,computePool2DInfo:()=>Et.Xw,computePool3DInfo:()=>Et.pl,convertConv2DDataFormat:()=>Et.sl,decodeEinsumEquation:()=>rn,eitherStridesOrDilationsAreOne:()=>Et.jT,expandShapeToKeepDim:()=>Nt.rv,exponent:()=>nn,exponents:()=>tn,fromStringArrayToUint8:()=>gn,fromUint8ToStringArray:()=>mn,getAxesPermutation:()=>Nt.Q3,getBroadcastDims:()=>Tt.XF,getComplexWithIndex:()=>Zt,getEinsumComputePath:()=>un,getEinsumPermutation:()=>an,getFusedBiasGradient:()=>At.pf,getFusedDyActivation:()=>At.Fr,getImageCenter:()=>_t,getInnerMostAxes:()=>Nt.sY,getPermuted:()=>Ot,getReductionAxes:()=>Tt.RR,getReshaped:()=>Ft,getReshapedPermuted:()=>Mt,getSliceBeginCoords:()=>Lt,getSliceSize:()=>zt,getUndoAxesPermutation:()=>Nt.LJ,isIdentityPermutation:()=>ln,log:()=>qt.c,mergeRealAndImagArrays:()=>Kt,prepareAndValidate:()=>Bt,prepareSplitSize:()=>hn,segment_util:()=>o,shouldFuse:()=>At.uy,slice_util:()=>He,splitRealAndImagArrays:()=>Yt,tupleValuesAreOne:()=>Et.I0,upcastType:()=>tt.x8,validateInput:()=>Pt.b0,validateUpdateShape:()=>Pt.l5,warn:()=>qt.Z});var l={};n.r(l),n.d(l,{GP:()=>yn.GP,qP:()=>yn.qP,pA:()=>yn.pA,ZA:()=>bn.Z});var c=n(7097);function h(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function p(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var d=n(2885);const f=(0,d.OB)();f.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),f.registerFlag("IS_BROWSER",(()=>p())),f.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),f.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),f.registerFlag("PROD",(()=>!1)),f.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>f.getBool("DEBUG"))),f.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),f.registerFlag("IS_TEST",(()=>!1)),f.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),f.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));var m=n(1661),g=n(701),y=n(569);const b={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function x(e,t){const n=[],s=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<r.length;++a){const i=r[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,s=new Uint8Array(n);let r=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);s.set(a,r),r+=4,s.set(n,r),r+=n.length}e(s)}));s.push(e)}else s.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:w(await Promise.all(s)),specs:n}}function v(e,t){const n={};let s,r=0;for(const a of t){const t=a.name,i=a.dtype,o=a.shape,u=(0,y.NA)(o);let l;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=b[n.dtype],c=e.slice(r,r+u*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===s&&(s=E()),l=s(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=Math.round(t*n.scale+n.min)}}r+=u*o}else if("string"===i){const t=(0,y.NA)(a.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(r,r+4))[0];r+=4;const n=new Uint8Array(e.slice(r,r+t));l.push(n),r+=t}}else{const s=b[i],a=e.slice(r,r+u*s);if("float32"===i)l=new Float32Array(a);else if("int32"===i)l=new Int32Array(a);else if("bool"===i)l=new Uint8Array(a);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{l=new Float32Array(a);const e=new Float32Array(l.length/2),s=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],s[t]=l[2*t+1];const r=(0,g.X)(e,o,"float32"),i=(0,g.X)(s,o,"float32");n[t]=(0,m.P)(r,i),r.dispose(),i.dispose()}}r+=u*s}"complex64"!==i&&(n[t]=(0,g.X)(l,o,i))}return n}function w(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const s=new Uint8Array(t);let r=0;return n.forEach((e=>{s.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),s.buffer}const k="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function I(e){return k?Buffer.byteLength(e):new Blob([e]).size}function S(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let s=0;return e.forEach((e=>{n.set(new Uint8Array(e),s),s+=e.byteLength})),n.buffer}function N(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function T(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function C(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[s,r]=await t(e.weightsManifest);n.weightSpecs=s,n.weightData=r}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function $(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:I(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:I(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function E(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return s=>{const r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let r=0;r<s.length;r++){const i=s[r],o=e[n[i>>10]+(1023&i)]+t[i>>10];a[r]=o}return new Float32Array(r)}}class A{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==A.instance&&(A.instance=new A),A.instance}static registerSaveRouter(e){A.getInstance().saveRouters.push(e)}static registerLoadRouter(e){A.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return A.getHandlers(e,"save")}static getLoadHandlers(e,t){return A.getHandlers(e,"load",t)}static getHandlers(e,t,n){const s=[];return("load"===t?A.getInstance().loadRouters:A.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&s.push(r)})),s}}const D=e=>A.registerSaveRouter(e),R=e=>A.registerLoadRouter(e),_=e=>A.getSaveHandlers(e),F=(e,t)=>A.getLoadHandlers(e,t),O="tensorflowjs",M="models_store",L="model_info_store";function z(){if(!(0,d.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function B(e){const t=e.result;t.createObjectStore(M,{keyPath:"modelPath"}),t.createObjectStore(L,{keyPath:"modelPath"})}class P{constructor(e){if(this.indexedDB=z(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const s=this.indexedDB.open(O,1);s.onupgradeneeded=()=>B(s),s.onsuccess=()=>{const r=s.result;if(null==t){const t=r.transaction(M,"readonly"),s=t.objectStore(M).get(this.modelPath);s.onsuccess=()=>{if(null==s.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(s.result.modelArtifacts)},s.onerror=e=>(r.close(),n(s.error)),t.oncomplete=()=>r.close()}else{const s=$(t),a=r.transaction(L,"readwrite");let i=a.objectStore(L);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:s});let u;o.onsuccess=()=>{u=r.transaction(M,"readwrite");const o=u.objectStore(M).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s});o.onsuccess=()=>e({modelArtifactsInfo:s}),o.onerror=e=>{i=a.objectStore(L);const t=i.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(o.error)),t.onerror=e=>(r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),a.oncomplete=()=>{null==u?r.close():u.oncomplete=()=>r.close()}}},s.onerror=e=>n(s.error)}))}}P.URL_SCHEME="indexeddb://";const U=e=>{return(0,d.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(P.URL_SCHEME)?(t=e.slice(P.URL_SCHEME.length),new P(t)):null;var t};A.registerSaveRouter(U),A.registerLoadRouter(U);class W{constructor(){this.indexedDB=z()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(O,1);n.onupgradeneeded=()=>B(n),n.onsuccess=()=>{const s=n.result,r=s.transaction(L,"readonly"),a=r.objectStore(L).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(s.close(),t(a.error)),r.oncomplete=()=>s.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(P.URL_SCHEME)?t.slice(P.URL_SCHEME.length):t,new Promise(((t,n)=>{const s=this.indexedDB.open(O,1);s.onupgradeneeded=()=>B(s),s.onsuccess=()=>{const r=s.result,a=r.transaction(L,"readwrite"),i=a.objectStore(L),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const s=i.delete(e),a=()=>{u=r.transaction(M,"readwrite");const s=u.objectStore(M).delete(e);s.onsuccess=()=>t(o.result.modelArtifactsInfo),s.onerror=e=>n(o.error)};s.onsuccess=a,s.onerror=e=>(a(),r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),a.oncomplete=()=>{null==u?r.close():u.oncomplete=()=>r.close()}},s.onerror=e=>n(s.error)}))}}const V="/",H="tensorflowjs_models",G="info",j="model_topology",X="weight_specs",q="weight_data",K="model_metadata";function Y(e){return{info:[H,e,G].join(V),topology:[H,e,j].join(V),weightSpecs:[H,e,X].join(V),weightData:[H,e,q].join(V),modelMetadata:[H,e,K].join(V)}}function Q(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function J(e){const t=e.split(V);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(V)}class Z{constructor(e){if(!(0,d.OB)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Y(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=$(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(k)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,s=t.length;e<s;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch(e){throw Q(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(k){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}Z.URL_SCHEME="localstorage://";const ee=e=>{return(0,d.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Z.URL_SCHEME)?(t=e.slice(Z.URL_SCHEME.length),new Z(t)):null;var t};A.registerSaveRouter(ee),A.registerLoadRouter(ee);class te{constructor(){(0,y.hu)((0,d.OB)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,y.hu)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=H+V,n=V+G;for(let s=0;s<this.LS.length;++s){const r=this.LS.key(s);r.startsWith(t)&&r.endsWith(n)&&(e[J(r)]=JSON.parse(this.LS.getItem(r)))}return e}async removeModel(e){var t;const n=Y(e=(t=e).startsWith(Z.URL_SCHEME)?t.slice(Z.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(n.info));return Q(n),s}}const ne="://";class se{constructor(){this.managers={}}static getInstance(){return null==se.instance&&(se.instance=new se),se.instance}static registerManager(e,t){(0,y.hu)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(ne)&&(e=e.slice(0,e.indexOf(ne))),(0,y.hu)(e.length>0,(()=>"scheme must not be an empty string."));const n=se.getInstance();(0,y.hu)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function re(e){if(-1===e.indexOf(ne))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${se.getSchemes().join(",")}`);return{scheme:e.split(ne)[0],path:e.split(ne)[1]}}async function ae(e,t,n=!1){(0,y.hu)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const s=A.getLoadHandlers(e);(0,y.hu)(s.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),(0,y.hu)(s.length<2,(()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`));const r=s[0],a=A.getSaveHandlers(t);(0,y.hu)(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),(0,y.hu)(a.length<2,(()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`));const i=a[0],o=re(e).scheme,u=re(e).path,l=o===re(e).scheme,c=await r.load();n&&l&&await se.getManager(o).removeModel(u);const h=await i.save(c);return n&&!l&&await se.getManager(o).removeModel(u),h.modelArtifactsInfo}async function ie(){const e=se.getSchemes(),t={};for(const n of e){const e=await se.getManager(n).listModels();for(const s in e)t[n+ne+s]=e[s]}return t}async function oe(e){const t=re(e);return se.getManager(t.scheme).removeModel(t.path)}async function ue(e,t){return ae(e,t,!1)}async function le(e,t){return ae(e,t,!0)}class ce{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if((0,d.OB)().get("IS_BROWSER")){(0,d.OB)().setPlatform("browser",new ce);try{se.registerManager(Z.URL_SCHEME,new te)}catch(e){}try{se.registerManager(P.URL_SCHEME,new W)}catch(e){}}let he;(0,d.OB)().get("IS_NODE")&&(0,d.OB)().setPlatform("node",new class{constructor(){this.util=n(8628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,d.OB)().global.fetch?(0,d.OB)().global.fetch(e,t):(null==he&&(he=n(5410)),he(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var pe=n(2657),de=n(2271),fe=n(8723),me=n(4077);(0,c.wv)();const ge={buffer:pe.f,cast:de.p,clone:fe.d,print:function(e,t=!1){console.log(e.toString(t))}};function ye(e){return new Promise((e=>setTimeout(e))).then(e)}(0,me.Vp)(ge);class be{constructor(e){if(!(0,d.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(be.URL_SCHEME)&&(e=e.slice(be.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=T(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),s=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=s,await ye((()=>r.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await ye((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:$(e)}}}}be.URL_SCHEME="downloads://";class xe{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const s=JSON.parse(n.target.result),r=s.modelTopology;if(null==r)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==s.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:r});const a=C(s,(e=>this.loadWeights(e)));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const s of e)t.push(...s.weights),n.push(...s.paths);const s=this.checkManifestAndWeightFiles(e),r=n.map((e=>this.loadWeightsFile(e,s[e])));return Promise.all(r).then((e=>[t,S(e)]))}loadWeightsFile(e,t){return new Promise(((n,s)=>{const r=new FileReader;r.onload=e=>{const t=e.target.result;n(t)},r.onerror=t=>s(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>N(e.name))),s={};for(const r of e)r.paths.forEach((e=>{const r=N(e);if(-1!==t.indexOf(r))throw new Error(`Duplicate file basename found in weights manifest: '${r}'`);if(t.push(r),-1===n.indexOf(r))throw new Error(`Weight file with basename '${r}' is not provided.`);s[e]=this.weightsFiles[n.indexOf(r)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}}function ve(e){return new xe(e)}function we(e,t,n,s){!function(e){(0,y.hu)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,y.hu)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),(0,y.hu)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),(0,y.hu)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,s=null==s?1:s);let r=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++r/e.length*(s-n);return t(i),a})),a))))}async function ke(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,d.OB)().platform.fetch:t.fetchFunc,s=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(s):await we(s,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await we(r,t.onProgress,.5,1)}async function Ie(e,t="",n,s){return Se((e=>ke(e,{requestInit:s})))(e,t,n)}function Se(e){return async(t,n="",s)=>{const r=t.map((()=>!1)),a={},i=null!=s?s.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=b[u]*y.NA(e.shape),c=()=>{r[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=s?s.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=l}))})),!i.every((e=>e))){const e=s.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const u=r.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const c=await e(l),h={};let p=0;return u.forEach((e=>{const n=t[e].paths.length;let s=0;for(let e=0;e<n;e++)s+=c[p+e].byteLength;const r=new ArrayBuffer(s),i=new Uint8Array(r);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[p+e]);i.set(t,o),o+=t.byteLength}a[e].forEach((e=>{const t=v(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)h[e]=t[e]})),p+=n})),h}}A.registerSaveRouter((e=>(0,d.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(be.URL_SCHEME)?function(e="model"){return new be(e)}(e.slice(be.URL_SCHEME.length)):null));class Ne{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,y.hu)("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,d.OB)().platform.fetch,(0,y.hu)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,y.hu)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=T(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:$(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,s=t.weightsManifest;if(null==n&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return C(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),r=this.weightPathPrefix||n,a=[];for(const t of e)a.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(r+e+s);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,S(await ke(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Te(e){return null!=e.match(Ne.URL_SCHEME_REGEX)}Ne.URL_SCHEME_REGEX=/^https?:\/\//;const Ce=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Te(e))):Te(e),n)return $e(e,t)}return null};function $e(e,t){return new Ne(e,t)}function Ee(e,t){return $e(e,t)}A.registerSaveRouter(Ce),A.registerLoadRouter(Ce);class Ae{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class De{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function Re(e,t,n,s){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Ae(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ae({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ae({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:s}))}function _e(e){return new De(e)}var Fe=n(9121),Oe=n(6151),Me=n(3740),Le=n(2668),ze=n(7852);let Be;function Pe(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)s=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(r){const t=2;if(r&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=(0,Oe.pI)(Fe.eB,c.BV.backendName)){const n={pixels:e},s={numChannels:t};return c.BV.runKernel(Fe.eB,n,s)}const[u,l]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];let h,p;if(i?h=e.getContext("2d").getImageData(0,0,u,l).data:s||n?h=e.data:(a||r||o)&&(null==Be&&(Be=document.createElement("canvas").getContext("2d")),Be.canvas.width=u,Be.canvas.height=l,Be.drawImage(e,0,0,u,l),h=Be.getImageData(0,0,u,l).data),4===t)p=new Int32Array(h);else{const e=u*l;p=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)p[n*t+e]=h[4*n+e]}return function(e,t,n){if((0,y.Cq)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const s=(0,Me.C)(e,n);if(3!==s.length&&1!==s.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,ze.H)(e,t,s,n)}(p,[l,u,t],"int32")}async function Ue(e,t=3){let n=null;if((0,d.OB)().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Pe(n,t)}async function We(e,t){let n=(0,Me._1)(e,"img","toPixels");if(!(e instanceof me.es)){const e=n;n=(0,de.p)(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[s,r]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2];if(a>4||2===a)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(r*s*4);for(let e=0;e<s*r;++e){const t=[0,0,0,255];for(let s=0;s<a;s++){const r=i[e*a+s];if("float32"===n.dtype){if(r<0||r>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===n.dtype&&(r<0||r>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===a?(t[0]=r*o,t[1]=r*o,t[2]=r*o):t[s]=r*o}const s=4*e;u[s+0]=Math.round(t[0]),u[s+1]=Math.round(t[1]),u[s+2]=Math.round(t[2]),u[s+3]=Math.round(t[3])}if(null!=t){t.width=r,t.height=s;const e=t.getContext("2d"),n=new ImageData(u,r,s);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const Ve=(0,Le.op)({fromPixels_:Pe});var He=n(7650);class Ge{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class je{constructor(){this.classNameMap={}}static getMap(){return null==je.instance&&(je.instance=new je),je.instance}static register(e){je.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Xe(e){(0,y.hu)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,y.hu)("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,y.hu)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),je.register(e)}var qe=n(747),Ke=n(9122);const Ye="3.9.0";var Qe=n(4368),Je=n(633),Ze=n(9494);class et extends Ge{minimize(e,t=!1,n){const{value:s,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return(0,Qe.B9)(r),t?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,Je.pn)(e,t)}dispose(){null!=this.iterations_&&(0,Qe.B9)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,Ze.i)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(et,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var tt=n(1221),nt=n(8869),st=n(6407),rt=n(1274),at=n(4841),it=n(3261),ot=n(248),ut=n(6577);class lt extends et{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=c.BV.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=c.BV.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:(0,Qe.lu)((()=>(0,ut.P)(s).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:(0,Qe.lu)((()=>(0,ut.P)(s).variable(!1)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;(0,Qe.lu)((()=>{const e=(0,st.I)((0,at.d)(a,this.rho),(0,at.d)((0,ot.h)(r),1-this.rho)),t=(0,at.d)((0,rt.h)((0,it._)((0,st.I)(i,this.epsilon)),(0,it._)((0,st.I)(a,this.epsilon))),r),n=(0,st.I)((0,at.d)(i,this.rho),(0,at.d)((0,ot.h)(t),1-this.rho));a.assign(e),i.assign(n);const o=(0,st.I)((0,at.d)(t,-this.learningRate),s);s.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,Qe.B9)(this.accumulatedGrads.map((e=>e.variable))),(0,Qe.B9)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}lt.className="Adadelta",Xe(lt);var ct=n(4006);class ht extends et{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=c.BV.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:(0,Qe.lu)((()=>(0,ct.h)(s.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=this.accumulatedGrads[n].variable;(0,Qe.lu)((()=>{const e=(0,st.I)(a,(0,ot.h)(r));a.assign(e);const t=(0,st.I)((0,at.d)((0,rt.h)(r,(0,it._)((0,st.I)(e,c.BV.backend.epsilon()))),-this.learningRate),s);s.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,Qe.B9)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}ht.className="Adagrad",Xe(ht);var pt=n(3453),dt=n(827);class ft extends et{constructor(e,t,n,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,Qe.lu)((()=>{this.accBeta1=(0,Ze.i)(t).variable(),this.accBeta2=(0,Ze.i)(n).variable()})),null==s&&(this.epsilon=c.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,Qe.lu)((()=>{const n=(0,dt.l)(1,this.accBeta1),s=(0,dt.l)(1,this.accBeta2);t.forEach(((t,r)=>{const a=c.BV.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:(0,Qe.lu)((()=>(0,ut.P)(a).variable(!1)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${t}/v`,variable:(0,Qe.lu)((()=>(0,ut.P)(a).variable(!1)))});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,u=this.accumulatedSecondMoment[r].variable,l=(0,st.I)((0,at.d)(o,this.beta1),(0,at.d)(i,1-this.beta1)),h=(0,st.I)((0,at.d)(u,this.beta2),(0,at.d)((0,ot.h)(i),1-this.beta2)),p=(0,rt.h)(l,n),d=(0,rt.h)(h,s);o.assign(l),u.assign(h);const f=(0,st.I)((0,at.d)((0,rt.h)(p,(0,st.I)((0,it._)(d),this.epsilon)),-this.learningRate),a);a.assign(f)})),this.accBeta1.assign((0,at.d)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,at.d)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,Qe.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&(0,Qe.B9)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),(0,Qe.lu)((()=>{this.accBeta1.assign((0,pt.s)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,pt.s)(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}ft.className="Adam",Xe(ft);var mt=n(6235),gt=n(632);class yt extends et{constructor(e,t,n,s=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,Qe.lu)((()=>{this.iteration=(0,Ze.i)(0).variable(),this.accBeta1=(0,Ze.i)(t).variable()})),null==s&&(this.epsilon=c.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,Qe.lu)((()=>{const n=(0,dt.l)(1,this.accBeta1),s=(0,rt.h)(-this.learningRate,(0,st.I)((0,at.d)(this.iteration,this.decay),1));t.forEach(((t,r)=>{const a=c.BV.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:(0,ut.P)(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${t}/v`,variable:(0,ut.P)(a).variable(!1)});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,u=this.accumulatedWeightedInfNorm[r].variable,l=(0,st.I)((0,at.d)(o,this.beta1),(0,at.d)(i,1-this.beta1)),h=(0,at.d)(u,this.beta2),p=(0,mt.W)(i),d=(0,gt.g)(h,p);o.assign(l),u.assign(d);const f=(0,st.I)((0,at.d)((0,rt.h)(s,n),(0,rt.h)(l,(0,st.I)(d,this.epsilon))),a);a.assign(f)})),this.iteration.assign((0,st.I)(this.iteration,1)),this.accBeta1.assign((0,at.d)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,Qe.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&(0,Qe.B9)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}yt.className="Adamax",Xe(yt);class bt extends et{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const r=c.BV.registeredVariables[t];(0,Qe.lu)((()=>{const e=(0,st.I)((0,at.d)(this.c,s),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,Qe.Cn)((0,Ze.i)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}bt.className="SGD",Xe(bt);class xt extends bt{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,Ze.i)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=c.BV.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:(0,Qe.lu)((()=>(0,ut.P)(s).variable(e)))}}const r=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&(0,Qe.lu)((()=>{let e;const t=(0,st.I)((0,at.d)(this.m,r),a);e=this.useNesterov?(0,st.I)((0,at.d)(this.c,(0,st.I)(a,(0,at.d)(t,this.m))),s):(0,st.I)((0,at.d)(this.c,t),s),r.assign(t),s.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,Qe.B9)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}xt.className="Momentum",Xe(xt);class vt extends et{constructor(e,t=.9,n=0,s=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==s&&(this.epsilon=c.BV.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=c.BV.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:(0,Qe.lu)((()=>(0,ut.P)(s).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:(0,Qe.lu)((()=>(0,ut.P)(s).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:(0,Qe.lu)((()=>(0,ut.P)(s).variable(r)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;(0,Qe.lu)((()=>{const e=(0,st.I)((0,at.d)(i,this.decay),(0,at.d)((0,ot.h)(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=(0,st.I)((0,at.d)(t,this.decay),(0,at.d)(a,1-this.decay)),u=(0,rt.h)((0,at.d)(a,this.learningRate),(0,it._)((0,dt.l)(e,(0,st.I)((0,ot.h)(r),this.epsilon)))),l=(0,st.I)((0,at.d)(o,this.momentum),u);i.assign(e),t.assign(r),o.assign(l);const c=(0,dt.l)(s,l);s.assign(c)}else{const e=(0,st.I)((0,at.d)(i,this.decay),(0,at.d)((0,ot.h)(a),1-this.decay)),t=(0,st.I)((0,at.d)(o,this.momentum),(0,rt.h)((0,at.d)(a,this.learningRate),(0,it._)((0,st.I)(e,this.epsilon))));i.assign(e),o.assign(t);const n=(0,dt.l)(s,t);s.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,Qe.B9)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,Qe.B9)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&(0,Qe.B9)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}vt.className="RMSProp",Xe(vt);class wt{static sgd(e){return new bt(e)}static momentum(e,t,n=!1){return new xt(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new vt(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new ft(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new lt(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new yt(e,t,n,s,r)}static adagrad(e,t=.1){return new ht(e,t)}}const kt={sgd:wt.sgd,momentum:wt.momentum,adadelta:wt.adadelta,adagrad:wt.adagrad,rmsprop:wt.rmsprop,adamax:wt.adamax,adam:wt.adam},It="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function St(){return new Promise((e=>It((()=>e()))))}var Nt=n(3591),Tt=n(2200);function Ct(e,t){const n=e[0].length;e.forEach(((e,t)=>{y.hu(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),y.hu(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const s=e[0];e.forEach(((e,r)=>{for(let a=0;a<n;a++)y.hu(a===t||e[a]===s[a],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${e}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`))}))}function $t(e,t){const n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}var Et=n(2582),At=n(9323);const Dt=30;function Rt(e){return e<=Dt?e:(0,y.jP)(e,Math.floor(Math.sqrt(e)))}function _t(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Ft(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const n=t.length;for(let s=0;s<n;++s)r=r.concat([e[s+1]/t[s],t[s]]);r=r.concat(e.slice(n+1))}return r}function Ot(e,t,n=!0){const s=[];if(n){s.push(t);for(let n=t+1;n<e;++n)n<=2*t?(s.push(n),s.push(n-(t+1))):s.push(n)}else{const n=[],r=[];for(let s=1;s<e;++s)s>=2*t+1||s%2==1?r.push(s):n.push(s);s.push(...n),s.push(0),s.push(...r)}return s}function Mt(e,t,n,s=!0){const r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?s?r.push(t[n-1]*e[n]):r.push(e[n]/t[n-1]):r.push(e[n]);return r}function Lt(e,t){const n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function zt(e,t,n){const s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}function Bt(e,t){const n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(0===(0,y.NA)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const r=t.shape,a=r[r.length-1];let i=1;for(let e=0;e<r.length-1;++e)i*=r[e];const o=e.shape,u=r.slice();u.pop();let l=1;for(let e=a;e<n;++e)l*=o[e],u.push(o[e]);const c=[...(0,y.e3)(e.shape).map((e=>e/l)),1].slice(0,a);return[u,i,l,c]}var Pt=n(3028),Ut=n(3179);const Wt=.3275911,Vt=.254829592,Ht=-.284496736,Gt=1.421413741,jt=-1.453152027,Xt=1.061405429;var qt=n(4706);function Kt(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function Yt(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function Qt(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],s[Math.floor(t/4)]=e[t+1];return{real:n,imag:s}}function Jt(e){const t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],s[Math.floor(t/4)]=e[t+1];return{real:n,imag:s}}function Zt(e,t){return{real:e[2*t],imag:e[2*t+1]}}function en(e,t,n,s){e[2*s]=t,e[2*s+1]=n}function tn(e,t){const n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function nn(e,t,n){const s=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(s),imag:Math.sin(s)}}const sn=/->/g;function rn(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(sn,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[s,r]=e.split("->");(0,y.hu)(-1===s.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const a=s.split(","),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<r.length;++e){const t=r[e];if(!a.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<s.length;++e){const t=s[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const u=new Array(a.length);for(let e=0;e<i;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<a[e].length;++t)u[e].push(o.indexOf(a[e][t]))}const l=o.length,c=[];for(let e=r.length;e<l;++e)c.push(e);return{allDims:o,summedDims:c,idDims:u}}function an(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const s=[];for(let t=0;t<e;++t)-1===n[t]&&s.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:s}}function on(e,t,n){const s=new Array(e);for(let e=0;e<n.length;++e){const r=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===s[t[e][n]]?s[t[e][n]]=r[n]:(0,y.hu)(s[t[e][n]]===r[n],(()=>`Expected dimension ${s[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(r)}, but got dimension ${r[n]}`))}}function un(e,t){const n=e,s=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let e=0;e<r;++e)s.push([]);const a=[];for(let e=0;e<n.length;++e){const r=cn(t,n[e]);for(const t of r)-1===a.indexOf(t)&&(s[e].push(t),a.push(t))}return{path:n,steps:s}}function ln(e){return e.every(((e,t)=>e===t))}function cn(e,t){const n=[];for(let s=0;s<e.length;++s)0!==e[s].length&&-1===e[s].indexOf(t)&&-1!==t||n.push(s);return n}function hn(e,t,n=0){let s=[];if("number"==typeof t)(0,y.hu)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),s=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,y.hu)(r<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const s=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-s}(0,y.hu)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),s=t}return s}function pn(e,t){let n,s=!1;for(e<=Dt?(n=e,s=!0):n=(0,y.jP)(e,Math.floor(Math.sqrt(e)));!s;)n>t||n===e?s=!0:n=(0,y.jP)(e,n+1);return n}function dn(e,t,n){const s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function fn(e,t,n,s){const r=t.shape.length,a=e.shape.length;if(0!==s&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (\n    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let n=0;n<s;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<s;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=s;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=s;e<r;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function mn(e){try{return e.map((e=>(0,Ke.decodeString)(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function gn(e){return e.map((e=>(0,Ke.encodeString)(e)))}var yn=n(3337),bn=n(8333),xn=n(8713)},9121:(e,t,n)=>{"use strict";n.d(t,{SY:()=>s,VG:()=>r,Sp:()=>a,mm:()=>i,Xz:()=>o,oT:()=>u,IK:()=>l,sJ:()=>c,aJ:()=>h,M2:()=>p,qw:()=>d,jM:()=>f,Oy:()=>m,QC:()=>g,Jh:()=>y,RO:()=>b,_k:()=>x,IM:()=>v,XL:()=>w,zw:()=>k,zv:()=>I,Ly:()=>S,eE:()=>N,RF:()=>T,gJ:()=>C,xn:()=>$,Zz:()=>E,yj:()=>A,Eh:()=>D,mh:()=>R,wU:()=>_,wm:()=>F,x1:()=>O,o2:()=>M,ik:()=>L,mc:()=>z,TR:()=>B,iH:()=>P,Vc:()=>U,QR:()=>W,T0:()=>V,ci:()=>H,sL:()=>G,y7:()=>j,$w:()=>X,p4:()=>q,ek:()=>K,Vn:()=>Y,oH:()=>Q,$g:()=>J,SX:()=>Z,HE:()=>ee,Om:()=>te,hd:()=>ne,NE:()=>se,YF:()=>re,Y0:()=>ae,vw:()=>ie,de:()=>oe,Uy:()=>ue,OR:()=>le,je:()=>ce,sH:()=>he,qi:()=>pe,q1:()=>de,iZ:()=>fe,Ac:()=>me,iJ:()=>ge,Qg:()=>ye,J_:()=>be,av:()=>xe,iW:()=>ve,r7:()=>we,J$:()=>ke,vt:()=>Ie,CA:()=>Se,e7:()=>Ne,Zb:()=>Te,kU:()=>Ce,PY:()=>$e,Vf:()=>Ee,MZ:()=>Ae,qC:()=>De,eZ:()=>Re,Hh:()=>_e,Yo:()=>Fe,BM:()=>Oe,mT:()=>Me,OV:()=>Le,OA:()=>ze,OU:()=>Be,vF:()=>Pe,q2:()=>Ue,c1:()=>We,q8:()=>Ve,jQ:()=>He,Vb:()=>Ge,NZ:()=>je,wY:()=>Xe,ku:()=>qe,yQ:()=>Ke,uv:()=>Ye,cy:()=>Qe,W0:()=>Je,qW:()=>Ze,we:()=>et,Qi:()=>tt,ly:()=>nt,pe:()=>st,o0:()=>rt,Dl:()=>at,e6:()=>it,xJ:()=>ot,$H:()=>ut,qk:()=>lt,HZ:()=>ct,dp:()=>ht,Hm:()=>pt,_Y:()=>dt,zb:()=>ft,Sb:()=>mt,mK:()=>gt,e0:()=>yt,bV:()=>bt,xQ:()=>xt,Ph:()=>vt,oF:()=>wt,p2:()=>kt,RQ:()=>It,w3:()=>St,i5:()=>Nt,a5:()=>Tt,MR:()=>Ct,FK:()=>$t,GB:()=>Et,TQ:()=>At,L8:()=>Dt,Gc:()=>Rt,O3:()=>_t,nh:()=>Ft,YW:()=>Ot,Zj:()=>Mt,D2:()=>Lt,_t:()=>zt,bK:()=>Bt,m2:()=>Pt,_J:()=>Ut,s1:()=>Wt,Xk:()=>Vt,Tr:()=>Ht,sE:()=>Gt,MI:()=>jt,n9:()=>Xt,cW:()=>qt,wx:()=>Kt,G3:()=>Yt,kp:()=>Qt,To:()=>Jt,Qv:()=>Zt,Ru:()=>en,h8:()=>tn,eB:()=>nn,b9:()=>sn,us:()=>rn,_V:()=>an,lu:()=>on});const s="Abs",r="Acos",a="Acosh",i="Add",o="AddN",u="All",l="Any",c="ArgMax",h="ArgMin",p="Asin",d="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",b="AvgPoolGrad",x="AvgPool3D",v="AvgPool3DGrad",w="BatchMatMul",k="BatchToSpaceND",I="Bincount",S="BroadcastTo",N="BroadcastArgs",T="Cast",C="Ceil",$="ClipByValue",E="Complex",A="ComplexAbs",D="Concat",R="Conv2D",_="Conv2DBackpropFilter",F="Conv2DBackpropInput",O="Conv3D",M="Conv3DBackpropFilterV2",L="Conv3DBackpropInputV2",z="Cos",B="Cosh",P="Cumsum",U="CropAndResize",W="DenseBincount",V="DepthToSpace",H="DepthwiseConv2dNative",G="DepthwiseConv2dNativeBackpropFilter",j="DepthwiseConv2dNativeBackpropInput",X="Diag",q="Dilation2D",K="Dilation2DBackpropInput",Y="Dilation2DBackpropFilter",Q="RealDiv",J="Einsum",Z="Elu",ee="EluGrad",te="Erf",ne="Equal",se="Exp",re="ExpandDims",ae="Expm1",ie="FFT",oe="Fill",ue="FlipLeftRight",le="Floor",ce="FloorDiv",he="FusedBatchNorm",pe="GatherV2",de="GatherNd",fe="Greater",me="GreaterEqual",ge="Identity",ye="IFFT",be="Imag",xe="IsFinite",ve="IsInf",we="IsNan",ke="LeakyRelu",Ie="Less",Se="LessEqual",Ne="LinSpace",Te="Log",Ce="Log1p",$e="LogicalAnd",Ee="LogicalNot",Ae="LogicalOr",De="LogSoftmax",Re="LRN",_e="LRNGrad",Fe="Max",Oe="Maximum",Me="MaxPool",Le="MaxPoolGrad",ze="MaxPool3D",Be="MaxPool3DGrad",Pe="MaxPoolWithArgmax",Ue="Mean",We="Min",Ve="Minimum",He="MirrorPad",Ge="Mod",je="Multinomial",Xe="Multiply",qe="Neg",Ke="NotEqual",Ye="NonMaxSuppressionV3",Qe="NonMaxSuppressionV4",Je="NonMaxSuppressionV5",Ze="OnesLike",et="OneHot",tt="Pack",nt="PadV2",st="Pow",rt="Prelu",at="Prod",it="Range",ot="Real",ut="Reciprocal",lt="Relu",ct="Reshape",ht="ResizeNearestNeighbor",pt="ResizeNearestNeighborGrad",dt="ResizeBilinear",ft="ResizeBilinearGrad",mt="Relu6",gt="Reverse",yt="Round",bt="Rsqrt",xt="ScatterNd",vt="Select",wt="Selu",kt="Slice",It="Sin",St="Sinh",Nt="Sign",Tt="Sigmoid",Ct="Softplus",$t="Sqrt",Et="Sum",At="SpaceToBatchND",Dt="SplitV",Rt="Softmax",_t="SparseFillEmptyRows",Ft="SparseReshape",Ot="SparseSegmentMean",Mt="SparseSegmentSum",Lt="SparseToDense",zt="SquaredDifference",Bt="Square",Pt="StridedSlice",Ut="StringNGrams",Wt="StringSplit",Vt="StringToHashBucketFast",Ht="Sub",Gt="Tan",jt="Tanh",Xt="Tile",qt="TopK",Kt="Transform",Yt="Transpose",Qt="Unique",Jt="Unpack",Zt="UnsortedSegmentSum",en="ZerosLike",tn="Step",nn="FromPixels",sn="RotateWithOffset",rn="_FusedMatMul",an="FusedConv2D",on="FusedDepthwiseConv2D"},6151:(e,t,n)=>{"use strict";n.d(t,{pI:()=>u,uk:()=>l,tr:()=>c,wC:()=>h,Li:()=>p});var s=n(2885),r=n(5938),a=n(4706);const i=(0,r.R)("kernelRegistry",(()=>new Map)),o=(0,r.R)("gradRegistry",(()=>new Map));function u(e,t){const n=d(e,t);return i.get(n)}function l(e){return o.get(e)}function c(e){const t=i.entries(),n=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[a,i]=r,[o]=a.split("_");o===e&&n.push(i)}return n}function h(e){const{kernelName:t,backendName:n}=e,s=d(t,n);i.has(s)&&a.Z(`The kernel '${t}' for backend '${n}' is already registered`),i.set(s,e)}function p(e){const{kernelName:t}=e;o.has(t)&&(0,s.OB)().getBool("DEBUG")&&a.Z(`Overriding the gradient for '${t}'`),o.set(t,e)}function d(e,t){return`${t}_${e}`}},4706:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r,c:()=>a});var s=n(2885);function r(...e){(0,s.OB)().getBool("IS_TEST")||(0,s.OB)().getBool("PROD")||console.warn(...e)}function a(...e){(0,s.OB)().getBool("IS_TEST")||(0,s.OB)().getBool("PROD")||console.log(...e)}},6235:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({abs_:function(e){const t=(0,a._1)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return s.BV.runKernel(r.yj,e)}{const e={x:t};return s.BV.runKernel(r.SY,e)}}})},7839:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({acos_:function(e){const t={x:(0,a._1)(e,"x","acos")};return s.BV.runKernel(r.VG,t)}})},1470:(e,t,n)=>{"use strict";n.d(t,{_:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({acosh_:function(e){const t={x:(0,a._1)(e,"x","acosh")};return s.BV.runKernel(r.Sp,t)}})},6407:(e,t,n)=>{"use strict";n.d(t,{I:()=>o});var s=n(7097),r=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({add_:function(e,t){let n=(0,i._1)(e,"a","add"),o=(0,i._1)(t,"b","add");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return s.BV.runKernel(r.mm,u)}})},781:(e,t,n)=>{"use strict";n.d(t,{$:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({all_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","all","bool")},o={axis:t,keepDims:n};return s.BV.runKernel(r.oT,i,o)}})},2998:(e,t,n)=>{"use strict";n.d(t,{Y:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({any_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","any","bool")},o={axis:t,keepDims:n};return s.BV.runKernel(r.IK,i,o)}})},47:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({argMax_:function(e,t=0){const n={x:(0,a._1)(e,"x","argMax")},i={axis:t};return s.BV.runKernel(r.sJ,n,i)}})},7394:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({argMin_:function(e,t=0){const n={x:(0,a._1)(e,"x","argMin")},i={axis:t};return s.BV.runKernel(r.aJ,n,i)}})},2421:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({asin_:function(e){const t={x:(0,a._1)(e,"x","asin")};return s.BV.runKernel(r.M2,t)}})},1891:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({asinh_:function(e){const t={x:(0,a._1)(e,"x","asinh")};return s.BV.runKernel(r.qw,t)}})},7037:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({atan_:function(e){const t={x:(0,a._1)(e,"x","atan")};return s.BV.runKernel(r.jM,t)}})},9812:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var s=n(7097),r=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({atan2_:function(e,t){let n=(0,i._1)(e,"a","atan2"),o=(0,i._1)(t,"b","atan2");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return s.BV.runKernel(r.QC,u)}})},369:(e,t,n)=>{"use strict";n.d(t,{C:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({atanh_:function(e){const t={x:(0,a._1)(e,"x","atanh")};return s.BV.runKernel(r.Oy,t)}})},5176:(e,t,n)=>{"use strict";n.d(t,{w:()=>h});var s=n(7097),r=n(9121),a=n(3740),i=n(569),o=n(2271),u=n(2582),l=n(2668),c=n(4968);const h=(0,l.op)({avgPool_:function(e,t,n,l,h){const p=(0,a._1)(e,"x","avgPool","float32");i.hu(u.jT(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let d=p,f=!1;3===p.rank&&(f=!0,d=(0,c.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.hu(4===d.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${d.rank}.`)),null!=h&&i.hu(i.GN(l),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${h} but got pad ${l}.`));const m={x:d},g={filterSize:t,strides:n,pad:l,dimRoundingMode:h};let y=s.BV.runKernel(r.Jh,m,g);return y=(0,o.p)(y,p.dtype),f?(0,c.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},1749:(e,t,n)=>{"use strict";n.d(t,{u:()=>c});var s=n(7097),r=n(9121),a=n(3740),i=n(569),o=n(2271),u=n(2668),l=n(4968);const c=(0,u.op)({avgPool3d_:function(e,t,n,u,c,h="NDHWC"){const p=(0,a._1)(e,"x","avgPool3d","float32");let d=p,f=!1;4===p.rank&&(f=!0,d=(0,l.X)(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),i.hu(5===d.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${d.rank}.`)),i.hu("NDHWC"===h,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${h}`)),null!=c&&i.hu(i.GN(u),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${c} but got pad ${u}.`));const m={x:d},g={filterSize:t,strides:n,pad:u,dimRoundingMode:c,dataFormat:h};let y=s.BV.runKernel(r._k,m,g);return y=(0,o.p)(y,d.dtype),f?(0,l.X)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}})},3591:(e,t,n)=>{"use strict";n.d(t,{YB:()=>r,Vh:()=>a,kz:()=>i,rv:()=>o,lB:()=>u,Q3:()=>l,LJ:()=>c,sY:()=>h});var s=n(569);function r(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function a(e,t,n){const s=e.length+t.length,r=[];let a=0,i=0;for(let o=0;o<s;o++)-1===n.indexOf(o)?r.push(e[a++]):r.push(t[i++]);return r}function i(e,t){const n=[],s=e.length;for(let r=0;r<s;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function o(e,t){return a(e,t.map((e=>1)),t)}function u(e,t,n){s.hu(r(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function l(e,t){if(r(e,t))return null;const n=[];for(let s=0;s<t;++s)-1===e.indexOf(s)&&n.push(s);return e.forEach((e=>n.push(e))),n}function c(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function h(e,t){const n=[];for(let s=t-e;s<t;++s)n.push(s);return n}},8441:(e,t,n)=>{"use strict";n.d(t,{E:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({batchToSpaceND_:function(e,t,n){const o=(0,a._1)(e,"x","batchToSpaceND"),u=t.reduce(((e,t)=>e*t));i.hu(o.rank>=1+t.length,(()=>`input rank is ${o.rank} but should be > than blockShape.length ${t.length}`)),i.hu(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),i.hu(o.shape[0]%u==0,(()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${u}`));const l={x:o},c={blockShape:t,crops:n};return s.BV.runKernel(r.zw,l,c)}})},7505:(e,t,n)=>{"use strict";n.d(t,{t:()=>u});var s=n(7097),r=n(9121),a=n(3740),i=n(569),o=n(4968);const u=(0,n(2668).op)({batchNorm_:function(e,t,n,u,l,c){null==c&&(c=.001);const h=(0,a._1)(e,"x","batchNorm"),p=(0,a._1)(t,"mean","batchNorm"),d=(0,a._1)(n,"variance","batchNorm");let f,m;null!=l&&(f=(0,a._1)(l,"scale","batchNorm")),null!=u&&(m=(0,a._1)(u,"offset","batchNorm")),i.hu(p.rank===d.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),i.hu(null==m||p.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),i.hu(null==f||p.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const g=function(e){let t;return t=0===e.rank||1===e.rank?(0,o.X)(e,[1,1,1,e.size]):2===e.rank?(0,o.X)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,o.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(h),y={x:g,scale:f,offset:m,mean:p,variance:d},b={varianceEpsilon:c},x=s.BV.runKernel(r.sH,y,b);return(0,o.X)(x,h.shape)}})},3865:(e,t,n)=>{"use strict";n.d(t,{y:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({bincount_:function(e,t,n){const o=(0,a._1)(e,"x","bincount"),u=(0,a._1)(t,"weights","bincount");i.hu("int32"===o.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${o.dtype}`)),i.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),i.hu(u.size===o.size||0===u.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${o.shape}, weights shape: ${u.shape}.`));const l={x:o,weights:u},c={size:n};return s.BV.runKernel(r.zv,l,c)}})},8247:(e,t,n)=>{"use strict";n.d(t,{U:()=>l});var s=n(7097),r=n(9121),a=n(3740),i=n(8723),o=n(2668),u=n(4968);const l=(0,o.op)({broadcastTo_:function(e,t){let n=(0,a._1)(e,"broadcastTo","x");const o=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,u.X)(n,e)}const l=n.shape,c=Array.from(t);for(let e=t.length-1;e>=0;e--)if(l[e]===t[e])c[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${t}].`);if(0===c.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,i.d)(n);const h={x:n},p={reps:c};return s.BV.runKernel(r.n9,h,p)}})},2200:(e,t,n)=>{"use strict";function s(e,t){const n=e.length,s=[];for(let r=0;r<n;r++){const a=n-1-r,i=e[a]||1;(t[t.length-1-r]||1)>1&&1===i&&s.unshift(a)}return s}function r(e,t){const n=[];for(let s=0;s<t.length;s++){const r=e[e.length-s-1],a=t.length-s-1,i=t[a];(null==r||1===r&&i>1)&&n.unshift(a)}return n}function a(e,t){const n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let s=e[e.length-r-1];null==s&&(s=1);let a=t[t.length-r-1];if(null==a&&(a=1),1===s)n.unshift(a);else if(1===a)n.unshift(s);else{if(s!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(s)}}return n}n.d(t,{XF:()=>s,RR:()=>r,$N:()=>a})},2657:(e,t,n)=>{"use strict";n.d(t,{f:()=>a});var s=n(4077),r=n(569);function a(e,t="float32",n){return t=t||"float32",r.Mu(e),new s.YD(e,t,n)}},2271:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({cast_:function(e,t){const n=(0,a._1)(e,"x","cast");if(!i.LP(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const o={x:n},u={dtype:t};return s.BV.runKernel(r.RF,o,u)}})},6825:(e,t,n)=>{"use strict";n.d(t,{m:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({ceil_:function(e){const t={x:(0,a._1)(e,"x","ceil")};return s.BV.runKernel(r.gJ,t)}})},2279:(e,t,n)=>{"use strict";n.d(t,{i:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({clipByValue_:function(e,t,n){const o=(0,a._1)(e,"x","clipByValue");i.hu(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const u={x:o},l={clipValueMin:t,clipValueMax:n};return s.BV.runKernel(r.xn,u,l)}})},8723:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({clone_:function(e){const t={x:(0,a._1)(e,"x","clone","string_or_numeric")};return s.BV.runKernel(r.iJ,t)}})},1661:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({complex_:function(e,t){const n=(0,a._1)(e,"real","complex"),o=(0,a._1)(t,"imag","complex");i.k5(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`);const u={real:n,imag:o};return s.BV.runKernel(r.Zz,u)}})},6884:(e,t,n)=>{"use strict";n.d(t,{z:()=>u});var s=n(7097),r=n(9121),a=n(3740),i=n(569),o=n(8723);const u=(0,n(2668).op)({concat_:function(e,t=0){(0,i.hu)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,a.sI)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return(0,o.d)(n[0]);const u=n,l={axis:t};return s.BV.runKernel(r.Eh,u,l)}})},1355:(e,t,n)=>{"use strict";n.d(t,{P:()=>l});var s=n(3740),r=n(569),a=n(4794),i=n(2582),o=n(2668),u=n(4968);const l=(0,o.op)({conv1d_:function(e,t,n,o,l="NWC",c=1,h){const p=(0,s._1)(e,"x","conv1d"),d=(0,s._1)(t,"filter","conv1d");let f=p,m=!1;2===p.rank&&(m=!0,f=(0,u.X)(p,[1,p.shape[0],p.shape[1]])),r.hu(3===f.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`)),r.hu(3===d.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${d.rank}.`)),null!=h&&r.hu(r.GN(o),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${h} but got pad ${o}.`)),r.hu(f.shape[2]===d.shape[1],(()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${d.shape[1]}.`)),r.hu(i.jT(n,c),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${c}'`)),r.hu("NWC"===l,(()=>`Error in conv1d: got dataFormat of ${l} but only NWC is currently supported.`));const g=(0,u.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),y=(0,u.X)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),b=[1,n],x=[1,c],v=(0,a.T)(y,g,b,o,"NHWC",x,h);return m?(0,u.X)(v,[v.shape[2],v.shape[3]]):(0,u.X)(v,[v.shape[0],v.shape[2],v.shape[3]])}})},4794:(e,t,n)=>{"use strict";n.d(t,{T:()=>c});var s=n(7097),r=n(9121),a=n(3740),i=n(569),o=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({conv2d_:function(e,t,n,u,c="NHWC",h=[1,1],p){const d=(0,a._1)(e,"x","conv2d"),f=(0,a._1)(t,"filter","conv2d");let m=d,g=!1;3===d.rank&&(g=!0,m=(0,l.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.hu(4===m.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`)),i.hu(4===f.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${f.rank}.`)),null!=p&&i.hu(i.GN(u),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${p} but got pad ${u}.`));const y="NHWC"===c?m.shape[3]:m.shape[1];i.hu(y===f.shape[2],(()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${f.shape[2]}.`)),i.hu(o.jT(n,h),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${h}'`));const b={x:m,filter:f},x={strides:n,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p},v=s.BV.runKernel(r.mh,b,x);return g?(0,l.X)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},6013:(e,t,n)=>{"use strict";n.d(t,{p:()=>u});var s=n(7097),r=n(9121),a=n(569),i=n(2668),o=n(4968);const u=(0,i.op)({conv2DBackpropFilter_:function(e,t,n,i,u,l="NHWC",c){let h=e;3===e.rank&&(h=(0,o.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let p=t;3===p.rank&&(p=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),a.hu(4===h.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${h.shape}.`)),a.hu(4===p.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${p.shape}.`)),a.hu(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const d="NHWC"===l?h.shape[3]:h.shape[1],f="NHWC"===l?p.shape[3]:p.shape[1];a.hu(d===n[2],(()=>`Error in conv2dDerFilter: depth of input ${d}) must match input depth in filter (${n[2]}.`)),a.hu(f===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${f}) must match output depth for filter (${n[3]}).`)),null!=c&&a.hu(a.GN(u),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${c} but got pad ${u}.`));const m={x:h,dy:p},g={strides:i,pad:u,dataFormat:l,dimRoundingMode:c,filterShape:n};return s.BV.runKernel(r.wU,m,g)}})},9832:(e,t,n)=>{"use strict";n.d(t,{_:()=>u});var s=n(7097),r=n(9121),a=n(569),i=n(2668),o=n(4968);const u=(0,i.op)({conv2DBackpropInput_:function(e,t,n,i,u,l="NHWC",c){a.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let h=e,p=t,d=!1;3===t.rank&&(d=!0,p=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),h=[1,e[0],e[1],e[2]]),a.hu(4===h.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${h.length}.`)),a.hu(4===p.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${p.rank}`)),a.hu(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const f="NHWC"===l?h[3]:h[1],m="NHWC"===l?p.shape[3]:p.shape[1];a.hu(f===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${f}) must match input depth for filter ${n.shape[2]}.`)),a.hu(m===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${n.shape[3]}.`)),null!=c&&a.hu(a.GN(u),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${c} but got pad ${u}.`));const g={dy:p,filter:n},y={strides:i,pad:u,dataFormat:l,dimRoundingMode:c,inputShape:h},b=s.BV.runKernel(r.wm,g,y);return d?(0,o.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},1405:(e,t,n)=>{"use strict";n.d(t,{b:()=>a});var s=n(3740),r=n(9832);const a=(0,n(2668).op)({conv2dTranspose_:function(e,t,n,a,i,o){const u=(0,s._1)(e,"x","conv2dTranspose"),l=(0,s._1)(t,"filter","conv2dTranspose");return(0,r._)(n,u,l,a,i,"NHWC",o)}})},473:(e,t,n)=>{"use strict";n.d(t,{p:()=>c});var s=n(7097),r=n(9121),a=n(3740),i=n(569),o=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({conv3d_:function(e,t,n,u,c="NDHWC",h=[1,1,1]){const p=(0,a._1)(e,"x","conv3d"),d=(0,a._1)(t,"filter","conv3d");let f=p,m=!1;4===p.rank&&(m=!0,f=(0,l.X)(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),i.hu(5===f.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${f.rank}.`)),i.hu(5===d.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${d.rank}.`)),i.hu(f.shape[4]===d.shape[3],(()=>`Error in conv3d: depth of input (${f.shape[4]}) must match input depth for filter ${d.shape[3]}.`)),i.hu((0,o.jT)(n,h),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${h}'`)),i.hu("NDHWC"===c,(()=>`Error in conv3d: got dataFormat of ${c} but only NDHWC is currently supported.`));const g={x:f,filter:d},y={strides:n,pad:u,dataFormat:c,dilations:h},b=s.BV.runKernel(r.x1,g,y);return m?(0,l.X)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}})},7594:(e,t,n)=>{"use strict";n.d(t,{_:()=>u});var s=n(7097),r=n(9121),a=n(569),i=n(2668),o=n(4968);const u=(0,i.op)({conv3DBackpropInput_:function(e,t,n,i,u){a.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let l=e,c=t,h=!1;4===t.rank&&(h=!0,c=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),l=[1,e[0],e[1],e[2],e[3]]);const p=l[4],d=c.shape[4];a.hu(5===l.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${l.length}.`)),a.hu(5===c.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${c.rank}`)),a.hu(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),a.hu(p===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${p}) must match input depth for filter ${n.shape[3]}.`)),a.hu(d===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[4]}.`));const f={dy:c,filter:n},m={pad:u,strides:i,inputShape:l},g=s.BV.runKernel(r.ik,f,m);return h?(0,o.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},2582:(e,t,n)=>{"use strict";function s(e,t,n,s,r="NHWC",a){return i(e,[...t,e[3]],n,a,s,null,null,m(r))}function r(e,t,n,s,r,a,o="channelsLast"){const[u,c]=l(t);let h;if("channelsLast"===o)h=[u,c,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);h=[u,c,e[1],e[1]]}return i(e,h,n,s,r,a,!1,o)}function a(e,t,n,s,r,a,i="NDHWC"){const[u,l,h]=c(t);let p,d;if("NDHWC"===i)d="channelsLast",p=[u,l,h,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);d="channelsFirst",p=[u,l,h,e[1],e[1]]}return o(e,p,n,s,r,!1,d,a)}function i(e,t,n,s,r,a,i=!1,o="channelsLast"){let[c,d,f,m]=[-1,-1,-1,-1];if("channelsLast"===o)[c,d,f,m]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[c,m,d,f]=e}const[g,y,,b]=t,[x,v]=l(n),[w,k]=l(s),I=h(g,w),S=h(y,k),{padInfo:N,outHeight:T,outWidth:C}=function(e,t,n,s,r,a,i,o,l){let c,h,d;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,s,r){null==s&&(s=u(e,t,n));const a=e[1];return[p((e[0]-t+2*s)/n+1,r),p((a-t+2*s)/n+1,r)]}([t,n],a,s,e,o);h=r[0],d=r[1]}else if("same"===e){h=Math.ceil(t/s),d=Math.ceil(n/r);const e=Math.max(0,(h-1)*s+a-t),o=Math.max(0,(d-1)*r+i-n),u=Math.floor(e/2),l=e-u,p=Math.floor(o/2);c={top:u,bottom:l,left:p,right:o-p,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((t-a+1)/s),d=Math.ceil((n-i+1)/r);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const u="channelsLast"===l?e[1][0]:e[2][0],f="channelsLast"===l?e[1][1]:e[2][1],m="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1];c={top:u,bottom:f,left:m,right:g,type:0===u&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},h=p((t-a+u+f)/s+1,o),d=p((n-i+m+g)/r+1,o)}}return{padInfo:c,outHeight:h,outWidth:d}}(r,d,f,x,v,I,S,a,o),$=i?b*m:b;let E;return"channelsFirst"===o?E=[c,$,T,C]:"channelsLast"===o&&(E=[c,T,C,$]),{batchSize:c,dataFormat:o,inHeight:d,inWidth:f,inChannels:m,outHeight:T,outWidth:C,outChannels:$,padInfo:N,strideHeight:x,strideWidth:v,filterHeight:g,filterWidth:y,effectiveFilterHeight:I,effectiveFilterWidth:S,dilationHeight:w,dilationWidth:k,inShape:e,outShape:E,filterShape:t}}function o(e,t,n,s,r,a=!1,i="channelsLast",o){let[l,d,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,d,f,m,g]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,g,d,f,m]=e}const[y,b,x,,v]=t,[w,k,I]=c(n),[S,N,T]=c(s),C=h(y,S),$=h(b,N),E=h(x,T),{padInfo:A,outDepth:D,outHeight:R,outWidth:_}=function(e,t,n,s,r,a,i,o,l,c,h){let d,f,m,g;if("number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,s,r,a){null==r&&(r=u(e,t,s));const i=e[1],o=e[2];return[p((e[0]-t+2*r)/s+1,a),p((i-t+2*r)/s+1,a),p((o-t+2*r)/s+1,a),1]}([t,n,s,1],o,0,r,e,h);f=a[0],m=a[1],g=a[2]}else if("same"===e){f=Math.ceil(t/r),m=Math.ceil(n/a),g=Math.ceil(s/i);const e=(f-1)*r+o-t,u=(m-1)*a+l-n,h=(g-1)*i+c-s,p=Math.floor(e/2),y=e-p,b=Math.floor(u/2),x=u-b,v=Math.floor(h/2);d={top:b,bottom:x,left:v,right:h-v,front:p,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},f=Math.ceil((t-o+1)/r),m=Math.ceil((n-l+1)/a),g=Math.ceil((s-c+1)/i)}return{padInfo:d,outDepth:f,outHeight:m,outWidth:g}}(r,d,f,m,w,k,I,C,$,E,o),F=a?v*g:v;let O;return"channelsFirst"===i?O=[l,F,D,R,_]:"channelsLast"===i&&(O=[l,D,R,_,F]),{batchSize:l,dataFormat:i,inDepth:d,inHeight:f,inWidth:m,inChannels:g,outDepth:D,outHeight:R,outWidth:_,outChannels:F,padInfo:A,strideDepth:w,strideHeight:k,strideWidth:I,filterDepth:y,filterHeight:b,filterWidth:x,effectiveFilterDepth:C,effectiveFilterHeight:$,effectiveFilterWidth:E,dilationDepth:S,dilationHeight:N,dilationWidth:T,inShape:e,outShape:O,filterShape:t}}function u(e,t,n,s=1){const r=h(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function l(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function c(e){return"number"==typeof e?[e,e,e]:e}function h(e,t){return t<=1?e:e+(e-1)*(t-1)}function p(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function d(e){const[t,n,s]=l(e);return 1===t&&1===n&&1===s}function f(e,t){return d(e)||d(t)}function m(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}n.d(t,{Rf:()=>s,Xw:()=>r,pl:()=>a,Ix:()=>i,jw:()=>o,aO:()=>u,I0:()=>d,jT:()=>f,sl:()=>m})},173:(e,t,n)=>{"use strict";n.d(t,{m:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({cos_:function(e){const t={x:(0,a._1)(e,"x","cos")};return s.BV.runKernel(r.mc,t)}})},2699:(e,t,n)=>{"use strict";n.d(t,{f:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({cosh_:function(e){const t={x:(0,a._1)(e,"x","cosh")};return s.BV.runKernel(r.TR,t)}})},7405:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({cumsum_:function(e,t=0,n=!1,i=!1){const o={x:(0,a._1)(e,"x","cumsum")},u={axis:t,exclusive:n,reverse:i};return s.BV.runKernel(r.iH,o,u)}})},9112:(e,t,n)=>{"use strict";n.d(t,{n:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({depthToSpace_:function(e,t,n="NHWC"){const o=(0,a._1)(e,"x","depthToSpace"),u="NHWC"===n?o.shape[1]:o.shape[2],l="NHWC"===n?o.shape[2]:o.shape[3],c="NHWC"===n?o.shape[3]:o.shape[1];i.hu(u*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${t}  for depthToSpace with input shape\n    ${o.shape}`)),i.hu(l*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${l} and ${t} for depthToSpace with input shape\n        ${o.shape}`)),i.hu(c%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${c} for depthToSpace with input shape ${o.shape}`));const h={x:o},p={blockSize:t,dataFormat:n};return s.BV.runKernel(r.T0,h,p)}})},4718:(e,t,n)=>{"use strict";n.d(t,{B:()=>l});var s=n(7097),r=n(9121),a=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({depthwiseConv2d_:function(e,t,n,o,l="NHWC",c=[1,1],h){const p=(0,a._1)(e,"x","depthwiseConv2d"),d=(0,a._1)(t,"filter","depthwiseConv2d");let f=p,m=!1;3===p.rank&&(m=!0,f=(0,u.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.hu(4===f.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),i.hu(4===d.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),i.hu(f.shape[3]===d.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null!=h&&i.hu(i.GN(o),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${h} but got pad ${o}.`));const g={x:f,filter:d},y={strides:n,pad:o,dataFormat:l,dilations:c,dimRoundingMode:h},b=s.BV.runKernel(r.ci,g,y);return m?(0,u.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},8098:(e,t,n)=>{"use strict";n.d(t,{z:()=>o});var s=n(7097),r=n(9121),a=n(2668),i=n(4968);const o=(0,a.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,o,u=[1,1],l){let c=e;3===e.rank&&(c=(0,i.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let h=t;3===h.rank&&(h=(0,i.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const p={x:c,dy:h},d={strides:a,pad:o,dimRoundingMode:l,dilations:u,filterShape:n};return s.BV.runKernel(r.sL,p,d)}})},4375:(e,t,n)=>{"use strict";n.d(t,{v:()=>o});var s=n(7097),r=n(9121),a=n(2668),i=n(4968);const o=(0,a.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,o,u=[1,1],l){let c=t,h=!1;3===t.rank&&(h=!0,c=(0,i.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const p={dy:c,filter:n},d={strides:a,pad:o,dimRoundingMode:l,dilations:u,inputShape:e},f=s.BV.runKernel(r.y7,p,d);return h?(0,i.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},557:(e,t,n)=>{"use strict";n.d(t,{W:()=>l});var s=n(7097),r=n(9121),a=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({dilation2d_:function(e,t,n,o,l=[1,1],c="NHWC"){const h=(0,a._1)(e,"x","dilation2d"),p=(0,a._1)(t,"filter","dilation2d");i.hu(3===h.rank||4===h.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${h.rank}.`)),i.hu(3===p.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${p.rank}.`)),i.hu("NHWC"===c,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${c}`));let d=h,f=!1;3===h.rank&&(d=(0,u.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]]),f=!0);const m={x:d,filter:p},g={strides:n,pad:o,dilations:l},y=s.BV.runKernel(r.p4,m,g);return f?(0,u.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},1274:(e,t,n)=>{"use strict";n.d(t,{h:()=>u});var s=n(7097),r=n(9121),a=n(747),i=n(3740),o=n(9165);const u=(0,n(2668).op)({div_:function(e,t){let n=(0,i._1)(e,"a","div"),u=(0,i._1)(t,"b","div");if([n,u]=(0,a.makeTypesMatch)(n,u),"int32"===n.dtype&&"int32"===u.dtype)return(0,o.q)(n,u);const l={a:n,b:u};return s.BV.runKernel(r.oH,l,{})}})},9322:(e,t,n)=>{"use strict";n.d(t,{N:()=>c});var s=n(747),r=n(3740),a=n(1274),i=n(6477),o=n(2668),u=n(5912),l=n(6577);const c=(0,o.op)({divNoNan_:function(e,t){let n=(0,r._1)(e,"a","div"),o=(0,r._1)(t,"b","div");[n,o]=(0,s.makeTypesMatch)(n,o);const c=(0,a.h)(n,o),h=(0,l.P)(c),p=(0,i.D)(o,h);return(0,u.a)(p,h,c)}})},3233:(e,t,n)=>{"use strict";n.d(t,{p:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({elu_:function(e){const t={x:(0,a._1)(e,"x","elu")};return s.BV.runKernel(r.SX,t)}})},6477:(e,t,n)=>{"use strict";n.d(t,{D:()=>u});var s=n(7097),r=n(9121),a=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({equal_:function(e,t){let n=(0,i._1)(e,"a","equal","string_or_numeric"),u=(0,i._1)(t,"b","equal","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return s.BV.runKernel(r.hd,l)}})},4650:(e,t,n)=>{"use strict";n.d(t,{q:()=>u});var s=n(7097),r=n(9121),a=n(3740),i=n(569),o=n(2271);const u=(0,n(2668).op)({erf_:function(e){let t=(0,a._1)(e,"x","erf");i.hu("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,o.p)(t,"float32"));const n={x:t};return s.BV.runKernel(r.Om,n)}})},4842:(e,t,n)=>{"use strict";n.d(t,{Q:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({exp_:function(e){const t={x:(0,a._1)(e,"x","exp")};return s.BV.runKernel(r.NE,t)}})},1300:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({expandDims_:function(e,t=0){const n=(0,a._1)(e,"x","expandDims","string_or_numeric");i.hu(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const o={input:n},u={dim:t};return s.BV.runKernel(r.YF,o,u)}})},3426:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({expm1_:function(e){const t={x:(0,a._1)(e,"x","expm1")};return s.BV.runKernel(r.Y0,t)}})},4006:(e,t,n)=>{"use strict";n.d(t,{h:()=>a});var s=n(7097),r=n(9121);function a(e,t,n){const a={shape:e,value:t,dtype:n};return s.BV.runKernel(r.de,{},a)}},6943:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({floor_:function(e){const t={x:(0,a._1)(e,"x","floor")};return s.BV.runKernel(r.OR,t)}})},9165:(e,t,n)=>{"use strict";n.d(t,{q:()=>o});var s=n(7097),r=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({floorDiv_:function(e,t){let n=(0,i._1)(e,"a","floorDiv"),o=(0,i._1)(t,"b","floorDiv");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return s.BV.runKernel(r.je,u)}})},4624:(e,t,n)=>{"use strict";n.r(t),n.d(t,{conv2d:()=>b,depthwiseConv2d:()=>k,matMul:()=>S});var s=n(7097),r=n(633),a=n(9121),i=n(747),o=n(3740),u=n(569),l=n(6407),c=n(2200),h=n(4794),p=n(6013),d=n(9832),f=n(2582),m=n(9323),g=n(2668),y=n(4968);const b=(0,g.op)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:g,dataFormat:b="NHWC",dilations:x=[1,1],dimRoundingMode:v,bias:w,activation:k="linear",preluActivationWeights:I,leakyreluAlpha:S}){if(k=k||"linear",!1===(0,m.uy)(s.BV.state.gradientDepth,k)){let s=(0,h.T)(e,t,n,g,b,x,v);return null!=w&&(s=(0,l.I)(s,w)),(0,m.QH)(s,k,I,S)}const N=(0,o._1)(e,"x","conv2d"),T=(0,o._1)(t,"filter","conv2d");let C=N,$=!1;3===N.rank&&($=!0,C=(0,y.X)(N,[1,N.shape[0],N.shape[1],N.shape[2]])),u.hu(4===C.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${C.rank}.`)),u.hu(4===T.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${T.rank}.`)),null!=v&&u.hu(u.GN(g),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${v} but got pad ${g}.`)),u.hu(C.shape[3]===T.shape[2],(()=>`Error in conv2d: depth of input (${C.shape[3]}) must match input depth for filter ${T.shape[2]}.`)),u.hu(f.jT(n,x),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${x}'`)),u.hu("NHWC"===b,(()=>`Error in conv2d: got dataFormat of ${b} but only NHWC is currently supported.`));const E=f.Ix(C.shape,T.shape,n,x,g,v);let A,D;null!=w&&(A=(0,o._1)(w,"bias","fused conv2d"),[A]=(0,i.makeTypesMatch)(A,N),c.$N(E.outShape,A.shape)),null!=I&&(D=(0,o._1)(I,"prelu weights","fused conv2d"));const R=(e,t)=>{const[s,r,a,i]=t,o=(0,m.Fr)(e,a,k);u.hu(f.I0(x),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${x}'`));const l=[(0,d._)(r.shape,o,s,n,g),(0,p.p)(r,o,s.shape,n,g)];if(null!=i){const e=(0,m.pf)(i,o);l.push(e)}return l},_={x:C,filter:T,bias:A,preluActivationWeights:D},F={strides:n,pad:g,dataFormat:b,dilations:x,dimRoundingMode:v,activation:k,leakyreluAlpha:S};if(null==w){const e=(0,r.cb)(((e,t,n)=>{let r=s.BV.runKernel(a._V,_,F);return n([t,e,r]),$&&(r=(0,y.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:R}}));return e(C,T)}{const e=(0,r.cb)(((e,t,n,r)=>{let i=s.BV.runKernel(a._V,_,F);return r([t,e,i,n]),$&&(i=(0,y.X)(i,[i.shape[1],i.shape[2],i.shape[3]])),{value:i,gradFunc:R}}));return e(C,T,A)}}});var x=n(4718),v=n(8098),w=n(4375);const k=(0,g.op)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:h,dataFormat:p="NHWC",dilations:d=[1,1],dimRoundingMode:g,bias:b,activation:k="linear",preluActivationWeights:I,leakyreluAlpha:S}){if(!1===(0,m.uy)(s.BV.state.gradientDepth,k)){let s=(0,x.B)(e,t,n,h,p,d,g);return null!=b&&(s=(0,l.I)(s,b)),(0,m.QH)(s,k,I,S)}const N=(0,o._1)(e,"x","depthwiseConv2d"),T=(0,o._1)(t,"filter","depthwiseConv2d");let C=N,$=!1;3===N.rank&&($=!0,C=(0,y.X)(N,[1,N.shape[0],N.shape[1],N.shape[2]])),u.hu(4===C.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${C.rank}.`)),u.hu(4===T.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${T.rank}.`)),u.hu(C.shape[3]===T.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${C.shape[3]}) must match the inChannels dimension in filter ${T.shape[2]}.`)),null==d&&(d=[1,1]),u.hu(f.jT(n,d),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`)),null!=g&&u.hu(u.GN(h),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${g} but got pad ${h}.`));const E=f.Ix(C.shape,T.shape,n,d,h,g,!0);let A,D;null!=b&&(A=(0,o._1)(b,"bias","fused conv2d"),[A]=(0,i.makeTypesMatch)(A,N),c.$N(E.outShape,A.shape)),null!=I&&(D=(0,o._1)(I,"prelu weights","fused depthwiseConv2d"));const R=(e,t)=>{u.hu(f.I0(d),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${d}'`));const[s,r,a,i]=t,o=(0,m.Fr)(e,a,k),l=(0,w.v)(r.shape,o,s,n,h,d,g),c=(0,v.z)(r,o,s.shape,n,h,d,g);return null!=i?[l,c,(0,m.pf)(A,o)]:[l,c]},_={x:C,filter:T,bias:A,preluActivationWeights:D},F={strides:n,pad:h,dataFormat:p,dilations:d,dimRoundingMode:g,activation:k,leakyreluAlpha:S};if(null==b){const e=(0,r.cb)(((e,t,n)=>{let r=s.BV.runKernel(a.lu,_,F);return n([t,e,r]),$&&(r=(0,y.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:R}}));return e(C,T)}{const e=(0,r.cb)(((e,t,n,r)=>{let i=s.BV.runKernel(a.lu,_,F);return r([t,e,i,n]),$&&(i=(0,y.X)(i,[i.shape[1],i.shape[2],i.shape[3]])),{value:i,gradFunc:R}}));return e(C,T,A)}}});var I=n(8687);const S=(0,g.op)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:h=!1,bias:p,activation:d="linear",preluActivationWeights:f,leakyreluAlpha:g}){if(!1===(0,m.uy)(s.BV.state.gradientDepth,d)){let s=(0,I.O)(e,t,n,h);return null!=p&&(s=(0,l.I)(s,p)),(0,m.QH)(s,d,f,g)}let b=(0,o._1)(e,"a","fused matMul"),x=(0,o._1)(t,"b","fused matMul");[b,x]=(0,i.makeTypesMatch)(b,x);const v=n?b.shape[b.rank-2]:b.shape[b.rank-1],w=h?x.shape[x.rank-1]:x.shape[x.rank-2],k=n?b.shape[b.rank-1]:b.shape[b.rank-2],S=h?x.shape[x.rank-2]:x.shape[x.rank-1],N=b.shape.slice(0,-2),T=x.shape.slice(0,-2),C=u.NA(N),$=u.NA(T);u.hu(b.rank>=2&&x.rank>=2&&b.rank===x.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${b.rank} and ${x.rank}.`)),u.hu(u.cO(N,T),(()=>`Error in fused matMul: outer dimensions (${N}) and (${T}) of Tensors with shapes ${b.shape} and ${x.shape} must match.`)),u.hu(v===w,(()=>`Error in fused matMul: inner shapes (${v}) and (${w}) of Tensors with shapes ${b.shape} and ${x.shape} and transposeA=${n} and transposeB=${h} must match.`));const E=b.shape.slice(0,-2).concat([k,S]),A=n?(0,y.X)(b,[C,v,k]):(0,y.X)(b,[C,k,v]),D=h?(0,y.X)(x,[$,S,w]):(0,y.X)(x,[$,w,S]);let R,_;null!=p&&(R=(0,o._1)(p,"bias","fused matMul"),[R]=(0,i.makeTypesMatch)(R,b),c.$N(E,R.shape)),null!=f&&(_=(0,o._1)(f,"prelu weights","fused matMul"));const F=(e,t)=>{const[s,r,a,i]=t,o=(0,m.Fr)((0,y.X)(e,a.shape),a,d);let u,l;return n||h?!n&&h?(u=(0,I.O)(o,r,!1,!1),l=(0,I.O)(o,s,!0,!1)):n&&!h?(u=(0,I.O)(r,o,!1,!0),l=(0,I.O)(s,o,!1,!1)):(u=(0,I.O)(r,o,!0,!0),l=(0,I.O)(o,s,!0,!0)):(u=(0,I.O)(o,r,!1,!0),l=(0,I.O)(s,o,!0,!1)),null!=p?[u,l,(0,m.pf)(i,o)]:[u,l]},O={a:A,b:D,bias:R,preluActivationWeights:_},M={transposeA:n,transposeB:h,activation:d,leakyreluAlpha:g};if(null==p){const e=(0,r.cb)(((e,t,n)=>{const r=s.BV.runKernel(a.us,O,M);return n([e,t,r]),{value:(0,y.X)(r,E),gradFunc:F}}));return e(A,D)}{const e=(0,r.cb)(((e,t,n,r)=>{const i=s.BV.runKernel(a.us,O,M);return r([e,t,i,n]),{value:(0,y.X)(i,E),gradFunc:F}}));return e(A,D,R)}}})},9323:(e,t,n)=>{"use strict";n.d(t,{Fr:()=>f,pf:()=>m,QH:()=>g,uy:()=>y});var s=n(2200),r=n(3233),a=n(9133),i=n(4841),o=n(8151),u=n(7409),l=n(3582),c=n(4968),h=n(625),p=n(1901),d=n(5475);function f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,i.d)(e,(0,p.N)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function m(e,t){let n=t;const r=s.RR(e.shape,t.shape);return r.length>0&&(n=(0,d.S)(n,r)),(0,c.X)(n,e.shape)}function g(e,t,n,s){if("linear"===t)return e;if("relu"===t)return(0,u.U)(e);if("elu"===t)return(0,r.p)(e);if("relu6"===t)return(0,l.b)(e);if("prelu"===t)return(0,o.A)(e,n);if("leakyrelu"===t)return(0,a.h)(e,s);if("sigmoid"===t)return(0,h.X)(e);throw new Error(`Unknown fused activation ${t}.`)}const y=(e,t)=>!(e>0)||"linear"===t},4926:(e,t,n)=>{"use strict";n.d(t,{I:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({gather_:function(e,t,n=0,i=0){const o={x:(0,a._1)(e,"x","gather"),indices:(0,a._1)(t,"indices","gather","int32")},u={axis:n,batchDims:i};return s.BV.runKernel(r.qi,o,u)}})},636:(e,t,n)=>{"use strict";n.d(t,{p:()=>u});var s=n(7097),r=n(9121),a=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({greater_:function(e,t){let n=(0,i._1)(e,"a","greater","string_or_numeric"),u=(0,i._1)(t,"b","greater","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return s.BV.runKernel(r.iZ,l)}})},7630:(e,t,n)=>{"use strict";n.d(t,{b:()=>u});var s=n(7097),r=n(9121),a=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({greaterEqual_:function(e,t){let n=(0,i._1)(e,"a","greaterEqual","string_or_numeric"),u=(0,i._1)(t,"b","greaterEqual","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return s.BV.runKernel(r.Ac,l)}})},4386:(e,t,n)=>{"use strict";n.d(t,{a:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({imag_:function(e){const t={input:(0,a._1)(e,"input","imag")};return s.BV.runKernel(r.J_,t)}})},3305:(e,t,n)=>{"use strict";n.d(t,{I:()=>l});var s=n(7097),r=n(9121),a=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({resizeBilinear_:function(e,t,n=!1,o=!1){const l=(0,a._1)(e,"images","resizeBilinear");i.hu(3===l.rank||4===l.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${l.rank}.`)),i.hu(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),i.hu(!1===o||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let c=l,h=!1;3===l.rank&&(h=!0,c=(0,u.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,p={images:c},d={alignCorners:n,halfPixelCenters:o,size:t},f=s.BV.runKernel(r._Y,p,d);return h?(0,u.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},5098:(e,t,n)=>{"use strict";n.d(t,{j:()=>l});var s=n(7097),r=n(9121),a=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({resizeNearestNeighbor_:function(e,t,n=!1,o=!1){const l=(0,a._1)(e,"images","resizeNearestNeighbor");i.hu(3===l.rank||4===l.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${l.rank}.`)),i.hu(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),i.hu("float32"===l.dtype||"int32"===l.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),i.hu(!1===o||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let c=l,h=!1;3===l.rank&&(h=!0,c=(0,u.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,p={images:c},d={alignCorners:n,halfPixelCenters:o,size:t},f=s.BV.runKernel(r.dp,p,d);return h?(0,u.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},6230:(e,t,n)=>{"use strict";n.d(t,{i:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({isNaN_:function(e){const t={x:(0,a._1)(e,"x","isNaN")};return s.BV.runKernel(r.r7,t)}})},9133:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({leakyRelu_:function(e,t=.2){const n={x:(0,a._1)(e,"x","leakyRelu")},i={alpha:t};return s.BV.runKernel(r.J$,n,i)}})},6573:(e,t,n)=>{"use strict";n.d(t,{d:()=>u});var s=n(7097),r=n(9121),a=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({less_:function(e,t){let n=(0,i._1)(e,"a","less","string_or_numeric"),u=(0,i._1)(t,"b","less","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return s.BV.runKernel(r.vt,l)}})},624:(e,t,n)=>{"use strict";n.d(t,{z:()=>u});var s=n(7097),r=n(9121),a=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({lessEqual_:function(e,t){let n=(0,i._1)(e,"a","lessEqual","string_or_numeric"),u=(0,i._1)(t,"b","lessEqual","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return s.BV.runKernel(r.CA,l)}})},9648:(e,t,n)=>{"use strict";n.d(t,{G:()=>l});var s=n(7097),r=n(9121),a=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({localResponseNormalization_:function(e,t=5,n=1,o=1,l=.5){const c=(0,a._1)(e,"x","localResponseNormalization");i.hu(4===c.rank||3===c.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${c.rank}.`)),i.hu(i.GN(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let h=c,p=!1;3===c.rank&&(p=!0,h=(0,u.X)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const d={x:h},f={depthRadius:t,bias:n,alpha:o,beta:l},m=s.BV.runKernel(r.eZ,d,f);return p?(0,u.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},2597:(e,t,n)=>{"use strict";n.d(t,{c:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({log_:function(e){const t={x:(0,a._1)(e,"x","log")};return s.BV.runKernel(r.Zb,t)}})},7474:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({log1p_:function(e){const t={x:(0,a._1)(e,"x","log1p")};return s.BV.runKernel(r.kU,t)}})},1510:(e,t,n)=>{"use strict";n.d(t,{C:()=>d});var s=n(633),r=n(3740),a=n(2271),i=n(4842),o=n(2597),u=n(3307),l=n(4841),c=n(2668),h=n(827),p=n(5475);const d=(0,c.op)({logSoftmax_:function(e,t=-1){const n=(0,r._1)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const c=(0,s.cb)(((e,n)=>{const s=(0,u.F)(e,t,!0),r=(0,h.l)(e,s),c=(0,h.l)((0,a.p)(r,"float32"),(0,o.c)((0,p.S)((0,i.Q)(r),t,!0)));return n([c]),{value:c,gradFunc:(e,n)=>{const[s]=n,r=(0,i.Q)(s);return(0,h.l)(e,(0,l.d)((0,p.S)(e,t,!0),r))}}}));return c(n)}})},1391:(e,t,n)=>{"use strict";n.d(t,{l:()=>f});var s=n(3740),r=n(569),a=n(6407),i=n(3591),o=n(4842),u=n(2597),l=n(3307),c=n(2668),h=n(4968),p=n(827),d=n(5475);const f=(0,c.op)({logSumExp_:function(e,t=null,n=!1){const c=(0,s._1)(e,"x","logSumExp"),f=(0,r.EC)(t,c.shape),m=(0,l.F)(c,f,!0),g=(0,p.l)(c,m),y=(0,o.Q)(g),b=(0,d.S)(y,f),x=(0,u.c)(b),v=(0,a.I)((0,h.X)(m,x.shape),x);if(n){const e=(0,i.rv)(v.shape,f);return(0,h.X)(v,e)}return v}})},2856:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(2200);const o=(0,n(2668).op)({logicalAnd_:function(e,t){const n=(0,a._1)(e,"a","logicalAnd","bool"),o=(0,a._1)(t,"b","logicalAnd","bool");(0,i.$N)(n.shape,o.shape);const u={a:n,b:o};return s.BV.runKernel(r.PY,u)}})},8651:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({logicalNot_:function(e){const t={x:(0,a._1)(e,"x","logicalNot","bool")};return s.BV.runKernel(r.Vf,t)}})},5750:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(2200);const o=(0,n(2668).op)({logicalOr_:function(e,t){const n=(0,a._1)(e,"a","logicalOr","bool"),o=(0,a._1)(t,"b","logicalOr","bool");(0,i.$N)(n.shape,o.shape);const u={a:n,b:o};return s.BV.runKernel(r.MZ,u)}})},8687:(e,t,n)=>{"use strict";n.d(t,{O:()=>o});var s=n(7097),r=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({matMul_:function(e,t,n=!1,o=!1){let u=(0,i._1)(e,"a","matMul"),l=(0,i._1)(t,"b","matMul");[u,l]=(0,a.makeTypesMatch)(u,l);const c={a:u,b:l},h={transposeA:n,transposeB:o};return s.BV.runKernel(r.XL,c,h)}})},3307:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({max_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","max")},o={reductionIndices:t,keepDims:n};return s.BV.runKernel(r.Yo,i,o)}})},1174:(e,t,n)=>{"use strict";n.d(t,{_:()=>c});var s=n(7097),r=n(9121),a=n(3740),i=n(569),o=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({maxPool_:function(e,t,n,u,c){const h=(0,a._1)(e,"x","maxPool");let p=h,d=!1;3===h.rank&&(d=!0,p=(0,l.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.hu(4===p.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${p.rank}.`)),i.hu(o.jT(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=c&&i.hu(i.GN(u),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${c} but got pad ${u}.`));const f={x:p},m={filterSize:t,strides:n,pad:u,dimRoundingMode:c},g=s.BV.runKernel(r.mT,f,m);return d?(0,l.X)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},5020:(e,t,n)=>{"use strict";n.d(t,{Y:()=>l});var s=n(7097),r=n(9121),a=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({maxPool3d_:function(e,t=[1,1,1],n,o,l,c="NDHWC"){const h=(0,a._1)(e,"x","maxPool3d");let p=h,d=!1;4===h.rank&&(d=!0,p=(0,u.X)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),i.hu(5===p.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${p.rank}.`)),i.hu("NDHWC"===c,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${c}`)),null!=l&&i.hu(i.GN(o),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${l} but got pad ${o}.`));const f={x:p},m={filterSize:t,strides:n,pad:o,dimRoundingMode:l,dataFormat:c},g=s.BV.runKernel(r.OA,f,m);return d?(0,u.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},632:(e,t,n)=>{"use strict";n.d(t,{g:()=>l});var s=n(7097),r=n(9121),a=n(747),i=n(3740),o=n(2200),u=n(2271);const l=(0,n(2668).op)({maximum_:function(e,t){let n=(0,i._1)(e,"a","maximum"),l=(0,i._1)(t,"b","maximum");[n,l]=(0,a.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),l=(0,u.p)(l,"int32")),(0,o.$N)(n.shape,l.shape);const c={a:n,b:l};return s.BV.runKernel(r.BM,c)}})},5130:(e,t,n)=>{"use strict";n.d(t,{J:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({mean_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","mean")},o={axis:t,keepDims:n};return s.BV.runKernel(r.q2,i,o)}})},5735:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({min_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","min")},o={axis:t,keepDims:n};return s.BV.runKernel(r.c1,i,o)}})},4513:(e,t,n)=>{"use strict";n.d(t,{L:()=>l});var s=n(7097),r=n(9121),a=n(747),i=n(3740),o=n(2200),u=n(2271);const l=(0,n(2668).op)({minimum_:function(e,t){let n=(0,i._1)(e,"a","minimum"),l=(0,i._1)(t,"b","minimum");[n,l]=(0,a.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),l=(0,u.p)(l,"int32")),(0,o.$N)(n.shape,l.shape);const c={a:n,b:l};return s.BV.runKernel(r.q8,c)}})},1483:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({mirrorPad_:function(e,t,n){i.hu("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const o=(0,a._1)(e,"x","mirrorPad");if(0===o.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");i.hu(t.length===o.rank,(()=>`Padding doesn't match input. Must be ${o.rank}. Got ${t.length}.`));const u="reflect"===n?1:0;for(let e=0;e<o.rank;e++)i.hu(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),i.hu(t[e][0]>=0&&t[e][0]<=o.shape[e]-u&&t[e][1]>=0&&t[e][1]<=o.shape[e]-u,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${o.shape[e]-u} or less than 0 for input of shape ${o.shape}`));const l={paddings:t,mode:n},c={x:o};return s.BV.runKernel(r.jQ,c,l)}})},5228:(e,t,n)=>{"use strict";n.d(t,{w:()=>o});var s=n(7097),r=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({mod_:function(e,t){let n=(0,i._1)(e,"a","mod"),o=(0,i._1)(t,"b","mod");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return s.BV.runKernel(r.Vb,u)}})},4841:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var s=n(7097),r=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({mul_:function(e,t){let n=(0,i._1)(e,"a","mul"),o=(0,i._1)(t,"b","mul");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return s.BV.runKernel(r.wY,u)}})},7370:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({neg_:function(e){const t={x:(0,a._1)(e,"x","neg")};return s.BV.runKernel(r.ku,t)}})},3561:(e,t,n)=>{"use strict";n.d(t,{K:()=>y});var s=n(3740),r=n(569),a=n(6235),i=n(3591),o=n(3307),u=n(5735),l=n(2668),c=n(3453),h=n(4968),p=n(9494),d=n(3261),f=n(248),m=n(5475);function g(e,t,n=null){if(0===e.rank)return(0,a.W)(e);if(1!==e.rank&&null===n)return g((0,h.X)(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,m.S)((0,a.W)(e),n);if(t===1/0)return(0,o.F)((0,a.W)(e),n);if(t===-1/0)return(0,u.V)((0,a.W)(e),n);if("euclidean"===t||2===t)return(0,d._)((0,m.S)((0,c.s)((0,a.W)(e),(0,p.i)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,o.F)((0,m.S)((0,a.W)(e),n[0]),n[1]-1);if(t===1/0)return(0,o.F)((0,m.S)((0,a.W)(e),n[1]),n[0]);if(t===-1/0)return(0,u.V)((0,m.S)((0,a.W)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,d._)((0,m.S)((0,f.h)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const y=(0,l.op)({norm_:function(e,t="euclidean",n=null,a=!1){const o=g(e=(0,s._1)(e,"x","norm"),t,n);let u=o.shape;if(a){const t=(0,r.EC)(n,e.shape);u=i.rv(o.shape,t)}return(0,h.X)(o,u)}})},6500:(e,t,n)=>{"use strict";n.d(t,{Q:()=>u});var s=n(7097),r=n(9121),a=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({notEqual_:function(e,t){let n=(0,i._1)(e,"a","notEqual","string_or_numeric"),u=(0,i._1)(t,"b","notEqual","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return s.BV.runKernel(r.yQ,l)}})},6708:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({oneHot_:function(e,t,n=1,i=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const o={indices:(0,a._1)(e,"indices","oneHot","int32")},u={depth:t,onValue:n,offValue:i};return s.BV.runKernel(r.we,o,u)}})},4917:(e,t,n)=>{"use strict";n.d(t,{i:()=>o});var s=n(7097),r=n(569),a=n(1661),i=n(9640);function o(e,t="float32"){if("complex64"===t){const t=o(e,"float32"),n=(0,i.l)(e,"float32");return(0,a.P)(t,n)}const n=(0,r.p8)((0,r.NA)(e),t);return s.BV.makeTensor(n,e,t)}},7846:(e,t,n)=>{"use strict";n.d(t,{J:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({onesLike_:function(e){const t={x:(0,a._1)(e,"x","onesLike")};return s.BV.runKernel(r.qW,t)}})},2668:(e,t,n)=>{"use strict";n.d(t,{op:()=>a});var s=n(7097),r=n(569);function a(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const i=(...e)=>{s.BV.startScope(n);try{const t=a(...e);return(0,r.tI)(t)&&console.error("Cannot return a Promise inside of tidy."),s.BV.endScope(t),t}catch(e){throw s.BV.endScope(null),e}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}},8869:(e,t,n)=>{"use strict";n.d(t,{WnP:()=>s.W,IHx:()=>r.I,$6P:()=>a.$,YjB:()=>i.Y,NqF:()=>o.N,wS1:()=>u.w,uR5:()=>l.u,Dxk:()=>f,JY5:()=>m,p3b:()=>g,f3b:()=>y.f,pju:()=>b.p,iUl:()=>x.i,d9v:()=>v.d,zoF:()=>w.z,gME:()=>k,Izb:()=>I,MNy:()=>S,ZaL:()=>N,PAt:()=>T.P,Tek:()=>C.T,bc:()=>$.b,pdZ:()=>E.p,$QV:()=>D,B10:()=>R.B,hiC:()=>_.h,rvX:()=>Qe,pyx:()=>F.p,DgJ:()=>O.D,Qqt:()=>M.Q,dt4:()=>L.d,iyy:()=>P,hlL:()=>U.h,GWj:()=>W.G,imm:()=>nt,Iqj:()=>V.I,pjt:()=>H.p,brS:()=>G.b,BHj:()=>Wt,hi7:()=>j.h,$r2:()=>Vt,cM7:()=>X.c,Krr:()=>q.K,CmS:()=>K.C,HvI:()=>Y.H,OI3:()=>Q.O,Fp7:()=>J.F,_sB:()=>Z._,YQQ:()=>ee.Y,gWQ:()=>te.g,J69:()=>ne.J,LTh:()=>se.L,Gi7:()=>oe,dC7:()=>ue.d,W76:()=>le.W,Quu:()=>ce.Q,lfX:()=>he.l,iUs:()=>pe.i,JpU:()=>de.J,vku:()=>fe.v,AL3:()=>me.A,nGf:()=>ye,LGj:()=>be.L,UYe:()=>xe.U,XLQ:()=>z.X,GYS:()=>ve.G,iD$:()=>we.i,U8D:()=>ke.U,U_I:()=>Ie.U,XD2:()=>Se.X,tPi:()=>Ne.t,jZU:()=>Te,SmN:()=>Ce,CnO:()=>$e,p0P:()=>Ee,XAC:()=>Ae.X,Wvh:()=>De.W,rVs:()=>Ht,Vl2:()=>Re.V,_b3:()=>_e._,L9e:()=>Fe.L,knu:()=>Oe.k,Z_8:()=>Gt,luU:()=>ie.l,Smz:()=>Me.S,AEp:()=>Le.A,XeE:()=>ze.X,RRF:()=>Be.R,odF:()=>Ue,Gg6:()=>B.G,p4s:()=>Ke.p,Xu6:()=>We.X,HHK:()=>Ve.H,VD$:()=>Ge,arb:()=>je.a,lls:()=>Xe.l,P84:()=>qe.P});var s=n(6235),r=n(6407),a=n(781),i=n(2998),o=n(47),u=n(5176),l=n(1749),c=n(3740),h=n(569),p=n(7505),d=n(2668);const f=(0,d.op)({batchNorm2d_:function(e,t,n,s,r,a){const i=(0,c._1)(e,"x","batchNorm"),o=(0,c._1)(t,"mean","batchNorm"),u=(0,c._1)(n,"variance","batchNorm");let l,d;return null!=r&&(l=(0,c._1)(r,"scale","batchNorm")),null!=s&&(d=(0,c._1)(s,"offset","batchNorm")),h.hu(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),h.hu(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),h.hu(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&h.hu(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=d&&h.hu(2===d.rank||1===d.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${d.rank}.`)),(0,p.t)(i,o,u,d,l,a)}}),m=(0,d.op)({batchNorm3d_:function(e,t,n,s,r,a){const i=(0,c._1)(e,"x","batchNorm"),o=(0,c._1)(t,"mean","batchNorm"),u=(0,c._1)(n,"variance","batchNorm");let l,d;return null!=r&&(l=(0,c._1)(r,"scale","batchNorm")),null!=s&&(d=(0,c._1)(s,"offset","batchNorm")),h.hu(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),h.hu(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),h.hu(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&h.hu(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=d&&h.hu(3===d.rank||1===d.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${d.rank}.`)),(0,p.t)(i,o,u,d,l,a)}}),g=(0,d.op)({batchNorm4d_:function(e,t,n,s,r,a){const i=(0,c._1)(e,"x","batchNorm"),o=(0,c._1)(t,"mean","batchNorm"),u=(0,c._1)(n,"variance","batchNorm");let l,d;return null!=r&&(l=(0,c._1)(r,"scale","batchNorm")),null!=s&&(d=(0,c._1)(s,"offset","batchNorm")),h.hu(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),h.hu(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),h.hu(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&h.hu(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=d&&h.hu(4===d.rank||1===d.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${d.rank}.`)),(0,p.t)(i,o,u,d,l,a)}});var y=n(2657),b=n(2271),x=n(2279),v=n(8723),w=n(6884);const k=(0,d.op)({concat1d_:function(e){return(0,w.z)(e,0)}}),I=(0,d.op)({concat2d_:function(e,t){return(0,w.z)(e,t)}}),S=(0,d.op)({concat3d_:function(e,t){return(0,w.z)(e,t)}}),N=(0,d.op)({concat4d_:function(e,t){return(0,w.z)(e,t)}});var T=n(1355),C=n(4794),$=n(1405),E=n(473),A=n(7594);const D=(0,d.op)({conv3dTranspose_:function(e,t,n,s,r){const a=(0,c._1)(e,"x","conv3dTranspose"),i=(0,c._1)(t,"filter","conv3dTranspose");return(0,A._)(n,a,i,s,r)}});var R=n(4718),_=n(1274),F=n(3233),O=n(6477),M=n(4842),L=n(1300),z=n(4968),B=n(7501);const P=(0,d.op)({eye_:function(e,t,n,s="float32"){null==t&&(t=e);const r=(0,y.f)([e,t],s),a=e<=t?e:t;for(let e=0;e<a;++e)r.set(1,e,e);const i=(0,z.X)(r.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return(0,B.G)((0,L.d)(i,0),[n[0],1,1]);if(2===n.length)return(0,B.G)((0,L.d)((0,L.d)(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,B.G)((0,L.d)((0,L.d)((0,L.d)(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var U=n(4006),W=n(6943),V=n(4926),H=n(636),G=n(7630),j=n(9133),X=n(2597),q=n(7474),K=n(1510),Y=n(2856),Q=n(8687),J=n(3307),Z=n(1174),ee=n(5020),te=n(632),ne=n(5130),se=n(4513),re=n(3591),ae=n(248),ie=n(827);const oe=(0,d.op)({moments_:function(e,t=null,n=!1){e=(0,c._1)(e,"x","moments");const s=(0,h.EC)(t,e.shape),r=(0,ne.J)(e,s,n);let a=r.shape;n||(a=(0,re.rv)(r.shape,s));const i=(0,ae.h)((0,ie.l)((0,b.p)(e,"float32"),(0,z.X)(r,a)));return{mean:r,variance:(0,ne.J)(i,s,n)}}});var ue=n(4841),le=n(7370),ce=n(6500),he=n(6708),pe=n(4917),de=n(7846),fe=n(9682),me=n(8151),ge=n(6845);const ye=(0,d.op)({randomNormal_:function(e,t=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const a=new ge.Yi(t,n,s,!1,r),i=(0,y.f)(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}});var be=n(5002),xe=n(7409),ve=n(7486),we=n(9494),ke=n(5503),Ie=n(8678),Se=n(625),Ne=n(2676);const Te=(0,d.op)({slice1d_:function(e,t,n){const s=(0,c._1)(e,"x","slice1d");return h.hu(1===s.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`)),(0,Ne.t)(s,[t],[n])}}),Ce=(0,d.op)({slice2d_:function(e,t,n){const s=(0,c._1)(e,"x","slice2d");return h.hu(2===s.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`)),(0,Ne.t)(s,t,n)}}),$e=(0,d.op)({slice3d_:function(e,t,n){const s=(0,c._1)(e,"x","slice3d");return h.hu(3===s.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`)),(0,Ne.t)(s,t,n)}}),Ee=(0,d.op)({slice4d_:function(e,t,n){const s=(0,c._1)(e,"x","slice4d");return h.hu(4===s.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`)),(0,Ne.t)(s,t,n)}});var Ae=n(682),De=n(3694),Re=n(8644),_e=n(3261),Fe=n(9590),Oe=n(2991),Me=n(5475),Le=n(1869),ze=n(701),Be=n(6092),Pe=n(7852);function Ue(e,t,n){if((0,h.Cq)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const s=(0,c.C)(e,n);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,Pe.H)(e,t,s,n)}var We=n(3596),Ve=n(4136),He=n(7097);function Ge(e,t=!0,n,s){return He.BV.makeVariable(e,t,n,s)}var je=n(5912),Xe=n(9640),qe=n(6577),Ke=n(9065),Ye=n(4077);const Qe=(0,d.op)({dropout_:function(e,t,n,s){const a=(0,c._1)(e,"x","dropout");if(h.hu("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),h.hu(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Ye.es?a.clone():a;const i=function(e,t){if(null==t)return e.shape.slice();if(h.cO(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let s=0;s<e.shape.length;s++)null==t[s]&&null!=e.shape[s]?n.push(e.shape[s]):n.push(t[s]);return n}return t}(a,n),o=1-t,u=(0,_.h)((0,W.G)((0,r.I)((0,be.L)(i,0,1,"float32",s),o)),o);return(0,ue.d)(a,u)}});var Je=n(3710),Ze=n(7020),et=n(8447),tt=n(4415),nt=n(4624);function st(e,t,n){const s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(i)}return(0,Be.R)(r,"float32")}(0,d.op)({hammingWindow_:function(e){return st(e,.54,.46)}});const rt=(0,d.op)({hannWindow_:function(e){return st(e,.5,.5)}}),at=(0,d.op)({frame_:function(e,t,n,s=!1,r=0){let a=0;const i=[];for(;a+t<=e.size;)i.push((0,Ne.t)(e,a,t)),a+=n;if(s)for(;a<e.size;){const s=a+t-e.size,o=(0,w.z)([(0,Ne.t)(e,a,t-s),(0,U.h)([s],r)]);i.push(o),a+=n}return 0===i.length?Ue([],[0,t]):(0,z.X)((0,w.z)(i),[i.length,t])}});(0,d.op)({stft_:function(e,t,n,s,r=rt){var a;null==s&&(a=t,s=Math.floor(Math.pow(2,Math.ceil(Math.log(a)/Math.log(2)))));const i=at(e,t,n),o=(0,ue.d)(i,r(t));return(0,Je.Q)(o,s)}});var it=n(9121);const ot=(0,d.op)({cropAndResize_:function(e,t,n,s,r="bilinear",a=0){const i=(0,c._1)(e,"image","cropAndResize"),o=(0,c._1)(t,"boxes","cropAndResize","float32"),u=(0,c._1)(n,"boxInd","cropAndResize","int32"),l=o.shape[0];h.hu(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),h.hu(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),h.hu(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),h.hu(2===s.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`)),h.hu(s[0]>=1&&s[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${s}`)),h.hu("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const p={image:i,boxes:o,boxInd:u},d={method:r,extrapolationValue:a,cropSize:s};return He.BV.runKernel(it.Vc,p,d)}}),ut=(0,d.op)({flipLeftRight_:function(e){const t=(0,c._1)(e,"image","flipLeftRight","float32");h.hu(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return He.BV.runKernel(it.Uy,n,{})}}),lt=(0,d.op)({grayscaleToRGB_:function(e){const t=(0,c._1)(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];h.hu(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),h.hu(1===s,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,(0,B.G)(t,r)}}),ct=(0,d.op)({rotateWithOffset_:function(e,t,n=0,s=.5){const r=(0,c._1)(e,"image","rotateWithOffset","float32");h.hu(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const a={image:r},i={radians:t,fillValue:n,center:s};return He.BV.runKernel(it.b9,a,i)}});function ht(e,t,n,s,r,a){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),h.hu(0<=s&&s<=1,(()=>`iouThreshold must be in [0, 1], but was '${s}'`)),h.hu(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),h.hu(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),h.hu(1===t.rank,(()=>"scores must be a 1D tensor")),h.hu(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),h.hu(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}const pt=(0,d.op)({nonMaxSuppression_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=(0,c._1)(e,"boxes","nonMaxSuppression"),i=(0,c._1)(t,"scores","nonMaxSuppression"),o=ht(a,i,n,s,r),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:s=o.iouThreshold,scoreThreshold:r=o.scoreThreshold};return He.BV.runKernel(it.uv,{boxes:a,scores:i},u)}});var dt=n(3337);const ft=(0,d.op)({nonMaxSuppressionWithScore_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=(0,c._1)(e,"boxes","nonMaxSuppression"),o=(0,c._1)(t,"scores","nonMaxSuppression"),u=ht(i,o,n,s,r,a),l={boxes:i,scores:o},h={maxOutputSize:n=u.maxOutputSize,iouThreshold:s=u.iouThreshold,scoreThreshold:r=u.scoreThreshold,softNmsSigma:a=u.softNmsSigma},p=He.BV.runKernel(it.W0,l,h);return{selectedIndices:p[0],selectedScores:p[1]}}}),mt=(0,d.op)({nonMaxSuppressionPadded_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=(0,c._1)(e,"boxes","nonMaxSuppression"),o=(0,c._1)(t,"scores","nonMaxSuppression"),u=ht(i,o,n,s,r,null),l={boxes:i,scores:o},h={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:a},p=He.BV.runKernel(it.cy,l,h);return{selectedIndices:p[0],validOutputs:p[1]}}});var gt=n(3305),yt=n(5098),bt=n(3865),xt=n(624),vt=n(7809),wt=n(7245);const kt=(0,d.op)({threshold_:function(e,t="binary",n=!1,s=.5){const a=(0,c._1)(e,"image","threshold"),i=a.shape[0]*a.shape[1];let o,u,l,p,d=(0,ue.d)((0,Be.R)([s]),255);if(h.hu(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),h.hu(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),h.hu("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),h.hu("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[o,u,l]=(0,Re.V)(a,[1,1,1],-1);const e=(0,ue.d)(o,.2989),t=(0,ue.d)(u,.587),n=(0,ue.d)(l,.114);p=(0,r.I)((0,r.I)(e,t),n)}else p=e;"otsu"===t&&(d=function(e,t){let n,s,a,i,o,u,l=(0,Be.R)([-1]),c=(0,Be.R)([0]),h=(0,Be.R)([0]);for(let p=0;p<e.size-1;p++){n=(0,Ne.t)(e,0,p+1),s=(0,Ne.t)(e,p+1),o=(0,_.h)((0,Me.S)(n),t),u=(0,_.h)((0,Me.S)(s),t);const d=(0,Me.S)((0,ue.d)(n,(0,wt.w)(0,n.size)));a=(0,_.h)(d,(0,Me.S)(n));const f=(0,U.h)(s.shape,n.size),m=(0,r.I)((0,wt.w)(0,s.size),f),g=(0,ue.d)(s,m);i=(0,_.h)((0,Me.S)(g),(0,Me.S)(s));const y=(0,ie.l)(a,i),b=(0,ie.l)(a,i),x=(0,ue.d)(o,u);h=(0,ue.d)((0,ue.d)(x,y),b);const v=(0,H.p)(h,c);c=(0,je.a)(v,h,c),l=(0,je.a)(v,(0,Be.R)([p]),l)}return l}((0,bt.y)((0,b.p)((0,vt.N)(p),"int32"),(0,ze.X)([]),256),i));const f=n?(0,xt.z)(p,d):(0,H.p)(p,d);return(0,b.p)((0,ue.d)(f,255),"int32")}}),It=(0,d.op)({transform_:function(e,t,n="nearest",s="constant",r=0,a){const i=(0,c._1)(e,"image","transform","float32"),o=(0,c._1)(t,"transforms","transform","float32");h.hu(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),h.hu(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),h.hu(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const u={image:i,transforms:o},l={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return He.BV.runKernel(it.wx,u,l)}}),St=(0,d.op)({bandPart_:function(e,t,n){(0,h.hu)(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,h.hu)(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const s=(0,c._1)(e,"a","bandPart");(0,h.hu)(s.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`));const r=s.shape,[a,i]=s.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const o=(0,z.X)((0,wt.w)(0,a,1,"int32"),[-1,1]),u=(0,wt.w)(0,i,1,"int32"),l=(0,ie.l)(o,u),p=(0,Y.H)((0,xt.z)(l,(0,we.i)(+t,"int32")),(0,G.b)(l,(0,we.i)(-n,"int32"))),d=(0,Xe.l)([a,i],s.dtype);return(0,z.X)((0,Oe.k)((0,Ve.H)((0,z.X)(s,[-1,a,i])).map((e=>(0,je.a)(p,e,d)))),r)}});var Nt=n(3561);const Tt=(0,d.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,h.hu)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,h.hu)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=(0,Re.V)(e,e.shape[0],0).map((e=>(0,Fe.L)(e,[0])));(0,h.hu)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],s=e;for(let t=0;t<e.length;++t)n.push(He.BV.tidy((()=>{let e=s[t];if(t>0)for(let s=0;s<t;++s){const t=(0,ue.d)((0,Me.S)((0,ue.d)(n[s],e)),n[s]);e=(0,ie.l)(e,t)}return(0,_.h)(e,(0,Nt.K)(e,"euclidean"))})));return t?(0,Oe.k)(n,0):n}});var Ct=n(4368);function $t(e,t=!1){return He.BV.tidy((()=>{(0,h.hu)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],s=e.shape[1];let r=P(n),a=(0,v.d)(e);const i=Ue([[1]],[1,1]);let o=(0,v.d)(i);const u=n>=s?s:n;for(let e=0;e<u;++e){const t=a,u=o,l=r;[o,a,r]=He.BV.tidy((()=>{const t=(0,Ne.t)(a,[e,e],[n-e,1]),u=(0,Nt.K)(t),l=(0,Ne.t)(a,[e,e],[1,1]),c=(0,je.a)((0,H.p)(l,0),Ue([[-1]]),Ue([[1]])),h=(0,ie.l)(l,(0,ue.d)(c,u)),p=(0,_.h)(t,h);o=1===p.shape[0]?(0,v.d)(i):(0,w.z)([i,(0,Ne.t)(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=(0,le.W)((0,_.h)((0,Q.O)(c,h),u)),f=(0,Ne.t)(a,[e,0],[n-e,s]),m=(0,ue.d)(d,o),g=(0,Ke.p)(o);if(0===e)a=(0,ie.l)(f,(0,Q.O)(m,(0,Q.O)(g,f)));else{const t=(0,ie.l)(f,(0,Q.O)(m,(0,Q.O)(g,f)));a=(0,w.z)([(0,Ne.t)(a,[0,0],[e,s]),t],0)}const y=(0,Ke.p)(m),b=(0,Ne.t)(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=(0,ie.l)(b,(0,Q.O)((0,Q.O)(b,o),y));else{const t=(0,ie.l)(b,(0,Q.O)((0,Q.O)(b,o),y));r=(0,w.z)([(0,Ne.t)(r,[0,0],[n,e]),t],1)}return[o,a,r]})),(0,Ct.B9)([t,u,l])}return!t&&n>s&&(r=(0,Ne.t)(r,[0,0],[n,s]),a=(0,Ne.t)(a,[0,0],[s,s])),[r,a]}))}const Et=(0,d.op)({qr_:function(e,t=!1){if((0,h.hu)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return $t(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),s=(0,Ve.H)((0,z.X)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];return s.forEach((e=>{const[n,s]=$t(e,t);r.push(n),a.push(s)})),[(0,z.X)((0,Oe.k)(r,0),e.shape),(0,z.X)((0,Oe.k)(a,0),e.shape)]}}});var At;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(At||(At={}));const Dt=(0,d.op)({computeWeightedLoss_:function(e,t,n=At.SUM_BY_NONZERO_WEIGHTS){const s=(0,c._1)(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=(0,c._1)(t,"weights","computeWeightedLoss"));const a=null==r?s:(0,ue.d)(s,r);if(n===At.NONE)return a;if(n===At.SUM)return(0,Me.S)(a);if(n===At.MEAN){if(null==r)return(0,ne.J)(a);{const e=s.size/r.size,t=(0,_.h)((0,Me.S)(a),(0,Me.S)(r));return e>1?(0,_.h)(t,(0,we.i)(e)):t}}if(n===At.SUM_BY_NONZERO_WEIGHTS){if(null==r)return(0,_.h)((0,Me.S)(a),(0,we.i)(s.size));{const e=(0,ue.d)(r,(0,pe.i)(s.shape)),t=(0,b.p)((0,Me.S)((0,ce.Q)(e,(0,we.i)(0))),"float32");return(0,_.h)((0,Me.S)(a),t)}}throw Error(`Unknown reduction: ${n}`)}});(0,d.op)({absoluteDifference_:function(e,t,n,r=At.SUM_BY_NONZERO_WEIGHTS){const a=(0,c._1)(e,"labels","absoluteDifference"),i=(0,c._1)(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=(0,c._1)(n,"weights","absoluteDifference")),(0,h.k5)(a.shape,i.shape,"Error in absoluteDifference: ");const u=(0,s.W)((0,ie.l)(a,i));return Dt(u,o,r)}}),(0,d.op)({cosineDistance_:function(e,t,n,s,r=At.SUM_BY_NONZERO_WEIGHTS){const a=(0,c._1)(e,"labels","cosineDistance"),i=(0,c._1)(t,"predictions","cosineDistance");let o=null;null!=s&&(o=(0,c._1)(s,"weights","cosineDistance")),(0,h.k5)(a.shape,i.shape,"Error in cosineDistance: ");const u=(0,we.i)(1),l=(0,ie.l)(u,(0,Me.S)((0,ue.d)(a,i),n,!0));return Dt(l,o,r)}}),(0,d.op)({hingeLoss_:function(e,t,n,s=At.SUM_BY_NONZERO_WEIGHTS){let r=(0,c._1)(e,"labels","hingeLoss");const a=(0,c._1)(t,"predictions","hingeLoss");let i=null;null!=n&&(i=(0,c._1)(n,"weights","hingeLoss")),(0,h.k5)(r.shape,a.shape,"Error in hingeLoss: ");const o=(0,we.i)(1);r=(0,ie.l)((0,ue.d)((0,we.i)(2),r),o);const u=(0,xe.U)((0,ie.l)(o,(0,ue.d)(r,a)));return Dt(u,i,s)}}),(0,d.op)({huberLoss_:function(e,t,n,a=1,i=At.SUM_BY_NONZERO_WEIGHTS){const o=(0,c._1)(e,"labels","huberLoss"),u=(0,c._1)(t,"predictions","huberLoss");let l=null;null!=n&&(l=(0,c._1)(n,"weights","huberLoss")),(0,h.k5)(o.shape,u.shape,"Error in huberLoss: ");const p=(0,we.i)(a),d=(0,s.W)((0,ie.l)(u,o)),f=(0,se.L)(d,p),m=(0,ie.l)(d,f),g=(0,r.I)((0,ue.d)((0,we.i)(.5),(0,ae.h)(f)),(0,ue.d)(p,m));return Dt(g,l,i)}}),(0,d.op)({logLoss_:function(e,t,n,s=1e-7,a=At.SUM_BY_NONZERO_WEIGHTS){const i=(0,c._1)(e,"labels","logLoss"),o=(0,c._1)(t,"predictions","logLoss");let u=null;null!=n&&(u=(0,c._1)(n,"weights","logLoss")),(0,h.k5)(i.shape,o.shape,"Error in logLoss: ");const l=(0,we.i)(1),p=(0,we.i)(s),d=(0,le.W)((0,ue.d)(i,(0,X.c)((0,r.I)(o,p)))),f=(0,ue.d)((0,ie.l)(l,i),(0,X.c)((0,r.I)((0,ie.l)(l,o),p))),m=(0,ie.l)(d,f);return Dt(m,u,a)}});var Rt=n(5265);(0,d.op)({meanSquaredError_:function(e,t,n,s=At.SUM_BY_NONZERO_WEIGHTS){const r=(0,c._1)(e,"labels","meanSquaredError"),a=(0,c._1)(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=(0,c._1)(n,"weights","meanSquaredError")),(0,h.k5)(r.shape,a.shape,"Error in meanSquaredError: ");const o=(0,Rt.$)(r,a);return Dt(o,i,s)}}),(0,d.op)({sigmoidCrossEntropy_:function(e,t,n,a=0,i=At.SUM_BY_NONZERO_WEIGHTS){let o=(0,c._1)(e,"multiClassLabels","sigmoidCrossEntropy");const u=(0,c._1)(t,"logits","sigmoidCrossEntropy");let l=null;if(null!=n&&(l=(0,c._1)(n,"weights","sigmoidCrossEntropy")),(0,h.k5)(o.shape,u.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=(0,we.i)(a),t=(0,we.i)(1),n=(0,we.i)(.5);o=(0,r.I)((0,ue.d)(o,(0,ie.l)(t,e)),(0,ue.d)(n,e))}const p=function(e,t){const n=(0,c._1)(e,"labels","sigmoidCrossEntropyWithLogits"),a=(0,c._1)(t,"logits","sigmoidCrossEntropyWithLogits");(0,h.k5)(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const i=(0,xe.U)(a),o=(0,ue.d)(a,n),u=(0,q.K)((0,M.Q)((0,le.W)((0,s.W)(a))));return(0,r.I)((0,ie.l)(i,o),u)}(o,u);return Dt(p,l,i)}});var _t=n(633),Ft=n(1391);(0,d.op)({softmaxCrossEntropy_:function(e,t,n,s=0,a=At.SUM_BY_NONZERO_WEIGHTS){let i=(0,c._1)(e,"onehotLabels","softmaxCrossEntropy");const o=(0,c._1)(t,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=(0,c._1)(n,"weights","softmaxCrossEntropy")),(0,h.k5)(i.shape,o.shape,"Error in softmaxCrossEntropy: "),s>0){const e=(0,we.i)(s),t=(0,we.i)(1),n=(0,we.i)(i.shape[1]);i=(0,r.I)((0,ue.d)(i,(0,ie.l)(t,e)),(0,_.h)(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const s=(0,_t.cb)(((e,t,s)=>{const r=(0,Ft.l)(t,[n],!0),a=(0,ie.l)((0,b.p)(t,"float32"),r);s([e,a]);const i=(0,le.W)((0,ue.d)(a,e));return{value:(0,Me.S)(i,[n]),gradFunc:(e,t)=>{const[s,r]=t,a=(0,re.rv)(e.shape,[n]);return[(0,ue.d)((0,z.X)(e,a),(0,ie.l)((0,b.p)(s,"float32"),(0,M.Q)(r))),(0,ue.d)((0,z.X)(e,a),(0,ie.l)((0,M.Q)(r),(0,b.p)(s,"float32")))]}}}));return s(e,t)}(i,o);return Dt(l,u,a)}});const Ot=(0,d.op)({sparseFillEmptyRows_:function(e,t,n,s){const r=(0,c._1)(e,"indices","sparseFillEmptyRows"),a=(0,c._1)(t,"values","sparseFillEmptyRows"),i=(0,c._1)(n,"denseShape","sparseFillEmptyRows"),o=(0,c._1)(s,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==r.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const u={indices:r,values:a,denseShape:i,defaultValue:o},l=He.BV.runKernel(it.O3,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),Mt=(0,d.op)({sparseReshape_:function(e,t,n){const s=(0,c._1)(e,"inputIndices","sparseReshape"),r=(0,c._1)(t,"inputShape","sparseReshape"),a=(0,c._1)(n,"newShape","sparseReshape");if(2!==s.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==r.rank)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:s,inputShape:r,newShape:a},o=He.BV.runKernel(it.nh,i);return{outputIndices:o[0],outputShape:o[1]}}}),Lt=(0,d.op)({sparseSegmentMean_:function(e,t,n){const s=(0,c._1)(e,"data","sparseSegmentMean"),r=(0,c._1)(t,"indices","sparseSegmentMean"),a=(0,c._1)(n,"segmentIds","sparseSegmentMean");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${r.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);const i={data:s,indices:r,segmentIds:a};return He.BV.runKernel(it.YW,i)}}),zt=(0,d.op)({sparseSegmentSum_:function(e,t,n){const s=(0,c._1)(e,"data","sparseSegmentSum"),r=(0,c._1)(t,"indices","sparseSegmentSum"),a=(0,c._1)(n,"segmentIds","sparseSegmentSum");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${r.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);const i={data:s,indices:r,segmentIds:a};return He.BV.runKernel(it.Zj,i)}}),Bt=(0,d.op)({stringNGrams_:function(e,t,n,s,r,a,i,o){const u=(0,c._1)(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=(0,c._1)(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const h={separator:n,nGramWidths:s,leftPad:r,rightPad:a,padWidth:i,preserveShortSequences:o},p={data:u,dataSplits:l},d=He.BV.runKernel(it._J,p,h);return{nGrams:d[0],nGramsSplits:d[1]}}}),Pt=(0,d.op)({stringSplit_:function(e,t,n=!0){const s=(0,c._1)(e,"input","stringSplit","string"),r=(0,c._1)(t,"delimiter","stringSplit","string");if(1!==s.rank)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(0!==r.rank)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const a={skipEmpty:n},i={input:s,delimiter:r},o=He.BV.runKernel(it.s1,i,a);return{indices:o[0],values:o[1],shape:o[2]}}}),Ut=(0,d.op)({stringToHashBucketFast_:function(e,t){const n=(0,c._1)(e,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return He.BV.runKernel(it.Xk,r,s)}}),Wt=(Ze.k,et.S,Je.Q,tt.w,{flipLeftRight:ut,grayscaleToRGB:lt,resizeNearestNeighbor:yt.j,resizeBilinear:gt.I,rotateWithOffset:ct,cropAndResize:ot,nonMaxSuppression:pt,nonMaxSuppressionAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=(0,c._1)(e,"boxes","nonMaxSuppressionAsync"),i=(0,c._1)(t,"scores","nonMaxSuppressionAsync"),o=ht(a,i,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const u=await Promise.all([a.data(),i.data()]),l=u[0],h=u[1],{selectedIndices:p}=(0,dt.GP)(l,h,n,s,r);return a!==e&&a.dispose(),i!==t&&i.dispose(),(0,Be.R)(p,"int32")},nonMaxSuppressionWithScore:ft,nonMaxSuppressionWithScoreAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=(0,c._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,c._1)(t,"scores","nonMaxSuppressionAsync"),u=ht(i,o,n,s,r,a);n=u.maxOutputSize,s=u.iouThreshold,r=u.scoreThreshold,a=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),h=l[0],p=l[1],{selectedIndices:d,selectedScores:f}=(0,dt.pA)(h,p,n,s,r,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:(0,Be.R)(d,"int32"),selectedScores:(0,Be.R)(f)}},nonMaxSuppressionPadded:mt,nonMaxSuppressionPaddedAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=(0,c._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,c._1)(t,"scores","nonMaxSuppressionAsync"),u=ht(i,o,n,s,r,null),l=u.maxOutputSize,h=u.iouThreshold,p=u.scoreThreshold,[d,f]=await Promise.all([i.data(),o.data()]),{selectedIndices:m,validOutputs:g}=(0,dt.qP)(d,f,l,h,p,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:(0,Be.R)(m,"int32"),validOutputs:(0,we.i)(g,"int32")}},threshold:kt,transform:It}),Vt={bandPart:St,gramSchmidt:Tt,qr:Et},Ht={sparseFillEmptyRows:Ot,sparseReshape:Mt,sparseSegmentMean:Lt,sparseSegmentSum:zt},Gt={stringNGrams:Bt,stringSplit:Pt,stringToHashBucketFast:Ut}},9682:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({pad_:function(e,t,n=0){const i=(0,a._1)(e,"x","pad");if(0===i.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:t,constantValue:n},u={x:i};return s.BV.runKernel(r.ly,u,o)}})},3453:(e,t,n)=>{"use strict";n.d(t,{s:()=>o});var s=n(7097),r=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({pow_:function(e,t){let n=(0,i._1)(e,"base","pow"),o=(0,i._1)(t,"exp","pow");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return s.BV.runKernel(r.pe,u)}})},8151:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({prelu_:function(e,t){const n={x:(0,a._1)(e,"x","prelu"),alpha:(0,a._1)(t,"alpha","prelu")};return s.BV.runKernel(r.o0,n)}})},9451:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(2271);const o=(0,n(2668).op)({prod_:function(e,t=null,n=!1){let o=(0,a._1)(e,"x","prod");"bool"===o.dtype&&(o=(0,i.p)(o,"int32"));const u={x:o},l={axis:t,keepDims:n};return s.BV.runKernel(r.Dl,u,l)}})},6845:(e,t,n)=>{"use strict";n.d(t,{Yi:()=>r,wv:()=>a});var s=n(6377);class r{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=a||Math.random();this.random=s.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let s,r,a;do{s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*i,t=this.mean+this.stdDev*r*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class a{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=s.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},5002:(e,t,n)=>{"use strict";n.d(t,{L:()=>i});var s=n(2657),r=n(2668),a=n(6845);const i=(0,r.op)({randomUniform_:function(e,t=0,n=1,r="float32",i){const o=(0,s.f)(e,r),u=new a.wv(t,n,null,i);for(let e=0;e<o.values.length;e++)o.values[e]=u.nextValue();return o.toTensor()}})},7245:(e,t,n)=>{"use strict";n.d(t,{w:()=>a});var s=n(7097),r=n(9121);function a(e,t,n=1,a="float32"){if(0===n)throw new Error("Cannot have a step of zero");const i={start:e,stop:t,step:n,dtype:a};return s.BV.runKernel(r.e6,{},i)}},766:(e,t,n)=>{"use strict";n.d(t,{k:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({real_:function(e){const t={input:(0,a._1)(e,"input","real")};return s.BV.runKernel(r.xJ,t)}})},9036:(e,t,n)=>{"use strict";n.d(t,{M:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({reciprocal_:function(e){const t={x:(0,a._1)(e,"x","reciprocal")};return s.BV.runKernel(r.$H,t)}})},7409:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({relu_:function(e){const t={x:(0,a._1)(e,"x","relu")};return s.BV.runKernel(r.qk,t)}})},3582:(e,t,n)=>{"use strict";n.d(t,{b:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({relu6_:function(e){const t={x:(0,a._1)(e,"x","relu6")};return s.BV.runKernel(r.Sb,t)}})},4968:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({reshape_:function(e,t){const n={x:(0,a._1)(e,"x","reshape","string_or_numeric")},i={shape:t};return s.BV.runKernel(r.HZ,n,i)}})},7486:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({reverse_:function(e,t){const n={x:(0,a._1)(e,"x","reverse")},i={dims:t};return s.BV.runKernel(r.mK,n,i)}})},7809:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({round_:function(e){const t={x:(0,a._1)(e,"x","round")};return s.BV.runKernel(r.e0,t)}})},2634:(e,t,n)=>{"use strict";n.d(t,{b:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({rsqrt_:function(e){const t={x:(0,a._1)(e,"x","rsqrt")};return s.BV.runKernel(r.bV,t)}})},9494:(e,t,n)=>{"use strict";n.d(t,{i:()=>a});var s=n(569),r=n(7852);function a(e,t){if(((0,s.fU)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,s.fU)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,r.H)(e,[],[],t)}},3028:(e,t,n)=>{"use strict";n.d(t,{l5:()=>r,b0:()=>a,SU:()=>i});var s=n(569);function r(e,t,n){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+" update.rank != "+(r+e.length-s));for(let e=0;e<r;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-r;++t)if(n.shape[t+r]!==e[t+s])throw new Error(a+` updates.shape[${t+r}] (${n.shape[t+r]}) != shape[${t+r}] (${e[t+r]})`)}function a(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}r(n,t,e)}function i(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,i=n.length;let o=1;for(let e=a;e<i;++e)o*=n[e];const u=a<1?1:a;return{sliceRank:a,numUpdates:(0,s.NA)(t.shape)/u,sliceSize:o,strides:[...(0,s.e3)(n.slice(0,a)),1],outputSize:(0,s.NA)(n)}}},5503:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({selu_:function(e){const t={x:(0,a._1)(e,"x","selu")};return s.BV.runKernel(r.oF,t)}})},3179:(e,t,n)=>{"use strict";n.d(t,{y:()=>s,$:()=>r});const s=1.7580993408473768,r=1.0507009873554805},8678:(e,t,n)=>{"use strict";n.d(t,{U:()=>l});var s=n(3740),r=n(569),a=n(4794),i=n(4718),o=n(2668),u=n(4968);const l=(0,o.op)({separableConv2d_:function(e,t,n,o,l,c=[1,1],h="NHWC"){const p=(0,s._1)(e,"x","separableConv2d"),d=(0,s._1)(t,"depthwiseFilter","separableConv2d"),f=(0,s._1)(n,"pointwiseFilter","separableConv2d");let m=p,g=!1;if(3===p.rank&&(g=!0,m=(0,u.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),"NCHW"===h)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");r.hu(4===m.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`)),r.hu(4===d.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${d.rank}.`)),r.hu(4===f.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${d.rank}.`)),r.hu(1===f.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`)),r.hu(1===f.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`));const y=d.shape[2],b=d.shape[3];r.hu(f.shape[2]===y*b,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${y*b}, but got ${f.shape[2]}.`));const x=(0,i.B)(m,d,o,l,h,c),v=(0,a.T)(x,f,1,"valid",h);return g?(0,u.X)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},625:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({sigmoid_:function(e){const t={x:(0,a._1)(e,"x","sigmoid")};return s.BV.runKernel(r.a5,t)}})},4434:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({sign_:function(e){const t={x:(0,a._1)(e,"x","sign")};return s.BV.runKernel(r.i5,t)}})},9331:(e,t,n)=>{"use strict";n.d(t,{O:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({sin_:function(e){const t={x:(0,a._1)(e,"x","sin")};return s.BV.runKernel(r.RQ,t)}})},3254:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({sinh_:function(e){const t={x:(0,a._1)(e,"x","sinh")};return s.BV.runKernel(r.w3,t)}})},2676:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({slice_:function(e,t,n){const i=(0,a._1)(e,"x","slice","string_or_numeric");if(0===i.rank)throw new Error("Slicing scalar is not possible");const o={x:i},u={begin:t,size:n};return s.BV.runKernel(r.p2,o,u)}})},7650:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertParamsValid:()=>r,maskToAxes:()=>a,computeOutShape:()=>i,stridesWithElidedDims:()=>o,getNormalizedAxes:()=>c,startIndicesWithElidedDims:()=>h,stopIndicesWithElidedDims:()=>p,stridesForAxis:()=>d,startForAxis:()=>f,stopForAxis:()=>m,isSliceContinous:()=>g,computeFlatOffset:()=>y,parseSliceParams:()=>b,sliceInfo:()=>x});var s=n(569);function r(e,t,n){const r=e.shape.length;s.hu(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),s.hu(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)s.hu(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function a(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function i(e,t,n){const s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function o(e,t,n,s){const r=[...e];for(let e=r.length;e<s.length;e++)r.push(1);for(let e=0;e<n;e++)0===e?r[t]=1:(r.splice(t,0,1),r.pop());return r}function u(e,t,n){return n<=e?n:n-(t-1)}function l(e,t){const n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function c(e,t,n,s,r,a,i,u,l){const c=e.length;let g=new Array(c),y=new Array(c),b=new Array(c);if(t.length&&n>0){const l=t[0],c=n+1;g=h(i,l,c,s,e),y=p(u,l,c,r,e),b=o(a,l,c,e)}else for(let t=0;t<c;t++)g[t]=f(i,s,a,e,t,l),y[t]=m(u,r,a,e,t,l),b[t]=d(a,t,l);return{begin:g,end:y,strides:b}}function h(e,t,n,s,r){const a=[...r],i=l(n,t);for(let r=0;r<a.length;r++)if(i.indexOf(r)>-1)a[r]=0;else{const i=u(t,n,r);let o=s[i];e&1<<i&&(o=0),a[r]=o}return a}function p(e,t,n,r,a){const i=[...a],o=l(n,t);for(let s=0;s<i.length;s++)if(o.indexOf(s)>-1)i[s]=Number.MAX_SAFE_INTEGER;else{const a=u(t,n,s);let o=r[a];e&1<<a&&(o=Number.MAX_SAFE_INTEGER),i[s]=o}for(let e=0;e<i.length;e++){const t=a[e];i[e]<0&&(i[e]+=t),i[e]=s.uZ(0,i[e],a[e])}return i}function d(e,t,n){let s=e[t];return(n&1<<t||null==s)&&(s=1),s}function f(e,t,n,r,a,i){let o=t[a];const u=n[a]||1;(e&1<<a||i&1<<a||null==o)&&(o=u>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[a];return o<0&&(o+=l),o=s.uZ(0,o,l-1),o}function m(e,t,n,r,a,i){let o=t[a];const u=n[a]||1;(e&1<<a||i&1<<a||null==o)&&(o=u>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[a];return o<0&&(o+=l),o=u>0?s.uZ(0,o,l):s.uZ(-1,o,l-1),o}function g(e,t,n){let s=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){s=e;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function y(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function b(e,t,n){let r;const a=e.shape.length;let i;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{s.hu(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(s.hu(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,i]}function x(e,t,n,s,r,o,u,l,h){let p=t.slice(),d=n.slice(),f=s;null==s&&(f=new Array(p.length));const m=a(u);if(m.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==u&&0!==l)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==u&&0!==h)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const g=e.length-p.length,y=a(l),b=e.slice();y.forEach((e=>{p[e]=0,d[e]=1,b.splice(e,0,1)}));const{begin:x,end:v,strides:w}=c(b,m,g,p,d,f,r,o,u);p=x,d=v,f=w;const k=a(h);k.forEach((e=>{d[e]=p[e]+1,f[e]=1}));const I=i(p,d,f),S=I.filter(((e,t)=>-1===k.indexOf(t)));return{nonStrided:f.every((e=>1===e)),$begin:p,$end:d,$strides:f,size:I,newShape:b,outShape:S}}},682:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({softmax_:function(e,t=-1){const n=(0,a._1)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const i={logits:n},o={dim:t};return s.BV.runKernel(r.Gc,i,o)}})},3694:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({softplus_:function(e){const t={x:(0,a._1)(e,"x","softplus")};return s.BV.runKernel(r.MR,t)}})},7918:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({spaceToBatchND_:function(e,t,n){const o=(0,a._1)(e,"x","spaceToBatchND");i.hu(o.rank>=1+t.length,(()=>`input rank ${o.rank} should be > than [blockShape] ${t.length}`)),i.hu(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),i.hu(o.shape.reduce(((e,s,r)=>r>0&&r<=t.length?e&&(s+n[r-1][0]+n[r-1][1])%t[r-1]==0:e),!0),(()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const u={x:o},l={blockShape:t,paddings:n};return s.BV.runKernel(r.TQ,u,l)}})},7020:(e,t,n)=>{"use strict";n.d(t,{k:()=>i});var s=n(7097),r=n(9121),a=n(569);const i=(0,n(2668).op)({fft_:function(e){(0,a.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return s.BV.runKernel(r.vw,t)}})},8447:(e,t,n)=>{"use strict";n.d(t,{S:()=>i});var s=n(7097),r=n(9121),a=n(569);const i=(0,n(2668).op)({ifft_:function(e){(0,a.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return s.BV.runKernel(r.Qg,t)}})},4415:(e,t,n)=>{"use strict";n.d(t,{w:()=>f});var s=n(1661),r=n(6884),a=n(4386),i=n(4841),o=n(2668),u=n(766),l=n(4968),c=n(7486),h=n(9494),p=n(2676),d=n(8447);const f=(0,o.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let o;if(t<=2){const s=(0,l.X)(e,[n,t]);o=(0,d.S)(s)}else{const f=[n,2*(t-1)],m=(0,l.X)((0,u.k)(e),[n,t]),g=(0,l.X)((0,a.a)(e),[n,t]),y=(0,c.G)((0,p.t)(m,[0,1],[n,t-2]),1),b=(0,i.d)((0,c.G)((0,p.t)(g,[0,1],[n,t-2]),1),(0,h.i)(-1)),x=(0,r.z)([m,y],1),v=(0,r.z)([g,b],1),w=(0,l.X)((0,s.P)(x,v),[f[0],f[1]]);o=(0,d.S)(w)}if(o=(0,u.k)(o),3===e.rank&&0!==e.shape[0]){const t=o,n=e.shape[0];o=(0,l.X)(o,[n,o.shape[0]/n,o.shape[1]]),t.dispose()}return o}})},3710:(e,t,n)=>{"use strict";n.d(t,{Q:()=>m});var s=n(569),r=n(1661),a=n(6884),i=n(4386),o=n(2668),u=n(766),l=n(4968),c=n(2676),h=n(8644),p=n(9640),d=n(6577),f=n(7020);const m=(0,o.op)({rfft_:function(e,t){(0,s.hu)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const o=e.size/n;let m;if(null!=t&&t<n){const s=e.shape.map((e=>0)),r=e.shape.map((e=>e));r[e.shape.length-1]=t,m=(0,c.t)(e,s,r),n=t}else if(null!=t&&t>n){const s=e.shape.map((e=>e));s[e.shape.length-1]=t-n,m=(0,a.z)([e,(0,p.l)(s)],e.shape.length-1),n=t}else m=e;const g=(0,d.P)(m),y=(0,l.X)((0,r.P)(m,g),[o,n]),b=(0,f.k)(y),x=Math.floor(n/2)+1,v=(0,u.k)(b),w=(0,i.a)(b),k=(0,h.V)(v,[x,n-x],v.shape.length-1),I=(0,h.V)(w,[x,n-x],w.shape.length-1),S=m.shape.slice();return S[m.shape.length-1]=x,(0,l.X)((0,r.P)(k[0],I[0]),S)}})},8644:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({split_:function(e,t,n=0){const i={x:(0,a._1)(e,"x","split")},o={numOrSizeSplits:t,axis:n};return s.BV.runKernel(r.L8,i,o)}})},3261:(e,t,n)=>{"use strict";n.d(t,{_:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({sqrt_:function(e){const t={x:(0,a._1)(e,"x","sqrt")};return s.BV.runKernel(r.FK,t)}})},248:(e,t,n)=>{"use strict";n.d(t,{h:()=>a});var s=n(7097),r=n(3740);const a=(0,n(2668).op)({square_:function(e){const t=(0,r._1)(e,"x","square");return s.BV.runKernel("Square",{x:t},{})}})},5265:(e,t,n)=>{"use strict";n.d(t,{$:()=>u});var s=n(7097),r=n(9121),a=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({squaredDifference_:function(e,t){let n=(0,i._1)(e,"a","squaredDifference"),u=(0,i._1)(t,"b","squaredDifference");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return s.BV.runKernel(r._t,l,{})}})},9590:(e,t,n)=>{"use strict";n.d(t,{L:()=>o});var s=n(3740),r=n(569),a=n(2668),i=n(4968);const o=(0,a.op)({squeeze_:function(e,t){const n=(0,s._1)(e,"x","squeeze");return(0,i.X)(n,(0,r.bp)(n.shape,t).newShape)}})},2991:(e,t,n)=>{"use strict";n.d(t,{k:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({stack_:function(e,t=0){const n=(0,a.sI)(e,"tensors","stack","string_or_numeric");i.hu(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&i.hu(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const o=n,u={axis:t};return s.BV.runKernel(r.Qi,o,u)}})},1901:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({step_:function(e,t=0){const n={x:(0,a._1)(e,"x","step")},i={alpha:t};return s.BV.runKernel(r.h8,n,i)}})},5158:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({stridedSlice_:function(e,t,n,i,o=0,u=0,l=0,c=0,h=0){const p={x:(0,a._1)(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:i,beginMask:o,endMask:u,ellipsisMask:l,newAxisMask:c,shrinkAxisMask:h};return s.BV.runKernel(r.m2,p,d)}})},827:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var s=n(7097),r=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({sub_:function(e,t){let n=(0,i._1)(e,"a","sub"),o=(0,i._1)(t,"b","sub");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return s.BV.runKernel(r.Tr,u)}})},5475:(e,t,n)=>{"use strict";n.d(t,{S:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(2271);const o=(0,n(2668).op)({sum_:function(e,t=null,n=!1){let o=(0,a._1)(e,"x","sum");"bool"===o.dtype&&(o=(0,i.p)(o,"int32"));const u={x:o},l={axis:t,keepDims:n};return s.BV.runKernel(r.GB,u,l)}})},1173:(e,t,n)=>{"use strict";n.d(t,{O:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({tan_:function(e){const t={x:(0,a._1)(e,"x","tan")};return s.BV.runKernel(r.sE,t)}})},1869:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({tanh_:function(e){const t={x:(0,a._1)(e,"x","tanh")};return s.BV.runKernel(r.MI,t)}})},701:(e,t,n)=>{"use strict";n.d(t,{X:()=>a});var s=n(3740),r=n(7852);function a(e,t,n){const a=(0,s.C)(e,n);return(0,r.H)(e,t,a,n)}},6092:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var s=n(3740),r=n(569),a=n(7852);function i(e,t){(0,r.Cq)(e);const n=(0,s.C)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,a.H)(e,null,n,t)}},7852:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var s=n(7097),r=n(569),a=n(9122);function i(e,t,n,i){if(null==i&&(i=(0,r.D2)(e)),"complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!(0,r.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,r.Mu)(t);const e=(0,r.NA)(t),s=(0,r.NA)(n);(0,r.hu)(e===s,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${s}`));for(let e=0;e<n.length;++e){const s=n[e],a=e!==n.length-1||s!==(0,r.NA)(t.slice(e));(0,r.hu)(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,r.fU)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==i?(0,a.toTypedArray)(e,i):(0,r.xH)(e,[],!0),s.BV.makeTensor(e,t,i)}},7501:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({tile_:function(e,t){const n=(0,a._1)(e,"x","tile","string_or_numeric");i.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const o={x:n},u={reps:t};return s.BV.runKernel(r.n9,o,u)}})},3243:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({topk_:function(e,t=1,n=!0){const i=(0,a._1)(e,"x","topk");if(0===i.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const o=i.shape[i.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);const u={x:i},l={k:t,sorted:n},[c,h]=s.BV.runKernel(r.cW,u,l);return{values:c,indices:h}}})},9065:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({transpose_:function(e,t){const n=(0,a._1)(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),i.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{i.hu(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const o={x:n},u={perm:t};return s.BV.runKernel(r.G3,o,u)}})},3596:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var s=n(2657),r=n(2668),a=n(6845);const i=(0,r.op)({truncatedNormal_:function(e,t=0,n=1,r,i){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const o=new a.Yi(t,n,r,!0,i),u=(0,s.f)(e,r);for(let e=0;e<u.values.length;e++)u.values[e]=o.nextValue();return u.toTensor()}})},9608:(e,t,n)=>{"use strict";n.d(t,{T:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({unique_:function(e,t=0){const n=(0,a._1)(e,"x","unique","string_or_numeric");(0,i.hu)(n.rank>0,(()=>"The input tensor must be at least 1D"));const o={x:n},u={axis:t},[l,c]=s.BV.runKernel(r.kp,o,u);return{values:l,indices:c}}})},4136:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({unstack_:function(e,t=0){const n=(0,a._1)(e,"x","unstack","string_or_numeric");i.hu(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const o={value:n},u={axis:t};return s.BV.runKernel(r.To,o,u)}})},5912:(e,t,n)=>{"use strict";n.d(t,{a:()=>u});var s=n(7097),r=n(9121),a=n(3740),i=n(8247),o=n(2200);const u=(0,n(2668).op)({where_:function(e,t,n){const u=(0,a._1)(t,"a","where"),l=(0,a._1)(n,"b","where"),c=(0,a._1)(e,"condition","where","bool"),h=(0,o.$N)((0,o.$N)(c.shape,u.shape),l.shape),p={condition:(0,i.U)(c,h),t:(0,i.U)(u,h),e:(0,i.U)(l,h)};return s.BV.runKernel(r.Ph,p)}})},9640:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var s=n(7097),r=n(569),a=n(1661);function i(e,t="float32"){if("complex64"===t){const t=i(e,"float32"),n=i(e,"float32");return(0,a.P)(t,n)}const n=(0,r.wT)((0,r.NA)(e),t);return s.BV.makeTensor(n,e,t)}},6577:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({zerosLike_:function(e){const t={x:(0,a._1)(e,"x","zerosLike")};return s.BV.runKernel(r.Ru,t)}})},4077:(e,t,n)=>{"use strict";n.d(t,{es:()=>b,YD:()=>h,_w:()=>v,t3:()=>x,FZ:()=>y,Vp:()=>g,Vi:()=>m});var s=n(5938),r=n(569);function a(e,t,n,s){const a=(0,r.e3)(t),o=function(e,t,n,s){const a=(0,r.NA)(t),o=s[s.length-1],u=new Array(o).fill(0),c=t.length,h="complex64"===n?l(e):e;if(c>1)for(let e=0;e<a/o;e++){const t=e*o;for(let e=0;e<o;e++)u[e]=Math.max(u[e],i(h[t+e],0,n).length)}return u}(e,t,n,a),c=t.length,h=u(e,t,n,a,o),p=["Tensor"];return s&&(p.push(`  dtype: ${n}`),p.push(`  rank: ${c}`),p.push(`  shape: [${t}]`),p.push("  values:")),p.push(h.map((e=>"    "+e)).join("\n")),p.join("\n")}function i(e,t,n){let s;return s=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:(0,r.HD)(e)?`'${e}'`:"bool"===n?o(e):parseFloat(e.toFixed(7)).toString(),(0,r.oj)(s,t)}function o(e){return 0===e?"false":"true"}function u(e,t,n,s,r,a=!0){const c="complex64"===n?2:1,h=t[0],p=t.length;if(0===p)return"complex64"===n?[i(l(e)[0],0,n)]:"bool"===n?[o(e[0])]:[e[0].toString()];if(1===p){if(h>20){const t=3*c;let s=Array.from(e.slice(0,t)),a=Array.from(e.slice((h-3)*c,h*c));return"complex64"===n&&(s=l(s),a=l(a)),["["+s.map(((e,t)=>i(e,r[t],n))).join(", ")+", ..., "+a.map(((e,t)=>i(e,r[h-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?l(e):Array.from(e)).map(((e,t)=>i(e,r[t],n))).join(", ")+"]"]}const d=t.slice(1),f=s.slice(1),m=s[0]*c,g=[];if(h>20){for(let t=0;t<3;t++){const s=t*m,a=s+m;g.push(...u(e.slice(s,a),d,n,f,r,!1))}g.push("...");for(let t=h-3;t<h;t++){const s=t*m,a=s+m;g.push(...u(e.slice(s,a),d,n,f,r,t===h-1))}}else for(let t=0;t<h;t++){const s=t*m,a=s+m;g.push(...u(e.slice(s,a),d,n,f,r,t===h-1))}const y=2===p?",":"";g[0]="["+g[0]+y;for(let e=1;e<g.length-1;e++)g[e]=" "+g[e]+y;let b=",\n";for(let e=2;e<p;e++)b+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(a?"":b),g}function l(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var c=n(9122);class h{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=r.NA(e),null!=n){const e=n.length;r.hu(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||r.rQ(t,this.size),this.strides=(0,r.e3)(e)}set(e,...t){0===t.length&&(t=[0]),r.hu(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return p().makeTensor(this.values,this.shape,this.dtype)}}let p=null,d=null,f=null;function m(e){p=e}function g(e){d=e}function y(e){f=e}class b{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=r.NA(e),this.strides=(0,r.e3)(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return d.buffer(this.shape,this.dtype,e)}bufferSync(){return d.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,r.GX)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,r.GX)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=p().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>c.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=p().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>c.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await p().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(p().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return d.print(this,e)}clone(){return this.throwIfDisposed(),d.clone(this)}toString(e=!1){return a(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),d.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),p().makeVariable(this,e,t,n)}}function x(){return(0,s.R)("Tensor",(()=>b))}Object.defineProperty(b,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),x();class v extends b{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!r.cO(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);p().disposeTensor(this),this.dataId=e.dataId,p().incRef(this,null)}dispose(){p().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(v,Symbol.hasInstance,{value:e=>e instanceof b&&null!=e.assign&&e.assign instanceof Function})},747:(e,t,n)=>{"use strict";n.r(t),n.d(t,{makeTypesMatch:()=>i,assertTypesMatch:()=>o,isTensorInList:()=>u,getTensorsInContainer:()=>l});var s=n(4077),r=n(1221),a=n(569);function i(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,r.x8)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function o(e,t){(0,a.hu)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function u(e,t){return t.some((t=>t.id===e.id))}function l(e){const t=[];return c(e,t,new Set),t}function c(e,t,n){if(null==e)return;if(e instanceof s.es)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const e in a){const s=a[e];n.has(s)||(n.add(s),c(s,t,n))}}},3740:(e,t,n)=>{"use strict";n.d(t,{C:()=>u,_1:()=>h,sI:()=>p});var s=n(7097),r=n(2885),a=n(4077),i=n(569),o=n(9122);function u(e,t){let n=e;if((0,i.fU)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const s=[];for(;Array.isArray(n)||(0,i.fU)(n)&&"string"!==t;)s.push(n.length),n=n[0];return Array.isArray(e)&&(0,r.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&l(e,s,[]),s}function l(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,i.fU)(e))return void(0,i.hu)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,i.hu)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,i.hu)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const s=t.slice(1);for(let t=0;t<e.length;++t)l(e[t],s,n.concat(t))}function c(e,t,n,s){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function h(e,t,n,r="numeric"){if(e instanceof a.es)return c(r,e.dtype,t,n),e;let l=(0,i.D2)(e);if("string"!==l&&["bool","int32","float32"].indexOf(r)>=0&&(l=r),c(r,l,t,n),null==e||!(0,i.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const s=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${s}'`)}const h=u(e,l);(0,i.fU)(e)||Array.isArray(e)||(e=[e]);const p="string"!==l?(0,o.toTypedArray)(e,l):(0,i.xH)(e,[],!0);return s.BV.makeTensor(p,h,l)}function p(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,r)=>h(e,`${t}[${r}]`,n,s)))}},1221:(e,t,n)=>{"use strict";var s,r,a,i,o;n.d(t,{x8:()=>l,z4:()=>c}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(s||(s={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(i||(i={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(o||(o={}));const u={float32:i,int32:r,bool:a,complex64:o};function l(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return u[e][t]}function c(e){return l(e,"int32")}},9122:(e,t,n)=>{"use strict";n.r(t),n.d(t,{arraysEqual:()=>r.cO,assert:()=>r.hu,assertNonNegativeIntegerDimensions:()=>r.Mu,assertNonNull:()=>r.Cq,assertShapesMatch:()=>r.k5,bytesFromStringArray:()=>r.Ub,bytesPerElement:()=>r.bT,checkConversionForErrors:()=>r.D5,clamp:()=>r.uZ,computeStrides:()=>r.e3,createScalarValue:()=>x,createShuffledIndices:()=>r.U$,decodeString:()=>S,distSquared:()=>r.E7,encodeString:()=>I,fetch:()=>k,fingerPrint64:()=>b,flatten:()=>r.xH,getArrayFromDType:()=>r.rQ,getTypedArrayFromDType:()=>r.WP,hasEncodingLoss:()=>r.QB,hexToLong:()=>o,indexToLoc:()=>r.NE,inferDtype:()=>r.D2,inferFromImplicitShape:()=>r.JZ,isBoolean:()=>r.jn,isFunction:()=>r.mf,isInt:()=>r.GN,isNumber:()=>r.hj,isPromise:()=>r.tI,isScalarShape:()=>r.N9,isString:()=>r.HD,isTypedArray:()=>r.fU,isValidDtype:()=>r.LP,locToIndex:()=>r.qy,makeOnesTypedArray:()=>r.p8,makeZerosNestedTypedArray:()=>r.l6,makeZerosTypedArray:()=>r.wT,nearestDivisor:()=>r.jP,nearestLargerEven:()=>r.nY,now:()=>w,parseAxisParam:()=>r.EC,randUniform:()=>r.bj,repeatedTry:()=>r.WD,rightPad:()=>r.oj,shuffle:()=>r.TV,shuffleCombo:()=>r.d7,sizeFromShape:()=>r.NA,sizeToSquarishShape:()=>r.YP,squeezeShape:()=>r.bp,sum:()=>r.Sm,swap:()=>r.LF,tanh:()=>r.AE,toNestedArray:()=>r.GX,toTypedArray:()=>v});var s=n(2885),r=n(569),a=n(3720);const i=n.n(a)()||a;function o(e){return i.fromString(e,!0,16)}const u=o("c3a5c85c97cb3127"),l=o("b492b66fbe98f273"),c=o("9ae16a3b2f90404f");function h(e){return e.xor(e.shru(47))}function p(e,t,n){const s=e.slice(t,t+n);return i.fromBytes(Array.from(s),!0,!0)}function d(e,t){return p(e,t,8)}function f(e,t){return p(e,t,4)}function m(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function g(e,t,n=o("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function y(e,t,n,s){return function(e,t,n,s,r,a){r=r.add(e),a=m(a.add(r).add(s),21);const i=r;return r=(r=r.add(t)).add(n),a=a.add(m(r,44)),[r.add(s),a.add(i)]}(d(e,t),d(e,t+8),d(e,t+16),d(e,t+24),n,s)}function b(e,t=e.length){const n=i.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=c.add(2*t),s=d(e,0).add(c),r=d(e,t-8);return g(m(r,37).mul(n).add(s),m(s,25).add(r).mul(n),n)}if(t>=4){const n=c.add(2*t);return g(f(e,0).shl(3).add(t),f(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),s=t+(e[t-1]<<2);return h(c.mul(n).xor(u.mul(s))).mul(c)}return c}(e,t):function(e,t=e.length){const n=c.add(2*t),s=d(e,0).mul(l),r=d(e,8),a=d(e,t-8).mul(n),i=d(e,t-16).mul(c);return g(m(s.add(r),43).add(m(a,30)).add(i),s.add(m(r.add(c),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=c.add(2*t),s=d(e,0).mul(c),r=d(e,8),a=d(e,t-8).mul(n),i=d(e,t-16).mul(c),o=m(s.add(r),43).add(m(a,30)).add(i),u=g(o,s.add(m(r.add(c),18)).add(a),n),l=d(e,16).mul(n),h=d(e,24),p=o.add(d(e,t-32)).mul(n),f=u.add(d(e,t-24)).mul(n);return g(m(l.add(h),43).add(m(p,30)).add(f),l.add(m(h.add(s),18)).add(p),n)}(e,t);let s=n,r=n.mul(l).add(113),a=h(r.mul(c).add(113)).mul(c),o=[i.UZERO,i.UZERO],p=[i.UZERO,i.UZERO];s=s.mul(c).add(d(e,0));let b=0;const x=64*(t-1>>6),v=x+(t-1&63)-63;do{s=m(s.add(r).add(o[0]).add(d(e,b+8)),37).mul(l),r=m(r.add(o[1]).add(d(e,b+48)),42).mul(l),s=s.xor(p[1]),r=r.add(o[0]).add(d(e,b+40)),a=m(a.add(p[0]),33).mul(l),o=y(e,b,o[1].mul(l),s.add(p[0])),p=y(e,b+32,a.add(p[1]),r.add(d(e,b+16))),[a,s]=[s,a],b+=64}while(b!==x);const w=l.add(a.and(255).shl(1));return b=v,p[0]=p[0].add(t-1&63),o[0]=o[0].add(p[0]),p[0]=p[0].add(o[0]),s=m(s.add(r).add(o[0]).add(d(e,b+8)),37).mul(w),r=m(r.add(o[1]).add(d(e,b+48)),42).mul(w),s=s.xor(p[1].mul(9)),r=r.add(o[0].mul(9).add(d(e,b+40))),a=m(a.add(p[0]),33).mul(w),o=y(e,b,o[1].mul(w),s.add(p[0])),p=y(e,b+32,a.add(p[1]),r.add(d(e,b+16))),[a,s]=[s,a],g(g(o[0],p[0],w).add(h(r).mul(u)).add(a),g(o[1],p[1],w).add(s),w)}function x(e,t){return"string"===t?I(e):v([e],t)}function v(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=r.xH(e)),(0,s.OB)().getBool("DEBUG")&&r.D5(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function w(){return(0,s.OB)().platform.now()}function k(e,t){return(0,s.OB)().platform.fetch(e,t)}function I(e,t="utf-8"){return t=t||"utf-8",(0,s.OB)().platform.encode(e,t)}function S(e,t="utf-8"){return t=t||"utf-8",(0,s.OB)().platform.decode(e,t)}},569:(e,t,n)=>{"use strict";function s(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,o(e,t,n)}function r(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,s=0;for(;n>0;)s=Math.random()*n|0,n--,o(e,n,s),o(t,n,s)}function a(e,t,n){return Math.max(e,Math.min(t,n))}function i(e){return e%2==0?e:e+1}function o(e,t,n){const s=e[t];e[t]=e[n],e[n]=s}function u(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function l(e,t){const n=Math.random();return t*n+(1-n)*e}function c(e,t){let n=0;for(let s=0;s<e.length;s++){const r=Number(e[s])-Number(t[s]);n+=r*r}return n}function h(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function p(e,t,n=""){h(y(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function d(e){h(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||R(e)&&!n)for(let s=0;s<e.length;++s)f(e[s],t,n);else t.push(e);return t}function m(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function g(e){return 0===e.length}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function b(e){return e%1==0}function x(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function v(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return s(t),t}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function I(e,t=(e=>0),n){return new Promise(((s,r)=>{let a=0;const i=()=>{if(e())return void s();a++;const o=t(a);null!=n&&a>=n?r():setTimeout(i,o)};i()}))}function S(e,t){let n=1,s=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${t}`);s=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===s){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const r=e.slice();return r[s]=t/n,r}function N(e,t){const n=t.length;return h((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),h(e.every((e=>b(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function T(e,t){const n=[],s=[],r=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||r?null:N(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),s.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),s.push(t))}return{newShape:n,keptDims:s}}function C(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function $(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function E(e,t){for(let n=0;n<e.length;n++){const s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function A(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function D(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function R(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function _(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function F(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function O(e){return"string"==typeof e||e instanceof String}function M(e){return"boolean"==typeof e}function L(e){return"number"==typeof e}function z(e){return Array.isArray(e)?z(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":L(e)?"float32":O(e)?"string":M(e)?"bool":"float32"}function B(e){return!!(e&&e.constructor&&e.call&&e.apply)}function P(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function U(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function W(e,t,n,s=!1){const r=new Array;if(1===t.length){const a=t[0]*(s?2:1);for(let t=0;t<a;t++)r[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(s?2:1);for(let t=0;t<a;t++)r[t]=W(e+t*o,i,n,s)}return r}function V(e,t,n=!1){if(0===e.length)return t[0];const s=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===s)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return W(0,e,t,n)}function H(e,t){const n=G(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function G(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function j(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return V(e,new Float32Array(n));if("int32"===t)return V(e,new Int32Array(n));if("bool"===t)return V(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function X(e){e.forEach((t=>{h(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function q(e,t,n){if(0===t)return 0;if(1===t)return e[0];let s=e[e.length-1];for(let t=0;t<e.length-1;++t)s+=n[t]*e[t];return s}function K(e,t,n){if(0===t)return[];if(1===t)return[e];const s=new Array(t);for(let t=0;t<s.length-1;++t)s[t]=Math.floor(e/n[t]),e-=s[t]*n[t];return s[s.length-1]=e,s}function Y(e){return e&&e.then&&"function"==typeof e.then}n.d(t,{TV:()=>s,d7:()=>r,uZ:()=>a,nY:()=>i,LF:()=>o,Sm:()=>u,bj:()=>l,E7:()=>c,hu:()=>h,k5:()=>p,Cq:()=>d,xH:()=>f,NA:()=>m,N9:()=>g,cO:()=>y,GN:()=>b,AE:()=>x,YP:()=>v,U$:()=>w,oj:()=>k,WD:()=>I,JZ:()=>S,EC:()=>N,bp:()=>T,WP:()=>C,rQ:()=>$,D5:()=>E,LP:()=>A,QB:()=>D,fU:()=>R,bT:()=>_,Ub:()=>F,HD:()=>O,jn:()=>M,hj:()=>L,D2:()=>z,mf:()=>B,jP:()=>P,e3:()=>U,GX:()=>V,p8:()=>H,wT:()=>G,l6:()=>j,Mu:()=>X,qy:()=>q,NE:()=>K,tI:()=>Y})},7213:(e,t,n)=>{"use strict";n.d(t,{aTG:()=>s,FBF:()=>oo,glt:()=>r.glt,XeE:()=>r.XeE});var s={};n.r(s),n.d(s,{CSVDataset:()=>Zl,Dataset:()=>Ul,FileDataSource:()=>hc,TextLineDataset:()=>jl,URLDataSource:()=>pc,array:()=>Vl,csv:()=>dc,func:()=>fc,generator:()=>mc,microphone:()=>yc,version_data:()=>bc,webcam:()=>gc,zip:()=>Hl});var r=n(1140),a=n(9121),i=n(2271),o=n(4841),u=n(1901);const l={kernelName:a.SY,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.d)(e,(0,u.N)((0,i.p)(n,"float32"),-1))}}};var c=n(1274),h=n(7370),p=n(9494),d=n(3261),f=n(248),m=n(827);const g={kernelName:a.VG,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,f.h)((0,i.p)(n,"float32")),s=(0,d._)((0,m.l)((0,p.i)(1),t));return(0,h.W)((0,c.h)(e,s))}}}},y={kernelName:a.Sp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,d._)((0,m.l)((0,f.h)((0,i.p)(n,"float32")),1));return(0,c.h)(e,t)}}}};var b=n(2200),x=n(4968),v=n(5475);const w={kernelName:a.mm,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=b.$N(n.shape,s.shape);return{a:()=>{let t=e;const s=b.RR(n.shape,r);return s.length>0&&(t=(0,v.S)(t,s)),(0,x.X)(t,n.shape)},b:()=>{let t=e;const n=b.RR(s.shape,r);return n.length>0&&(t=(0,v.S)(t,n)),(0,x.X)(t,s.shape)}}}},k={kernelName:a.Xz,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,s)=>{n[s]=()=>e.clone()})),n}};var I=n(6577);const S={kernelName:a.sJ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,I.P)(n)}}},N={kernelName:a.aJ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,I.P)(n)}}},T={kernelName:a.M2,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.h)(e,(0,d._)((0,m.l)((0,p.i)(1),(0,f.h)((0,i.p)(n,"float32")))))}}};var C=n(6407);const $={kernelName:a.qw,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,d._)((0,C.I)((0,p.i)(1),(0,f.h)((0,i.p)(n,"float32"))));return(0,c.h)(e,t)}}}},E={kernelName:a.QC,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,b.$N)(n.shape,s.shape);return{a:()=>{const t=(0,C.I)((0,f.h)(n),(0,f.h)(s));let a=(0,o.d)(e,(0,c.h)(s,t));const i=(0,b.RR)(n.shape,r);return i.length>0&&(a=(0,v.S)(a,i)),(0,x.X)(a,n.shape)},b:()=>{const t=(0,C.I)((0,f.h)(n),(0,f.h)(s));let a=(0,h.W)((0,o.d)(e,(0,c.h)(n,t)));const i=(0,b.RR)(s.shape,r);return i.length>0&&(a=(0,v.S)(a,i)),(0,x.X)(a,s.shape)}}}},A={kernelName:a.jM,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.h)(e,(0,C.I)((0,f.h)((0,i.p)(n,"float32")),1))}}},D={kernelName:a.Oy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.h)(e,(0,m.l)((0,p.i)(1),(0,f.h)((0,i.p)(n,"float32"))))}}};var R=n(7097),_=n(3740),F=n(569),O=n(2668);const M=(0,O.op)({avgPool3dGrad_:function(e,t,n,s,r,i){const o=(0,_._1)(e,"dy","avgPool3dGrad"),u=(0,_._1)(t,"input","avgPool3dGrad");let l=o,c=u,h=!1;4===u.rank&&(h=!0,l=(0,x.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=(0,x.X)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),F.hu(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),F.hu(5===c.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`)),null!=i&&F.hu(F.GN(r),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const p={dy:l,input:c},d={filterSize:n,strides:s,pad:r,dimRoundingMode:i},f=R.BV.runKernel(a.IM,p,d);return h?(0,x.X)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),L={kernelName:a._k,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>M(e,s,r,a,i,o)}}},z=(0,O.op)({avgPoolGrad_:function(e,t,n,s,r){const i=(0,_._1)(e,"dy","avgPoolGrad"),o=(0,_._1)(t,"input","avgPoolGrad");F.hu(o.rank===i.rank,(()=>`Rank of input (${o.rank}) does not match rank of dy (${i.rank})`));let u=o,l=i,c=!1;3===o.rank&&(c=!0,u=(0,x.X)(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=(0,x.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]])),F.hu(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),F.hu(4===u.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${u.rank}.`));const h={dy:l,input:u},p={filterSize:n,strides:s,pad:r},d=R.BV.runKernel(a.RO,h,p);return c?(0,x.X)(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),B={kernelName:a.Jh,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,pad:i}=n;return{x:()=>z(e,s,r,a,i)}}};var P=n(8687);const U={kernelName:a.XL,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[s,r]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>(0,P.O)(e,r,!1,!1),b:()=>(0,P.O)(e,s,!0,!1)}:a&&!i?{a:()=>(0,P.O)(r,e,!1,!0),b:()=>(0,P.O)(s,e,!1,!1)}:{a:()=>(0,P.O)(r,e,!0,!0),b:()=>(0,P.O)(e,s,!0,!0)}:{a:()=>(0,P.O)(e,r,!1,!0),b:()=>(0,P.O)(s,e,!0,!1)}}};var W=n(7918);const V={kernelName:a.zw,gradFunc:(e,t,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>(0,W.f)(e,s,r)}}},H={kernelName:a.Ly,gradFunc:(e,t,n)=>{const s=n,r=s.inputShape,a=s.shape,i=Array.from(a);for(let e=r.length-1;e>=0;e--)if(r[e]===a[e])i[e]=1;else if(1!==r[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>(0,v.S)(e,o,!0)}}},G={kernelName:a.RF,gradFunc:e=>({x:()=>e.clone()})},j={kernelName:a.gJ,gradFunc:e=>({x:()=>(0,I.P)(e)})};var X=n(7630),q=n(624),K=n(2856),Y=n(5912);const Q={kernelName:a.xn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>(0,Y.a)((0,K.H)((0,X.b)(s,r),(0,q.z)(s,a)),e,(0,I.P)(e))}}},J={kernelName:a.yj,inputsToSave:["x"],gradFunc:l.gradFunc};var Z=n(8644);const ee={kernelName:a.Eh,saveAllInputs:!0,gradFunc:(e,t,n)=>{const s=t.map((e=>e.shape)),{axis:r}=n,a=(0,F.EC)(r,t[0].shape)[0],i=s.map((e=>e[a]));return(0,Z.V)(e,i,a).map((e=>()=>e))}};var te=n(6013),ne=n(9832),se=n(2582);const re={kernelName:a.mh,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{dilations:a,strides:i,pad:o,dataFormat:u}=n;return F.hu(se.I0(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>(0,ne._)(s.shape,e,r,i,o,u),filter:()=>(0,te.p)(s,e,r.shape,i,o,u)}}};var ae=n(4794);const ie={kernelName:a.wm,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>(0,ae.T)(e,r,a,i,o,1,u),filter:()=>(0,te.p)(e,s,r.shape,a,i,o,u)}}},oe=(0,O.op)({conv3DBackpropFilter_:function(e,t,n,s,r){let i=e;4===e.rank&&(i=(0,x.X)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;4===o.rank&&(o=(0,x.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),F.hu(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),F.hu(5===o.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`)),F.hu(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),F.hu(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),F.hu(o.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`));const u={x:i,dy:o},l={strides:s,pad:r,filterShape:n};return R.BV.runKernel(a.o2,u,l)}});var ue=n(7594);const le={kernelName:a.x1,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a}=n;F.hu((0,se.I0)(s),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const[i,o]=t;return{x:()=>(0,ue._)(i.shape,e,o,r,a),filter:()=>oe(i,e,o.shape,r,a)}}};var ce=n(9331);const he={kernelName:a.mc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.d)((0,h.W)((0,ce.O)((0,i.p)(n,"float32"))),e)}}};var pe=n(3254);const de={kernelName:a.TR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.d)((0,pe.R)((0,i.p)(n,"float32")),e)}}};var fe=n(3591),me=n(7405),ge=n(9065);const ye={kernelName:a.iH,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r,exclusive:a,reverse:i}=n;return{x:()=>{const t=(0,fe.Q3)([r],s.rank);let n=(0,me.z)(e,r,a,!i);return null!=t&&(n=(0,ge.p)(n,t)),n}}}};var be=n(8098),xe=n(4375);const ve={kernelName:a.ci,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a,dimRoundingMode:i}=n,o=null==s?[1,1]:s;F.hu(se.I0(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return F.hu(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),F.hu(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),F.hu(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),F.hu(se.jT(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),null!=i&&F.hu(F.GN(a),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`)),{x:()=>(0,xe.v)(u.shape,e,l,r,a,o,i),filter:()=>(0,be.z)(u,e,l.shape,r,a,o,i)}}},we={kernelName:a.p4,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,i={x:s,filter:r,dy:e},o={x:s,filter:r,dy:e};return{x:()=>R.BV.runKernel(a.ek,i,n),filter:()=>R.BV.runKernel(a.Vn,o,n)}}},ke={kernelName:a.SX,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,s={dy:e,y:n};return{x:()=>R.BV.runKernel(a.HE,s)}}};var Ie=n(4842);const Se={kernelName:a.Om,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=(0,o.d)((0,Ie.Q)((0,h.W)((0,f.h)(n))),2/Math.sqrt(Math.PI));return{x:()=>(0,o.d)(e,s)}}},Ne={kernelName:a.NE,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.d)(e,n)}}},Te={kernelName:a.YF,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>(0,x.X)(e,n.shape)}}},Ce={kernelName:a.Y0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.d)(e,(0,Ie.Q)(n))}}},$e={kernelName:a.OR,gradFunc:e=>({x:()=>(0,I.P)(e)})},Ee={kernelName:a.je,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,b.$N)(n.shape,s.shape);return{a:()=>{const t=(0,c.h)(e,(0,i.p)(s,"float32")),a=(0,b.RR)(n.shape,r);return a.length>0?(0,x.X)((0,v.S)(t,a),n.shape):t},b:()=>{let t=(0,o.d)(e,(0,i.p)(n,"float32"));const a=(0,b.RR)(s.shape,r);a.length>0&&(t=(0,x.X)((0,v.S)(t,a),s.shape));const u=(0,f.h)(s);return(0,h.W)((0,c.h)(t,(0,i.p)(u,"float32")))}}}};var Ae=n(2634),De=n(7501);const Re={kernelName:a.sH,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:s}=n,[r,a,i,u]=t,l=null==u?(0,p.i)(1):u,c=(0,b.RR)(a.shape,r.shape),h=[];if(1===a.rank){for(let e=0;e<r.shape.length-1;++e)h.push(r.shape[e]);h.push(1)}const d=(0,m.l)(r,a),f=(0,o.d)(e,l),g=(0,Ae.b)((0,C.I)(i,(0,p.i)(s))),y=(0,o.d)((0,o.d)((0,o.d)(g,g),g),(0,p.i)(-.5));return{x:()=>1===a.rank?(0,x.X)((0,o.d)((0,o.d)(e,(0,De.G)((0,x.X)(g,[1,1,1,a.shape[0]]),h)),l),r.shape):(0,x.X)((0,o.d)((0,o.d)(e,g),l),r.shape),mean:()=>{let e=(0,o.d)((0,o.d)(g,(0,p.i)(-1)),f);return 1===a.rank&&(e=(0,v.S)(e,c)),(0,x.X)(e,a.shape)},variance:()=>{let e=(0,o.d)((0,o.d)(y,d),f);return 1===a.rank&&(e=(0,v.S)(e,c)),(0,x.X)(e,a.shape)},scale:()=>{const t=(0,o.d)(d,g);let n=(0,o.d)(e,t);return 1===a.rank&&(n=(0,v.S)(n,c)),(0,x.X)(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=(0,v.S)(t,c)),(0,x.X)(t,a.shape)}}}},_e=(0,O.op)({unsortedSegmentSum_:function(e,t,n){const s=(0,_._1)(e,"x","unsortedSegmentSum"),r=(0,_._1)(t,"segmentIds","unsortedSegmentSum","int32");(0,F.hu)((0,F.GN)(n),(()=>"numSegments must be of dtype int"));const i={x:s,segmentIds:r},o={numSegments:n};return R.BV.runKernel(a.Qv,i,o)}}),Fe={kernelName:a.qi,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[s,r]=t,{axis:a}=n,i=(0,F.EC)(a,s.shape)[0];return{x:()=>{const t=s.shape,n=r.size,o=t.slice(0,i),u=o.length,l=t.slice(a,t.length).slice(1),c=l.length,h=Oe(0,u),p=Oe(u+1,u+1+c),d=Me([o,[n],l]),f=(0,x.X)(e,d),m=(0,x.X)(r,[n]),g=Me([[u],h,p]),y=(0,ge.p)(f,g);let b=_e(y,m,s.shape[i]);const v=(0,fe.LJ)(g);return b=(0,ge.p)(b,v),b},indices:()=>r}}};function Oe(e,t){const n=[];for(let s=e;s<t;++s)n.push(s);return n}function Me(e){const t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}const Le={kernelName:a.Ac,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>(0,I.P)(n),b:()=>(0,I.P)(s)}}},ze={kernelName:a.iJ,gradFunc:e=>({x:()=>(0,i.p)(e,"float32")})},Be={kernelName:a.av,gradFunc:e=>({x:()=>(0,I.P)(e)})},Pe={kernelName:a.iW,gradFunc:e=>({x:()=>(0,I.P)(e)})},Ue={kernelName:a.r7,gradFunc:e=>({x:()=>(0,I.P)(e)})};var We=n(636);const Ve={kernelName:a.J$,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{alpha:r}=n,a=(0,We.p)(s,0);return{x:()=>(0,Y.a)(a,e,(0,o.d)(e,r))}}},He={kernelName:a.kU,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.h)(e,(0,C.I)(n,1))}}},Ge={kernelName:a.Zb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.h)(e,(0,i.p)(n,"float32"))}}},je={kernelName:a.qC,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;return{logits:()=>{const t=(0,Ie.Q)(s);return(0,m.l)(e,(0,o.d)((0,v.S)(e,r,!0),t))}}}},Xe=(0,O.op)({localResponseNormalizationBackprop_:function(e,t,n,s=5,r=1,i=1,o=.5){const u={x:e,y:t,dy:n},l={depthRadius:s,bias:r,alpha:i,beta:o};return R.BV.runKernel(a.Hh,u,l)}}),qe={kernelName:a.eZ,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{depthRadius:a,bias:i,alpha:o,beta:u}=n;return{x:()=>Xe(s,r,e,a,i,o,u)}}};var Ke=n(6477);function Ye(e,t,n,s){return t.rank<n.rank&&(t=(0,x.X)(t,fe.rv(t.shape,s))),e.rank<n.rank&&(e=(0,x.X)(e,fe.rv(e.shape,s))),{x:()=>(0,o.d)(e,(0,i.p)((0,Ke.D)(n,t),e.dtype))}}const Qe={kernelName:a.Yo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{reductionIndices:r}=s,a=t[0],i=Ye(e,t[1],a,F.EC(r,a.shape));return{x:()=>i.x()}}};var Je=n(6573);const Ze={kernelName:a.BM,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>(0,o.d)(e,(0,i.p)((0,X.b)(n,s),"float32")),b:()=>(0,o.d)(e,(0,i.p)((0,Je.d)(n,s),"float32"))}}},et=(0,O.op)({maxPool3dGrad_:function(e,t,n,s,r,i,o){const u=(0,_._1)(e,"dy","maxPool3dGrad"),l=(0,_._1)(t,"input","maxPool3dGrad"),c=(0,_._1)(n,"output","maxPool3dGrad");let h=u,p=l,d=c,f=!1;4===l.rank&&(f=!0,h=(0,x.X)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=(0,x.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=(0,x.X)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),F.hu(5===h.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`)),F.hu(5===p.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`)),F.hu(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),null!=o&&F.hu(F.GN(i),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`));const m={dy:h,input:p,output:d},g={filterSize:s,strides:r,pad:i,dimRoundingMode:o},y=R.BV.runKernel(a.OU,m,g);return f?(0,x.X)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),tt={kernelName:a.OA,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>et(e,s,r,a,i,o,u)}}},nt=(0,O.op)({maxPoolGrad_:function(e,t,n,s,r,i,o){const u=(0,_._1)(e,"dy","maxPoolGrad"),l=(0,_._1)(t,"input","maxPoolGrad"),c=(0,_._1)(n,"output","maxPoolGrad");F.hu(l.rank===u.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${u.rank})`)),F.hu(4===u.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),F.hu(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),null!=o&&F.hu(F.GN(i),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`));const h={dy:u,input:l,output:c},p={filterSize:s,strides:r,pad:i,dimRoundingMode:o};return R.BV.runKernel(a.OV,h,p)}}),st={kernelName:a.mT,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>nt(e,s,r,a,i,o)}}};var rt=n(4917);const at={kernelName:a.q2,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n,a=F.EC(r,s.shape),i=(0,fe.kz)(s.shape,a)[1],u=F.NA(i);return{x:()=>{const t=s.shape.slice();a.forEach((e=>{t[e]=1}));const n=(0,x.X)(e,t);return(0,c.h)((0,o.d)(n,(0,rt.i)(s.shape,"float32")),u)}}}},it={kernelName:a.c1,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{axis:r}=s,[a,i]=t,o=Ye(e,i,a,F.EC(r,a.shape));return{x:()=>o.x()}}},ot={kernelName:a.q8,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>(0,o.d)(e,(0,i.p)((0,q.z)(n,s),"float32")),b:()=>(0,o.d)(e,(0,i.p)((0,We.p)(n,s),"float32"))}}};var ut=n(2676);const lt={kernelName:a.jQ,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>(0,ut.t)(e,a,s.shape)}}};var ct=n(6943);const ht={kernelName:a.Vb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,b.$N)(n.shape,s.shape);return{a:()=>{const t=(0,b.RR)(n.shape,r);return t.length>0?(0,x.X)((0,v.S)(e,t),n.shape):e},b:()=>{const t=(0,o.d)(e,(0,h.W)((0,ct.G)((0,c.h)(n,s)))),a=(0,b.RR)(s.shape,r);return a.length>0?(0,x.X)((0,v.S)(t,a),s.shape):t}}}},pt={kernelName:a.wY,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,b.$N)(n.shape,s.shape);return{a:()=>{const t=(0,o.d)(e,(0,i.p)(s,"float32")),a=(0,b.RR)(n.shape,r);return a.length>0?(0,x.X)((0,v.S)(t,a),n.shape):t},b:()=>{const t=(0,o.d)(e,(0,i.p)(n,"float32")),a=(0,b.RR)(s.shape,r);return a.length>0?(0,x.X)((0,v.S)(t,a),s.shape):t}}}},dt={kernelName:a.ku,gradFunc:e=>({x:()=>(0,h.W)(e)})};var ft=n(9640);const mt={kernelName:a.we,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>(0,ft.l)(n.shape,"float32")}}},gt={kernelName:a.qW,gradFunc:e=>({x:()=>(0,I.P)(e)})};var yt=n(4136);const bt={kernelName:a.Qi,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:s}=n;return(0,yt.H)(e,s).map((e=>()=>e))}},xt={kernelName:a.ly,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>(0,ut.t)(e,a,s.shape)}}};var vt=n(2597),wt=n(3453);const kt={kernelName:a.pe,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,s,r]=t,a=n,u=s,l=b.$N(a.shape,u.shape);return{a:()=>{const t=(0,i.p)(u,"float32");let n=(0,o.d)(e,(0,o.d)(t,(0,wt.s)(a,(0,m.l)(t,(0,p.i)(1)))));const s=b.RR(a.shape,l);return s.length>0&&(n=(0,v.S)(n,s)),(0,x.X)(n,a.shape)},b:()=>{const t=(0,We.p)(a,0),n=(0,Y.a)(t,(0,vt.c)(a),(0,I.P)(a));let s=(0,o.d)(e,(0,o.d)(r,n));const i=b.RR(u.shape,l);return i.length>0&&(s=(0,v.S)(s,i)),(0,x.X)(s,u.shape)}}}},It={kernelName:a.o0,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,We.p)(n,0);return{x:()=>(0,Y.a)(r,e,(0,o.d)(e,s)),alpha:()=>{let t=(0,Y.a)(r,(0,I.P)(e),(0,o.d)(e,n));const a=(0,b.RR)(s.shape,e.shape);return a.length>0&&(t=(0,v.S)(t,a)),(0,x.X)(t,s.shape)}}}},St={kernelName:a.oH,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=b.$N(n.shape,s.shape);return{a:()=>{const t=(0,c.h)(e,(0,i.p)(s,"float32")),a=b.RR(n.shape,r);return a.length>0?(0,x.X)((0,v.S)(t,a),n.shape):t},b:()=>{let t=(0,o.d)(e,(0,i.p)(n,"float32"));const a=b.RR(s.shape,r);a.length>0&&(t=(0,x.X)((0,v.S)(t,a),s.shape));const u=(0,f.h)(s);return(0,h.W)((0,c.h)(t,(0,i.p)(u,"float32")))}}}},Nt={kernelName:a.$H,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.h)(e,(0,h.W)((0,f.h)(n)))}}},Tt={kernelName:a.Sb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=(0,o.d)((0,q.z)(n,6),(0,u.N)(n));return{x:()=>(0,o.d)(e,(0,i.p)(s,"float32"))}}},Ct={kernelName:a.qk,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.d)(e,(0,i.p)((0,u.N)(n),"float32"))}}},$t={kernelName:a.HZ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,x.X)(e,n.shape)}}},Et={kernelName:a._Y,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>R.BV.runKernel(a.zb,r,n)}}},At={kernelName:a.dp,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>R.BV.runKernel(a.Hm,r,n)}}};var Dt=n(7486);const Rt={kernelName:a.mK,gradFunc:(e,t,n)=>{const{dims:s}=n,r=(0,F.EC)(s,e.shape);return{x:()=>(0,Dt.G)(e,r)}}},_t={kernelName:a.e0,gradFunc:e=>({x:()=>(0,I.P)(e)})},Ft={kernelName:a.bV,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,h.W)((0,c.h)(e,(0,o.d)((0,wt.s)(n,1.5),2)))}}};var Ot=n(8651);const Mt={kernelName:a.Ph,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>(0,i.p)((0,I.P)(n),"float32"),t:()=>(0,o.d)(e,(0,i.p)(n,e.dtype)),e:()=>(0,o.d)(e,(0,i.p)((0,Ot.h)(n),e.dtype))}}};var Lt=n(3179);const zt={kernelName:a.oF,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,We.p)(n,(0,p.i)(0)),s=(0,p.i)(Lt.y),r=(0,p.i)(Lt.$),a=(0,o.d)(e,r),u=(0,o.d)((0,o.d)(e,s),(0,Ie.Q)((0,i.p)(n,"float32")));return(0,Y.a)(t,a,u)}}}},Bt={kernelName:a.a5,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.d)(e,(0,o.d)(n,(0,m.l)((0,p.i)(1),n)))}}},Pt={kernelName:a.i5,gradFunc:e=>({x:()=>(0,I.P)(e)})};var Ut=n(173);const Wt={kernelName:a.RQ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.d)((0,Ut.m)((0,i.p)(n,"float32")),e)}}};var Vt=n(2699);const Ht={kernelName:a.w3,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.d)((0,Vt.f)((0,i.p)(n,"float32")),e)}}};var Gt=n(9682),jt=n(7650);const Xt={kernelName:a.p2,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{begin:r,size:a}=n,i=s.shape,[o,u]=(0,jt.parseSliceParams)(s,r,a),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>(0,Gt.v)(e,l)}}},qt={kernelName:a.Gc,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{dim:r}=n,a=(0,o.d)(e,s);return{logits:()=>(0,m.l)(a,(0,o.d)((0,v.S)(a,[r],!0),s))}}};var Kt=n(625);const Yt={kernelName:a.MR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.d)(e,(0,Kt.X)(n))}}};var Qt=n(8441);const Jt={kernelName:a.TQ,gradFunc:(e,t,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>(0,Qt.E)(e,s,r)}}};var Zt=n(6884);const en={kernelName:a.L8,gradFunc:(e,t,n)=>{const{axis:s}=n;return{x:()=>(0,Zt.z)(e,s)}}},tn={kernelName:a.FK,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.h)(e,(0,o.d)((0,d._)((0,i.p)(n,"float32")),2))}}},nn={kernelName:a.bK,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.d)(e,(0,o.d)((0,i.p)(n,"float32"),2))}}},sn={kernelName:a._t,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,p.i)(2);return{a:()=>(0,o.d)(e,(0,o.d)(r,(0,m.l)(n,s))),b:()=>(0,o.d)(e,(0,o.d)(r,(0,m.l)(s,n)))}}},rn={kernelName:a.h8,gradFunc:e=>({x:()=>(0,I.P)(e)})},an={kernelName:a.Tr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=b.$N(n.shape,s.shape);return{a:()=>{let t=e;const s=b.RR(n.shape,r);return s.length>0&&(t=(0,v.S)(t,s)),(0,x.X)(t,n.shape)},b:()=>{let t=e;const n=b.RR(s.shape,r);return n.length>0&&(t=(0,v.S)(t,n)),(0,x.X)((0,h.W)(t),s.shape)}}}},on={kernelName:a.GB,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,r=s.shape.slice(),{axis:a}=n;(0,F.EC)(a,s.shape).forEach((e=>{r[e]=1}));const i=(0,x.X)(e,r),u=(0,o.d)(i,(0,rt.i)(s.shape,"float32"));return{x:()=>u}}},un={kernelName:a.sE,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.h)(e,(0,f.h)((0,Ut.m)(n)))}}},ln={kernelName:a.MI,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.d)((0,m.l)((0,p.i)(1),(0,f.h)(n)),e)}}},cn={kernelName:a.n9,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{reps:r}=n;return{x:()=>{let t=(0,I.P)(s);if(1===s.rank)for(let n=0;n<r[0];++n)t=(0,C.I)(t,(0,ut.t)(e,[n*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)t=(0,C.I)(t,(0,ut.t)(e,[n*s.shape[0],a*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)t=(0,C.I)(t,(0,ut.t)(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)for(let o=0;o<r[3];++o)t=(0,C.I)(t,(0,ut.t)(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2],o*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return t}}}},hn={kernelName:a.G3,gradFunc:(e,t,n)=>{const s=n,{perm:r}=s,a=fe.LJ(r);return{x:()=>(0,ge.p)(e,a)}}};var pn=n(2991);const dn={kernelName:a.To,gradFunc:(e,t,n)=>{const s=n,{axis:r}=s;return{value:()=>(0,pn.k)(e,r)}}};var fn=n(1300),mn=n(4926),gn=n(632);const yn={kernelName:a.Qv,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=(0,gn.g)(t,(0,I.P)(t)),s=(0,mn.I)(e,n);let r=(0,X.b)(t,(0,p.i)(0,"int32"));const a=s.rank-r.rank;for(let e=0;e<a;++e)r=(0,fn.d)(r,e+1);r=(0,K.H)(r,(0,rt.i)(s.shape,"bool"));const i=(0,I.P)(s);return(0,Y.a)(r,s,i)}(e,n)}}},bn={kernelName:a.Ru,gradFunc:e=>({x:()=>(0,I.P)(e)})};var xn=n(6151);const vn=[l,g,y,w,k,S,N,T,$,E,A,D,L,B,U,V,H,G,j,Q,J,ee,ie,re,le,he,de,ye,ve,we,St,ke,Se,Ne,Te,Ce,Ee,$e,Re,Fe,Le,ze,Be,Pe,Ue,Ve,He,Ge,je,qe,Qe,Qe,Ze,tt,st,at,it,ot,lt,ht,pt,dt,mt,gt,bt,xt,xt,kt,It,Nt,Tt,Ct,$t,Et,At,Rt,_t,Ft,Mt,zt,Bt,Pt,Wt,Ht,Xt,qt,Yt,Jt,Jt,en,en,tn,sn,nn,rn,an,on,un,ln,cn,hn,dn,yn,bn];for(const e of vn)(0,xn.Li)(e);var wn=n(6235),kn=n(4077);(0,kn.t3)().prototype.abs=function(){return this.throwIfDisposed(),(0,wn.W)(this)};var In=n(7839);(0,kn.t3)().prototype.acos=function(){return this.throwIfDisposed(),(0,In.K)(this)};var Sn=n(1470);(0,kn.t3)().prototype.acosh=function(){return this.throwIfDisposed(),(0,Sn._)(this)},(0,kn.t3)().prototype.add=function(e){return this.throwIfDisposed(),(0,C.I)(this,e)};var Nn=n(781);(0,kn.t3)().prototype.all=function(e,t){return this.throwIfDisposed(),(0,Nn.$)(this,e,t)};var Tn=n(2998);(0,kn.t3)().prototype.any=function(e,t){return this.throwIfDisposed(),(0,Tn.Y)(this,e,t)};var Cn=n(47);(0,kn.t3)().prototype.argMax=function(e){return this.throwIfDisposed(),(0,Cn.N)(this,e)};var $n=n(7394);(0,kn.t3)().prototype.argMin=function(e){return this.throwIfDisposed(),(0,$n.v)(this,e)},(0,kn.t3)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,F.hu)(1===this.size,(()=>"The array must have only 1 element.")),(0,x.X)(this,[])},(0,kn.t3)().prototype.asType=function(e){return this.throwIfDisposed(),(0,i.p)(this,e)},(0,kn.t3)().prototype.as1D=function(){return this.throwIfDisposed(),(0,x.X)(this,[this.size])},(0,kn.t3)().prototype.as2D=function(e,t){return this.throwIfDisposed(),(0,x.X)(this,[e,t])},(0,kn.t3)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),(0,x.X)(this,[e,t,n])},(0,kn.t3)().prototype.as4D=function(e,t,n,s){return this.throwIfDisposed(),(0,x.X)(this,[e,t,n,s])},(0,kn.t3)().prototype.as5D=function(e,t,n,s,r){return this.throwIfDisposed(),(0,x.X)(this,[e,t,n,s,r])};var En=n(2421);(0,kn.t3)().prototype.asin=function(){return this.throwIfDisposed(),(0,En.Z)(this)};var An=n(1891);(0,kn.t3)().prototype.asinh=function(){return this.throwIfDisposed(),(0,An.V)(this)};var Dn=n(7037);(0,kn.t3)().prototype.atan=function(){return this.throwIfDisposed(),(0,Dn.z)(this)};var Rn=n(9812);(0,kn.t3)().prototype.atan2=function(e){return this.throwIfDisposed(),(0,Rn.f)(this,e)};var _n=n(369);(0,kn.t3)().prototype.atanh=function(){return this.throwIfDisposed(),(0,_n.C)(this)};var Fn=n(5176);(0,kn.t3)().prototype.avgPool=function(e,t,n,s){return this.throwIfDisposed(),(0,Fn.w)(this,e,t,n,s)},(0,kn.t3)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),(0,Qt.E)(this,e,t)};var On=n(7505);(0,kn.t3)().prototype.batchNorm=function(e,t,n,s,r){return this.throwIfDisposed(),(0,On.t)(this,e,t,n,s,r)};var Mn=n(8247);(0,kn.t3)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),(0,Mn.U)(this,e)},(0,kn.t3)().prototype.cast=function(e){return this.throwIfDisposed(),(0,i.p)(this,e)};var Ln=n(6825);(0,kn.t3)().prototype.ceil=function(){return this.throwIfDisposed(),(0,Ln.m)(this)};var zn=n(2279);(0,kn.t3)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),(0,zn.i)(this,e,t)},(0,kn.t3)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof kn.es&&(e=[e]),(0,Zt.z)([this,...e],t)};var Bn=n(1355);(0,kn.t3)().prototype.conv1d=function(e,t,n,s,r,a){return this.throwIfDisposed(),(0,Bn.P)(this,e,t,n,s,r,a)};var Pn=n(1405);(0,kn.t3)().prototype.conv2dTranspose=function(e,t,n,s,r){return this.throwIfDisposed(),(0,Pn.b)(this,e,t,n,s,r)},(0,kn.t3)().prototype.conv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),(0,ae.T)(this,e,t,n,s,r,a)},(0,kn.t3)().prototype.cos=function(){return this.throwIfDisposed(),(0,Ut.m)(this)},(0,kn.t3)().prototype.cosh=function(){return this.throwIfDisposed(),(0,Vt.f)(this)},(0,kn.t3)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),(0,me.z)(this,e,t,n)};var Un=n(9112);(0,kn.t3)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),(0,Un.n)(this,e,t)};var Wn=n(4718);(0,kn.t3)().prototype.depthwiseConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),(0,Wn.B)(this,e,t,n,s,r,a)};var Vn=n(557);(0,kn.t3)().prototype.dilation2d=function(e,t,n,s,r){return this.throwIfDisposed(),(0,Vn.W)(this,e,t,n,s,r)};var Hn=n(9322);(0,kn.t3)().prototype.divNoNan=function(e){return this.throwIfDisposed(),(0,Hn.N)(this,e)},(0,kn.t3)().prototype.div=function(e){return this.throwIfDisposed(),(0,c.h)(this,e)};const Gn=(0,O.op)({dot_:function(e,t){const n=(0,_._1)(e,"t1","dot"),s=(0,_._1)(t,"t2","dot");F.hu(!(1!==n.rank&&2!==n.rank||1!==s.rank&&2!==s.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`));const r=1===n.rank?n.size:n.shape[1],a=1===s.rank?s.size:s.shape[0];if(F.hu(r===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`)),1===n.rank&&1===s.rank){const e=(0,x.X)(n,[1,-1]),t=(0,x.X)(s,[-1,1]),r=(0,P.O)(e,t);return(0,x.X)(r,[])}if(1===n.rank&&2===s.rank){const e=(0,x.X)(n,[1,-1]),t=(0,x.X)(s,[s.shape[0],s.shape[1]]),r=(0,P.O)(e,t);return(0,x.X)(r,[r.size])}if(2===n.rank&&1===s.rank){const e=(0,x.X)(s,[-1,1]),t=(0,P.O)(n,e);return(0,x.X)(t,[t.size])}{const e=(0,x.X)(s,[s.shape[0],s.shape[1]]);return(0,P.O)(n,e)}}});(0,kn.t3)().prototype.dot=function(e){return this.throwIfDisposed(),Gn(this,e)};var jn=n(3233);(0,kn.t3)().prototype.elu=function(){return this.throwIfDisposed(),(0,jn.p)(this)},(0,kn.t3)().prototype.equal=function(e){return this.throwIfDisposed(),(0,Ke.D)(this,e)};var Xn=n(4650);(0,kn.t3)().prototype.erf=function(){return this.throwIfDisposed(),(0,Xn.q)(this)},(0,kn.t3)().prototype.exp=function(){return this.throwIfDisposed(),(0,Ie.Q)(this)},(0,kn.t3)().prototype.expandDims=function(e){return this.throwIfDisposed(),(0,fn.d)(this,e)};var qn=n(3426);(0,kn.t3)().prototype.expm1=function(){return this.throwIfDisposed(),(0,qn.t)(this)};var Kn=n(7020);(0,kn.t3)().prototype.fft=function(){return this.throwIfDisposed(),(0,Kn.k)(this)},(0,kn.t3)().prototype.flatten=function(){return this.throwIfDisposed(),(0,x.X)(this,[this.size])},(0,kn.t3)().prototype.floor=function(){return this.throwIfDisposed(),(0,ct.G)(this)};var Yn=n(9165);(0,kn.t3)().prototype.floorDiv=function(e){return this.throwIfDisposed(),(0,Yn.q)(this,e)},(0,kn.t3)().prototype.gather=function(e,t){return this.throwIfDisposed(),(0,mn.I)(this,e,t)},(0,kn.t3)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),(0,X.b)(this,e)},(0,kn.t3)().prototype.greater=function(e){return this.throwIfDisposed(),(0,We.p)(this,e)};var Qn=n(8447);(0,kn.t3)().prototype.ifft=function(){return this.throwIfDisposed(),(0,Qn.S)(this)};var Jn=n(4415);(0,kn.t3)().prototype.irfft=function(){return this.throwIfDisposed(),(0,Jn.w)(this)};const Zn=(0,O.op)({isFinite_:function(e){const t={x:(0,_._1)(e,"x","isFinite")};return R.BV.runKernel(a.av,t)}});(0,kn.t3)().prototype.isFinite=function(){return this.throwIfDisposed(),Zn(this)};const es=(0,O.op)({isInf_:function(e){const t={x:(0,_._1)(e,"x","isInf")};return R.BV.runKernel(a.iW,t)}});(0,kn.t3)().prototype.isInf=function(){return this.throwIfDisposed(),es(this)};var ts=n(6230);(0,kn.t3)().prototype.isNaN=function(){return this.throwIfDisposed(),(0,ts.i)(this)};var ns=n(9133);(0,kn.t3)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),(0,ns.h)(this,e)},(0,kn.t3)().prototype.lessEqual=function(e){return this.throwIfDisposed(),(0,q.z)(this,e)},(0,kn.t3)().prototype.less=function(e){return this.throwIfDisposed(),(0,Je.d)(this,e)};var ss=n(9648);(0,kn.t3)().prototype.localResponseNormalization=function(e,t,n,s){return this.throwIfDisposed(),(0,ss.G)(this,e,t,n,s)};var rs=n(633),as=n(3694);const is=(0,O.op)({logSigmoid_:function(e){const t=(0,_._1)(e,"x","logSigmoid"),n=(0,rs.cb)((e=>({value:(0,h.W)((0,as.W)((0,h.W)(e))),gradFunc:t=>(0,o.d)(t,(0,Kt.X)((0,h.W)(e)))})));return n(t)}});(0,kn.t3)().prototype.logSigmoid=function(){return this.throwIfDisposed(),is(this)};var os=n(1510);(0,kn.t3)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),(0,os.C)(this,e)};var us=n(1391);(0,kn.t3)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),(0,us.l)(this,e,t)},(0,kn.t3)().prototype.log=function(){return this.throwIfDisposed(),(0,vt.c)(this)};var ls=n(7474);(0,kn.t3)().prototype.log1p=function(){return this.throwIfDisposed(),(0,ls.K)(this)},(0,kn.t3)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),(0,K.H)(this,e)},(0,kn.t3)().prototype.logicalNot=function(){return this.throwIfDisposed(),(0,Ot.h)(this)};var cs=n(5750);(0,kn.t3)().prototype.logicalOr=function(e){return this.throwIfDisposed(),(0,cs.K)(this,e)};const hs=(0,O.op)({logicalXor_:function(e,t){const n=(0,_._1)(e,"a","logicalXor","bool"),s=(0,_._1)(t,"b","logicalXor","bool");return(0,b.$N)(n.shape,s.shape),(0,K.H)((0,cs.K)(e,t),(0,Ot.h)((0,K.H)(e,t)))}});(0,kn.t3)().prototype.logicalXor=function(e){return this.throwIfDisposed(),hs(this,e)},(0,kn.t3)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),(0,P.O)(this,e,t,n)};var ps=n(1174);(0,kn.t3)().prototype.maxPool=function(e,t,n,s){return this.throwIfDisposed(),(0,ps._)(this,e,t,n,s)};var ds=n(3307);(0,kn.t3)().prototype.max=function(e,t){return this.throwIfDisposed(),(0,ds.F)(this,e,t)},(0,kn.t3)().prototype.maximum=function(e){return this.throwIfDisposed(),(0,gn.g)(this,e)};var fs=n(5130);(0,kn.t3)().prototype.mean=function(e,t){return this.throwIfDisposed(),(0,fs.J)(this,e,t)};var ms=n(5735);(0,kn.t3)().prototype.min=function(e,t){return this.throwIfDisposed(),(0,ms.V)(this,e,t)};var gs=n(4513);(0,kn.t3)().prototype.minimum=function(e){return this.throwIfDisposed(),(0,gs.L)(this,e)};var ys=n(1483);(0,kn.t3)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),(0,ys.V)(this,e,t)};var bs=n(5228);(0,kn.t3)().prototype.mod=function(e){return this.throwIfDisposed(),(0,bs.w)(this,e)},(0,kn.t3)().prototype.mul=function(e){return this.throwIfDisposed(),(0,o.d)(this,e)},(0,kn.t3)().prototype.neg=function(){return this.throwIfDisposed(),(0,h.W)(this)};var xs=n(3561);(0,kn.t3)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),(0,xs.K)(this,e,t,n)};var vs=n(6500);(0,kn.t3)().prototype.notEqual=function(e){return this.throwIfDisposed(),(0,vs.Q)(this,e)};var ws=n(6708);(0,kn.t3)().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),(0,ws.l)(this,e,t,n)};var ks=n(7846);(0,kn.t3)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,ks.J)(this)},(0,kn.t3)().prototype.pad=function(e,t){return this.throwIfDisposed(),(0,Gt.v)(this,e,t)};const Is=(0,O.op)({pool_:function(e,t,n,s,r,a){null==r&&(r=[1,1]),null==a&&(a=1),0===s&&(s="valid");const i=(0,_._1)(e,"x","maxPool");let o=i,u=!1;3===i.rank&&(u=!0,o=(0,x.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]])),F.hu(se.jT(a,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`));const l=se.Xw(o.shape,t,a,r,s),c=[l.dilationHeight,l.dilationWidth];let h;h="same"===s?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),s=n.map((e=>Math.floor(e/2))),r=n.map(((e,t)=>e-s[t]));return n.map(((e,t)=>[s[t],r[t]]))}([l.filterHeight,l.filterWidth],c):[[0,0],[0,0]];const p=1===c[0]&&1===c[1],[d,f]=function(e,t,n){const s=n.map((e=>e[0])),r=n.map((e=>e[1])),a=e.concat(s,r),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=r.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[s[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([l.inHeight,l.inWidth],c,h),m=p?s:"valid",g=p?o:(0,W.f)(o,c,d),y=("avg"===n?()=>(0,Fn.w)(g,t,a,m):()=>(0,ps._)(g,t,a,m))(),b=p?y:(0,Qt.E)(y,c,f);return u?(0,x.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});(0,kn.t3)().prototype.pool=function(e,t,n,s,r){return this.throwIfDisposed(),Is(this,e,t,n,s,r)},(0,kn.t3)().prototype.pow=function(e){return this.throwIfDisposed(),(0,wt.s)(this,e)};var Ss=n(8151);(0,kn.t3)().prototype.prelu=function(e){return this.throwIfDisposed(),(0,Ss.A)(this,e)};var Ns=n(9451);(0,kn.t3)().prototype.prod=function(e,t){return this.throwIfDisposed(),(0,Ns.W)(this,e,t)};var Ts=n(9036);(0,kn.t3)().prototype.reciprocal=function(){return this.throwIfDisposed(),(0,Ts.M)(this)};var Cs=n(7409);(0,kn.t3)().prototype.relu=function(){return this.throwIfDisposed(),(0,Cs.U)(this)};var $s=n(3582);(0,kn.t3)().prototype.relu6=function(){return this.throwIfDisposed(),(0,$s.b)(this)},(0,kn.t3)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),(0,x.X)(this,e.shape)},(0,kn.t3)().prototype.reshape=function(e){return this.throwIfDisposed(),(0,x.X)(this,e)};var Es=n(3305);(0,kn.t3)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),(0,Es.I)(this,e,t,n)};var As=n(5098);(0,kn.t3)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),(0,As.j)(this,e,t,n)},(0,kn.t3)().prototype.reverse=function(e){return this.throwIfDisposed(),(0,Dt.G)(this,e)};var Ds=n(3710);(0,kn.t3)().prototype.rfft=function(){return this.throwIfDisposed(),(0,Ds.Q)(this)};var Rs=n(7809);(0,kn.t3)().prototype.round=function(){return this.throwIfDisposed(),(0,Rs.N)(this)},(0,kn.t3)().prototype.rsqrt=function(){return this.throwIfDisposed(),(0,Ae.b)(this)};var _s=n(5503);(0,kn.t3)().prototype.selu=function(){return this.throwIfDisposed(),(0,_s.U)(this)};var Fs=n(8678);(0,kn.t3)().prototype.separableConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),(0,Fs.U)(this,e,t,n,s,r,a)},(0,kn.t3)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,Kt.X)(this)};var Os=n(4434);(0,kn.t3)().prototype.sign=function(){return this.throwIfDisposed(),(0,Os.X)(this)},(0,kn.t3)().prototype.sin=function(){return this.throwIfDisposed(),(0,ce.O)(this)},(0,kn.t3)().prototype.sinh=function(){return this.throwIfDisposed(),(0,pe.R)(this)},(0,kn.t3)().prototype.slice=function(e,t){return this.throwIfDisposed(),(0,ut.t)(this,e,t)};var Ms=n(682);(0,kn.t3)().prototype.softmax=function(e){return this.throwIfDisposed(),(0,Ms.X)(this,e)},(0,kn.t3)().prototype.softplus=function(){return this.throwIfDisposed(),(0,as.W)(this)},(0,kn.t3)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),(0,W.f)(this,e,t)},(0,kn.t3)().prototype.split=function(e,t){return this.throwIfDisposed(),(0,Z.V)(this,e,t)},(0,kn.t3)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,d._)(this)},(0,kn.t3)().prototype.square=function(){return this.throwIfDisposed(),(0,f.h)(this)};var Ls=n(5265);(0,kn.t3)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),(0,Ls.$)(this,e)};var zs=n(9590);(0,kn.t3)().prototype.squeeze=function(e){return this.throwIfDisposed(),(0,zs.L)(this,e)},(0,kn.t3)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof kn.es?[this,e]:[this,...e];return(0,pn.k)(n,t)},(0,kn.t3)().prototype.step=function(e){return this.throwIfDisposed(),(0,u.N)(this,e)};var Bs=n(5158);(0,kn.t3)().prototype.stridedSlice=function(e,t,n,s,r,a,i,o){return this.throwIfDisposed(),(0,Bs.N)(this,e,t,n,s,r,a,i,o)},(0,kn.t3)().prototype.sub=function(e){return this.throwIfDisposed(),(0,m.l)(this,e)},(0,kn.t3)().prototype.sum=function(e,t){return this.throwIfDisposed(),(0,v.S)(this,e,t)};var Ps=n(1173);(0,kn.t3)().prototype.tan=function(){return this.throwIfDisposed(),(0,Ps.O)(this)};var Us=n(1869);(0,kn.t3)().prototype.tanh=function(){return this.throwIfDisposed(),(0,Us.A)(this)},(0,kn.t3)().prototype.tile=function(e){return this.throwIfDisposed(),(0,De.G)(this,e)},(0,kn.t3)().prototype.toBool=function(){return this.throwIfDisposed(),(0,i.p)(this,"bool")},(0,kn.t3)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,i.p)(this,"float32")},(0,kn.t3)().prototype.toInt=function(){return this.throwIfDisposed(),(0,i.p)(this,"int32")};var Ws=n(3243);(0,kn.t3)().prototype.topk=function(e,t){return this.throwIfDisposed(),(0,Ws.h)(this,e,t)},(0,kn.t3)().prototype.transpose=function(e){return this.throwIfDisposed(),(0,ge.p)(this,e)};var Vs=n(9608);let Hs;function Gs(){return null==Hs&&(Hs=(0,r.y3$)().epsilon()),Hs}(0,kn.t3)().prototype.unique=function(e){return this.throwIfDisposed(),(0,Vs.T)(this,e)},(0,kn.t3)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),_e(this,e,t)},(0,kn.t3)().prototype.unstack=function(e){return this.throwIfDisposed(),(0,yt.H)(this,e)},(0,kn.t3)().prototype.where=function(e,t){return this.throwIfDisposed(),(0,Y.a)(e,this,t)},(0,kn.t3)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,I.P)(this)};class js extends Error{constructor(e){super(e),Object.setPrototypeOf(this,js.prototype)}}class Xs extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Xs.prototype)}}class qs extends Error{constructor(e){super(e),Object.setPrototypeOf(this,qs.prototype)}}class Ks extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ks.prototype)}}class Ys extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ys.prototype)}}function Qs(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Js(e,t){if(!e)throw new Ys(t)}function Zs(e,t){let n=0;for(const s of e)s===t&&n++;return n}function er(e){return 1===e.length?e[0]:e}function tr(e){return Array.isArray(e)?e:[e]}function nr(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function sr(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}Error;let rr={};function ar(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function ir(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>ir(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?ir(t):e[n]=t.value)}}}function or(e,t={},n={},s="object",r=!1){if("string"==typeof e){const r=e;let a;if(r in n)a=n[r];else if(r in rr)a=rr[r];else if(a=t[r],null==a)throw new qs(`Unknown ${s}: ${e}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new qs(`${s}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,u;if(i in n?[o,u]=n[i]:i in rr?[o,u]=rr.className:i in t&&([o,u]=t[i]),null==o)throw new qs(`Unknown ${s}: ${i}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(rr))e[t]=rr[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},rr);for(const e of Object.keys(n))rr[e]=n[e];ir(a.config);const s=u(o,a.config,n,r);return rr=Object.assign({},t),s}{const e=Object.assign({},rr);for(const e of Object.keys(n))rr[e]=n[e];const t=new o(a.config);return rr=Object.assign({},e),t}}}function ur(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function lr(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function cr(e){if(null==e)throw new qs(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function hr(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new qs(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function pr(e,t,n=0,s=1/0){return Js(n>=0),Js(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every((e=>typeof e===t))}function dr(e,t){Array.isArray(e)?(r.D5U.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>dr(e,`element ${n+1} of ${t}`)))):r.D5U.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${fr(e)}.`))}function fr(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>fr(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function mr(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function gr(e,t){return(0,r.lub)((()=>r._b3(r.Smz(r.dC7(e,e),t,!0))))}class yr extends r.m7h.Serializable{getConfig(){return{}}}class br extends yr{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,r.lub)((()=>{const t=gr(e,this.axis),n=r.iUl(t,0,this.maxValue);return r.dC7(e,r.hiC(n,r.IHx(Gs(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}br.className="MaxNorm",r.m7h.registerClass(br);class xr extends yr{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,r.lub)((()=>r.hiC(e,r.IHx(Gs(),gr(e,this.axis)))))}getConfig(){return{axis:this.axis}}}xr.className="UnitNorm",r.m7h.registerClass(xr);class vr extends yr{apply(e){return r.UYe(e)}}vr.className="NonNeg",r.m7h.registerClass(vr);class wr extends yr{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,r.lub)((()=>{const t=gr(e,this.axis),n=r.IHx(r.dC7(this.rate,r.iUl(t,this.minValue,this.maxValue)),r.dC7(1-this.rate,t));return r.dC7(e,r.hiC(n,r.IHx(Gs(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}wr.className="MinMaxNorm",r.m7h.registerClass(wr);const kr={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ir(e){return ar(e)}function Sr(e,t={}){return or(e,r.m7h.SerializationMap.getMap().classNameMap,t,"constraint")}function Nr(e){return null==e?null:"string"==typeof e?Sr({className:e in kr?kr[e]:e,config:{}}):e instanceof yr?e:Sr(e)}const Tr=["channelsFirst","channelsLast"],Cr=["nearest","bilinear"],$r=["valid","same","causal"],Er=["max","avg"],Ar=["sum","mul","concat","ave"],Dr=new Map;function Rr(e){hr(Tr,"DataFormat",e)}function _r(e){hr($r,"PaddingMode",e)}function Fr(e){hr(Er,"PoolMode",e)}const Or=[];function Mr(e,t){Or.push(e);try{const e=t();return Or.pop(),e}catch(e){throw Or.pop(),e}}function Lr(e){if(!Pr(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Or.length?"":Or.join("/")+"/")+e}function zr(e){if(!Pr(e))throw new Error("Not a valid tensor name: '"+e+"'");Dr.has(e)||Dr.set(e,0);const t=Dr.get(e);if(Dr.set(e,Dr.get(e)+1),t>0){const n=`${e}_${t}`;return Dr.set(n,1),n}return e}const Br=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Pr(e){return!!e.match(Br)}function Ur(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function Wr(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s<t&&(t=s)}return t}function Vr(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s>t&&(t=s)}return t}function Hr(e,t){if(t<e)throw new qs(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let s=e;s<t;++s)n.push(s);return n}function Gr(e,t){return r.pju(e,t)}function jr(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),r.XLQ(e,n)}function Xr(e,t,n){return(0,r.lub)((()=>{switch(e.rank){case 1:return r.jZU(e,t,n);case 2:return r.SmN(e,[t,0],[n,e.shape[1]]);case 3:return r.CnO(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return r.p0P(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return r.tPi(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return r.tPi(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new qs(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function qr(e,t,n){return(0,r.lub)((()=>{switch(e.rank){case 1:return r.jZU(e,t,n);case 2:return r.SmN(e,[0,t],[e.shape[0],n]);case 3:return r.CnO(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return r.p0P(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new qs(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Kr(e,t,n,s){return(0,r.lub)((()=>{switch(e.rank){case 1:return r.jZU(e,t,n);case 2:switch(s){case 1:return Xr(e,t,n);case 2:return qr(e,t,n);default:throw new qs(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Xr(e,t,n);case 2:return r.CnO(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return qr(e,t,n);default:throw new qs(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Xr(e,t,n);case 2:return r.p0P(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return r.p0P(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return qr(e,t,n);default:throw new qs(`The axis is not within the rank of the tensor ${s}`)}default:throw new qs(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Yr(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),r.zoF(e,t)}function Qr(e,t){switch(e.rank){case 1:return r.gME([e,t]);case 2:return r.Izb([e,t],0);case 3:return r.MNy([e,t],0);case 4:return r.ZaL([e,t],0);default:throw new qs(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Jr(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new qs(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return r.Gg6(e,t)}function Zr(e,t=0,n=1,s,a){return r.nGf(e,t,n,s,a)}function ea(e,t,n,s){if(e.rank<2||t.rank<2)throw new Ks(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Ks(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank){const a=!1,i=!1;return r.imm.matMul({a:e,b:t,transposeA:a,transposeB:i,bias:s?sa(e.rank,s,"channelsLast"):null,activation:n})}{const a=e.shape.slice(),i=a.pop();e=r.XLQ(e,[-1,i]);const o=t.shape.slice(),u=o.pop(),l=o.pop(),c=[...o,u],h=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=r.XLQ(r.p4s(t,h),[l,-1]);const p=[...a,...c],d=!1,f=!1;return r.XLQ(r.imm.matMul({a:e,b:t,transposeA:d,transposeB:f,bias:s?sa(e.rank,s,"channelsLast"):null,activation:n}),p)}}function ta(e,t,n){return(0,r.lub)((()=>(t=Array.isArray(t)?(0,r.RRF)(t,"int32"):r.pju(t,"int32"),r.Iqj(e,t,n))))}function na(e){return r.dC7(e,e)}function sa(e,t,n){const s=t.shape;if(1!==t.rank&&t.rank!==e)throw new qs(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===s.length?r.XLQ(t,[1,s[0],1,1,1]):r.XLQ(t,[1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?r.XLQ(t,[1,1,1,1,s[0]]):r.XLQ(t,[1].concat(s))}else if(4===e){if("channelsFirst"===n)return 1===s.length?r.XLQ(t,[1,s[0],1,1]):r.XLQ(t,[1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?r.XLQ(t,[1,1,1,s[0]]):r.XLQ(t,[1].concat(s))}else if(3===e){if("channelsFirst"===n)return 1===s.length?r.XLQ(t,[1,s[0],1]):r.XLQ(t,[1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?r.XLQ(t,[1,1,s[0]]):r.XLQ(t,[1].concat(s))}else if(e<3)return t;throw new qs(`Unsupported input rank by biasAdd: ${t.rank}`)}function ra(e,t,n){return(0,r.lub)((()=>(null==n&&(n="channelsLast"),Rr(n),r.IHx(e,sa(e.rank,t,n)))))}function aa(e,t,n,s){return(0,r.lub)((()=>r.rvX(e,t,n,s)))}function ia(e,t,n=!1){return n?e():t()}const oa=["fanIn","fanOut","fanAvg"],ua=["normal","uniform","truncatedNormal"];class la extends r.m7h.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class ca extends la{apply(e,t){return(0,r.lls)(e,t)}}ca.className="Zeros",r.m7h.registerClass(ca);class ha extends la{apply(e,t){return(0,r.iUs)(e,t)}}ha.className="Ones",r.m7h.registerClass(ha);class pa extends la{constructor(e){if(super(),"object"!=typeof e)throw new qs(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new qs(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return(0,r.lub)((()=>(0,r.dC7)((0,r.iD$)(this.value),(0,r.iUs)(e,t))))}getConfig(){return{value:this.value}}}pa.className="Constant",r.m7h.registerClass(pa);class da extends la{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return(0,r.LGj)(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}da.className="RandomUniform",r.m7h.registerClass(da);class fa extends la{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Ks(`randomNormal does not support dType ${t}.`);return Zr(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}fa.className="RandomNormal",r.m7h.registerClass(fa);class ma extends la{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Ks(`truncatedNormal does not support dType ${t}.`);return(0,r.Xu6)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ma.className="TruncatedNormal",r.m7h.registerClass(ma);class ga extends la{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return(0,r.lub)((()=>{if(2!==e.length||e[0]!==e[1])throw new qs("Identity matrix initializer can only be used for 2D square matrices.");return(0,r.dC7)(this.gain,(0,r.iyy)(e[0]))}))}getConfig(){return{gain:this.gain}}}ga.className="Identity",r.m7h.registerClass(ga);class ya extends la{constructor(e){if(super(),e.scale<0)throw new qs(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,hr(oa,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){hr(ua,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,s;if(Rr(t),2===e.length)n=e[0],s=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Ur(e,2);n=e[1]*t,s=e[0]*t}else if("channelsLast"===t){const t=Ur(e,0,e.length-2);n=e[e.length-2]*t,s=e[e.length-1]*t}}else{const t=Ur(e);n=Math.sqrt(t),s=Math.sqrt(t)}return[n,s]}(e),s=n[0],a=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,s):"fanOut"===this.mode?i/=Math.max(1,a):i/=Math.max(1,(s+a)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Ks(`${this.getClassName()} does not support dType ${t}.`);return(0,r.Xu6)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*i);return(0,r.LGj)(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}ya.className="VarianceScaling",r.m7h.registerClass(ya);class ba extends ya{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ya.className}}ba.className="GlorotUniform",r.m7h.registerClass(ba);class xa extends ya{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ya.className}}xa.className="GlorotNormal",r.m7h.registerClass(xa);class va extends ya{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ya.className}}va.className="HeNormal",r.m7h.registerClass(va);class wa extends ya{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ya.className}}wa.className="HeUniform",r.m7h.registerClass(wa);class ka extends ya{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ya.className}}ka.className="LeCunNormal",r.m7h.registerClass(ka);class Ia extends ya{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ya.className}}Ia.className="LeCunNormal",r.m7h.registerClass(Ia);class Sa extends la{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new Ks("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return(0,r.lub)((()=>{if(e.length<2)throw new Ks("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=Zr(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=r.$r2.gramSchmidt(t);return e[0]>e[1]&&(n=(0,r.p4s)(n)),(0,r.dC7)(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Sa.className="Orthogonal",r.m7h.registerClass(Sa);const Na={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Ta(e,t={}){return or(e,r.m7h.SerializationMap.getMap().classNameMap,t,"initializer")}function Ca(e){return ar(e)}function $a(e){if("string"==typeof e){const t=e in Na?Na[e]:e;if("GlorotNormal"===t)return new xa;if("GlorotUniform"===t)return new ba;if("HeNormal"===t)return new va;if("HeUniform"===t)return new wa;if("LeCunNormal"===t)return new ka;if("LeCunUniform"===t)return new Ia;{const e={};return e.className=t,e.config={},Ta(e)}}return e instanceof la?e:Ta(e)}let Ea=0;function Aa(){return Ea++}const Da={};function Ra(e=""){return e in Da||(Da[e]=0),Da[e]+=1,e+Da[e].toString()}function _a(e){return Array.isArray(e)&&Array.isArray(e[0])}function Fa(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Oa(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new qs(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Ma(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new qs(`Expected exactly 1 Shape; got ${e.length}`)}return e}function La(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class za{constructor(e,t="float32",n="Variable",s=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Aa(),n=null==n?"Variable":n,this.originalName=Lr(n),this.name=zr(this.originalName),this.trainable_=s,this.constraint=a,this.val=r.VD$(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Ba(e){return e.map((e=>e.read()))}function Pa(e){e.forEach((e=>{e[0].write(e[1])}))}class Ua{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Wa{constructor(e,t,n,s,r,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=i,this.id=Aa(),null!=a&&(this.originalName=Lr(a),this.name=zr(this.originalName)),this.rank=t.length}}let Va=0;class Ha{constructor(e,t){this.callArgs=t,this.id=Va++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Ga=0;class ja extends r.m7h.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Ga++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=nr(e)+"_"+Ra(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Xs(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new qs(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return er(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return er(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new js(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new js(`Layer ${this.name} is not connected, no input to return.`);return er(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new js(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new js(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return er(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=tr(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=tr(this.inputSpec);if(e.length!==t.length)throw new qs(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const s=e[n],r=t[n];if(null==r)continue;const a=s.rank;if(null!=r.ndim&&a!==r.ndim)throw new qs(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(null!=r.maxNDim&&a>r.maxNDim)throw new qs(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(null!=r.minNDim&&a<r.minNDim)throw new qs(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(null!=r.dtype&&s.dtype!==r.dtype)throw new qs(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){const e=s.shape;for(const t in r.axes){const s=Number(t),a=r.axes[t],i=s>=0?e[s]:e[e.length+s];if(null!=a&&-1===[a,null].indexOf(i))throw new qs(`Input ${n} is incompatible with layer ${this.name}: expected axis ${s} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=r.shape)for(let e=0;e<r.shape.length;++e){const t=r.shape[e],a=s.shape[e];if(null!=t&&null!=a&&t!==a)throw new qs(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=tr(e);let s=!0;for(const e of n)if(!(e instanceof Wa)){s=!1;break}let r=!0;for(const e of n)if(e instanceof Wa){r=!1;break}if(s===r)throw new qs("Arguments to apply() must be all SymbolicTensors or all Tensors");return Mr(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of tr(e))t.push(n.shape);this.build(er(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let s=this.call(e,t);const r=tr(s),a=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(s=er(a),null!=this.activityRegularizer)throw new Ks("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{const n=function(e){e=tr(e);const t=[];for(const n of e)t.push(n.shape);return er(t)}(e),s=this.computeOutputShape(n);let r;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=s&&s.length>0&&Array.isArray(s[0])?s.map(((n,s)=>new Wa(a,n,this,tr(e),t,this.name,s))):new Wa(a,s,this,tr(e),t,this.name),this.addInboundNode(e,r,null,null,n,s,t),this._refCount++,null!=this.activityRegularizer)throw new Ks("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,s)=>{null!=n&&null!=e[s]&&e[s]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new js(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new js(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Xs(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return La(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Ba(e?this.trainableWeights:this.weights)}setWeights(e){(0,r.lub)((()=>{const t=this.weights;if(t.length!==e.length)throw new qs(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],s=Ba(t);for(let a=0;a<s.length;++a){const i=s[a],o=t[a],u=e[a];if(!r.D5U.arraysEqual(i.shape,u.shape))throw new qs(`Layer weight shape ${i.shape} not compatible with provided weight shape ${u.shape}`);n.push([o,u])}Pa(n)}))}addWeight(e,t,n,s,r,a,i){if(-1!==this._addedWeightNames.indexOf(e))throw new qs(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(s=$a("zeros"));const o=s.apply(t,n),u=new za(o,n,e,a,i);return o.dispose(),null!=r&&this.addLoss((()=>r.apply(u.read()))),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=tr(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,s,r,a,i=null){const o=tr(e);t=tr(t),n=tr(n),s=tr(s),r=Fa(r),a=Fa(a);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new Ha({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Xa(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const s=Xa(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of s)-1===t.indexOf(e)&&t.push(e)}return t}}}class qa extends ja{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Ra("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new qs("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new qs("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new qs("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const s=new Wa(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new Ha({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new qs(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function Ka(e){if(null==e)return;const t=[],n=[],s=[];for(const r in e){const a=e[r];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(r),s.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];(0,r.B90)(s)}}function Ya(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Qa;qa.className="InputLayer",r.m7h.registerClass(qa),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Qa||(Qa={}));class Ja{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Za{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class ei extends Ja{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const s=t[e];if("number"==typeof s)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+s*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const a=(0,r.lub)((()=>(0,r.IHx)(this.totals[e],(0,r.dC7)(s,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:(0,r.lub)((()=>{const n=(0,r.dC7)((0,r.hiC)(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),(0,r.CnY)(t[e])})))}}class ti extends Ja{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)if("number"!=typeof r[a]){const i=r[a];e.push(i.data()),t.push(s),n.push(a)}}const s=await Promise.all(e);for(let e=0;e<s.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=s[e][0]}}class ni extends Ja{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");r.D5U.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,s=r.D5U.now();return(...a)=>{const i=r.D5U.now();return i-s<t||(s=i,n=e(...a)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const s=[];null!=this.yield&&(await Ka(n),s.push(this.yield(e,t,n))),s.push((0,r.glt)()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Ka(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Ka(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push((0,r.glt)()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Ka(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Ka(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push((0,r.glt)()):r.D5U.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Ka(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Ka(e),await this.trainEnd(e))}}function si(e,t){return null==e&&(e={}),e instanceof Ja?[e]:Array.isArray(e)&&e[0]instanceof Ja?e:tr(e).map((e=>new ni(e,t)))}class ri{constructor(){}static registerCallbackConstructor(e,t){r.D5U.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),ri.checkForDuplicate(t),null==ri.constructors[e]&&(ri.constructors[e]=[]),ri.constructors[e].push(t)}static checkForDuplicate(e){for(const t in ri.constructors)ri.constructors[+t].forEach((t=>{if(t===e)throw new qs("Duplicate callback constructor.")}))}static clear(){ri.constructors={}}static createCallbacks(e){const t=[];for(const n in ri.constructors){const s=+n;e>=s&&t.push(...ri.constructors[s])}return t.map((e=>new e))}}function ai(e,t,n,s,r,a,i,o,u){const l=new ti,c=[new ei,...ri.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const h=new Za(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}function ii(e,t={},n=!1){return or(e,r.m7h.SerializationMap.getMap().classNameMap,t,"layer",n)}function oi(e,t){return(0,r.lub)((()=>{"float32"!==e.dtype&&(e=r.pju(e,"float32"));const n=r.Smz(na(e),t,!0),s=r.hlL(n.shape,Gs()),a=r._b3(r.gWQ(n,s));return r.hiC(e,a)}))}function ui(e,t){return(0,r.lub)((()=>r.J69(na(r.luU(t,e)),-1)))}function li(e,t){return(0,r.lub)((()=>r.J69(r.WnP(r.luU(t,e)),-1)))}function ci(e,t){return(0,r.lub)((()=>{const n=r.luU(e,t),s=r.iUl(r.WnP(e),Gs(),Number.MAX_VALUE),a=r.WnP(r.hiC(n,s));return r.dC7(100,r.J69(a,-1))}))}function hi(e,t,n=!1){return(0,r.lub)((()=>{if(n)t=r.XAC(t);else{const e=r.Smz(t,t.shape.length-1,!0);t=r.hiC(t,e)}return t=r.iUl(t,Gs(),1-Gs()),r.W76(r.Smz(r.dC7(r.pju(e,"float32"),r.cM7(t)),t.shape.length-1))}))}function pi(e,t,n=!1){return(0,r.lub)((()=>{const s=r.pju(r.GWj(function(e){const t=[Ur(e.shape)];return r.XLQ(e,t)}(e)),"int32"),a=(t=r.iUl(t,Gs(),1-Gs())).shape;return hi(r.XLQ(r.lfX(s,a[a.length-1]),a),t,n)}))}function di(e,t){return(0,r.lub)((()=>{let n;return n=r.iUl(t,Gs(),1-Gs()),n=r.cM7(r.hiC(n,r.luU(1,n))),r.J69(function(e,t){if(!r.D5U.arraysEqual(e.shape,t.shape))throw new qs(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return(0,r.lub)((()=>{const n=r.UYe(t),s=r.W76(r.WnP(t));return r.IHx(r.luU(n,r.dC7(t,e)),r.Krr(r.Qqt(s)))}))}(e,n),-1)}))}function fi(e,t){return(0,r.lub)((()=>{const n=oi(e,-1),s=oi(t,-1),a=r.dC7(n,s);return r.W76(r.Smz(a,-1))}))}ri.constructors={};const mi={meanSquaredError:ui,meanAbsoluteError:li,meanAbsolutePercentageError:ci,meanSquaredLogarithmicError:function(e,t){return(0,r.lub)((()=>{const n=r.iUl(t,Gs(),Number.MAX_VALUE),s=r.cM7(r.IHx(1,n)),a=r.iUl(e,Gs(),Number.MAX_VALUE),i=r.cM7(r.IHx(1,a));return r.J69(na(r.luU(s,i)),-1)}))},squaredHinge:function(e,t){return(0,r.lub)((()=>{const n=r.gWQ(0,r.luU(1,r.dC7(e,t)));return r.J69(na(n),-1)}))},hinge:function(e,t){return(0,r.lub)((()=>{const n=r.gWQ(0,r.luU(1,r.dC7(e,t)));return r.J69(n,-1)}))},categoricalHinge:function(e,t){return(0,r.lub)((()=>{const n=r.Smz(r.dC7(e,t),-1),s=r.Fp7(r.dC7(r.luU(1,e),t),-1);return r.gWQ(0,r.IHx(1,r.luU(s,n)))}))},logcosh:function(e,t){return(0,r.lub)((()=>{const n=Math.log(2),s=r.luU(t,e),a=r.luU(r.IHx(s,r.Wvh(r.dC7(-2,s))),n);return r.J69(a,-1)}))},categoricalCrossentropy:hi,sparseCategoricalCrossentropy:pi,binaryCrossentropy:di,kullbackLeiblerDivergence:function(e,t){return(0,r.lub)((()=>{const n=r.iUl(e,Gs(),1),s=r.iUl(t,Gs(),1);return r.Smz(r.dC7(e,r.cM7(r.hiC(n,s))),-1)}))},poisson:function(e,t){return(0,r.lub)((()=>{const n=r.cM7(r.IHx(Gs(),t));return r.J69(r.luU(t,r.dC7(e,n)),-1)}))},cosineProximity:fi};function gi(e){if("string"==typeof e){if(e in mi)return mi[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new qs(t)}return e}function yi(e,t){return(0,r.lub)((()=>{const n=r.dC7(.5,r.JpU(t)),s=Gr(r.pjt(t,n),e.dtype);return r.J69(r.DgJ(e,s),-1)}))}function bi(e,t){return(0,r.lub)((()=>Gr(r.DgJ(r.NqF(e,-1),r.NqF(t,-1)),"float32")))}function xi(e,t){return di(e,t)}function vi(e,t){return e.rank===t.rank&&(e=r.L9e(e,[e.rank-1])),(t=r.NqF(t,-1)).dtype!==e.dtype&&(t=r.pju(t,e.dtype)),r.pju(r.DgJ(e,t),"float32")}const wi=hi,ki=pi,Ii={binaryAccuracy:yi,categoricalAccuracy:bi,precision:function(e,t){return(0,r.lub)((()=>{const n=function(e,t){return(0,r.lub)((()=>r.pju(r.Smz(r.HvI(r.DgJ(e,1),r.DgJ(t,1))),"float32")))}(e,t),s=function(e,t){return(0,r.lub)((()=>r.pju(r.Smz(r.HvI(r.DgJ(e,0),r.DgJ(t,1))),"float32")))}(e,t),a=r.IHx(n,s);return r.pju(r.arb(r.pjt(a,0),r.hiC(n,a),0),"float32")}))},categoricalCrossentropy:wi,sparseCategoricalCrossentropy:ki,mse:ui,MSE:ui,mae:li,MAE:li,mape:ci,MAPE:ci,cosine:fi};function Si(e){if("string"==typeof e&&e in Ii)return Ii[e];if("string"!=typeof e&&null!=e)return e;throw new qs(`Unknown metric ${e}`)}function Ni(e){if(Js(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(mi))if(mi[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Ii))if(Ii[n]===e){t=n;break}return void 0!==t?t:e.name}}function Ti(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Ci(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Ci(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Ci(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Ci(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function $i(e,t,n=console.log){let s="";for(let n=0;n<e.length;++n)n>0&&(s=s.slice(0,s.length-1)+" "),s+=e[n],s=s.slice(0,t[n]),s+=" ".repeat(t[n]-s.length);n(s)}function Ei(e,t,n){let s;try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}$i([`${e.name} (${e.getClassName()})`,s,e.countParams().toString()],t,n)}function Ai(e,t,n,s){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}const a=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,s=t.nodeIndices[e],r=t.tensorIndices[e];a.push(`${n}[${s}][${r}]`)}const i=e.name,o=e.getClassName(),u=0===a.length?"":a[0];$i([`${i} (${o})`,r,e.countParams().toString(),u],t,s);for(let e=1;e<a.length;++e)$i(["","","",a[e]],t,s)}function Di(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Ri(e,t){if(null===e)return null;if("string"==typeof e)return sr(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];Di(t,r,s)?n.push(s):n.push(Ri(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];if("name"===n&&"string"==typeof s)t[n]=s;else{const e=sr(n);t[e]=Ri(s,e)}}return t}}function _i(e,t){if(null==e)return null;if("string"==typeof e)return nr(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];Di(t,r,s)?n.push(s):n.push(_i(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];t[nr(n)]="name"!==n&&"className"!==n||"string"!=typeof s?_i(s,n):s}return t}}class Fi{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Fi)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new qs(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return(0,r.pju)(t,e.dtype)}catch(n){throw new qs(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Wa){if(null==this.id2Value[e.id])throw new qs(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new qs(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Wa){if(null==this.id2Value[e.id])throw new qs(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new qs(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&(0,r.B90)(this.id2Mask)}}const Oi={},Mi={};function Li(e,t,n,s){const a=null!=n&&n.training,i=Array.isArray(e),o=i?e:[e],u=o.map((e=>e.name)),l=[],c=t.names();for(const e of u)-1!==c.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const h=u.join(",")+"|"+t.names().join(",");let p,d;if(null==Oi[h]){const e=function(e,t){r.D5U.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===e.length){const r=Bi(e[0],t);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const a of e){const{sorted:e,recipientMap:i}=Bi(a,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const e in i)null==s[e]&&(s[e]=new Set),i[e].forEach((t=>s[e].add(t)))}}return{sorted:n,recipientCounts:zi(s)}}(o,t);p=e.sorted,d=e.recipientCounts,Oi[h]=p,Mi[h]=d}p=Oi[h],d={},a||Object.assign(d,Mi[h]);const f=new Fi(t);for(let e=0;e<p.length;++e){if(null!=s){const e=(0,r.sq6)().numTensors;e>s.maxNumTensors&&(s.maxNumTensors=e),e<s.minNumTensors&&(s.minNumTensors=e)}const i=p[e],o=i.sourceLayer;if(o instanceof qa)continue;const c=[],h=[],m=[];let g=!1;for(const e of i.inputs){const n=f.getValue(e),s=f.getMask(e);c.push(n),h.push(s),null!=s&&(g=!0),a||(d[e.name]--,0!==d[e.name]||t.hasKey(e)||-1!==u.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||m.push(n))}g&&((n=n||{}).mask=h[0]);const y=tr(o.apply(c,n));let b=null;o.supportsMasking&&(b=o.computeMask(c,h));const x=Pi(i),v=Array.isArray(x)?x:[x];for(let e=0;e<v.length;++e){f.hasKey(v[e])||f.add(v[e],y[e],Array.isArray(b)?b[0]:b);const t=u.indexOf(v[e].name);-1!==t&&(l[t]=y[e])}a||(0,r.B90)(m)}return f.disposeMasks(),i?l:l[0]}function zi(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Bi(e,t){const n=new Set,s=[],r={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),s.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:s,recipientMap:r}}function Pi(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const s of e.sourceLayer.inboundNodes[t].outputTensors)if(s.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class Ui extends ja{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Ra(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],lr(this.inputs).length!==this.inputs.length)throw new qs(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);lr(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(s)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex;Js(0===n,"input layer has >1 nodes"),Js(0===s,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(s)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof qa))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},s={},r={},a={},i=[],o=(e,t,n,s,r,u)=>{null!=s&&null!=r&&null!=u||(s=e.sourceLayer,r=e.nodeIndex,u=e.tensorIndex);const l=s.inboundNodes[r];if(-1!==n.indexOf(l))throw new Xs(`The tensor ${e.name} at layer "${s.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(Ui.nodeKey(s,r)),s.id in a||(a[s.id]=Object.keys(a).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const s=l.inputTensors[e],r=l.inboundLayers[e],a=l.nodeIndices[e],i=l.tensorIndices[e];o(s,t,n,r,a,i)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==s[e.outboundLayer.id]?0:s[e.outboundLayer.id];a=Math.max(a,i),s[e.outboundLayer.id]=a,r[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let s=0;s<e.inboundLayers.length;s++){const r=e.inboundLayers[s],i=e.nodeIndices[s],o=r.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,u),n[o.id]=o}}const h={};for(const e in t){const s=t[e];s in h||(h[s]=[]),h[s].push(n[e])}const p={};for(const e in s){const t=s[e];t in p||(p[t]=[]),p[t].push(r[e])}let d=Object.keys(p).map((e=>parseInt(e,10))).sort(ur);this.layers=[];for(const e of d){const t=p[e];t.sort(((e,t)=>{const n=a[e.id],s=a[t.id];return n<s?-1:n>s?1:0}));for(const e of t)e instanceof Ui&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,d=Object.keys(h).map((e=>parseInt(e,10))).sort(ur);const f=this.inputs.slice(),m=[];for(const e of d)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new Xs(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new Xs(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Ha({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new qs("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let s=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new qs(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,s++}const r=[];for(const s in e){let a=s;if(null==n[s]){const e=s.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])r.push([n[a],e[s]]);else if(t)throw new qs(`Provided weight data has no target variable: ${s}`);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new qs(`${e.length} of ${s} weights are not set: ${e}`)}Pa(r)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 3.9.0",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=_i(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return(0,r.lub)((()=>{e=tr(e);const n=new Fi;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Li(this.outputs,n,t)}))}computeMask(e,t){return(0,r.lub)((()=>{let n;return e=tr(e),n=null==t?Qs(null,e.length):tr(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Fa(e);if(t.length!==this.inputLayers.length)throw new qs(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const s=this.inputLayers[e],r=t[e];n[s.name+"_0_0"]=r}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ur);if(s.length>1)for(const e of s){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const s=[];for(let t=0;t<e.inboundLayers.length;t++){const r=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${r.name}_${a}_${i}`];s.push(o)}const r=Fa(t.computeOutputShape(er(s))),a=t.inboundNodes.indexOf(e);for(let e=0;e<r.length;e++)n[`${t.name}_${a}_${e}`]=r[e]}}const r=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],s=this.outputLayersTensorIndices[e],r=`${t.name}_${n}_${s}`;a.push(r)}for(let e=0;e<a.length;e++){const t=a[e];Js(t in n),r.push(n[t])}return er(r)}runInternalGraph(e,t){null==t&&(t=Qs(null,e.length));const n={};for(let s=0;s<this.inputs.length;++s){const r=this.inputs[s],a=e[s],i=t[s];n[r.id]=[a,i]}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ur);for(const e of s){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,s=e.inputTensors,r=e.outputTensors,a=new Array;for(const e of s)e.id in n&&a.push(n[e.id]);if(a.length===s.length){let s,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===a.length){const[e,n]=a[0];null==l.mask&&(l.mask=n),o=tr(t.call(e,l)),u=tr(t.computeMask(e,n)),s=[e],i=[n]}else s=a.map((e=>e[0])),i=a.map((e=>e[1])),null==l.mask&&(l.mask=i),o=tr(t.call(s,l)),u=tr(t.computeMask(s,i));if(t.activityRegularizer)throw new Ks("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],s=o[e],a=u[e];n[t.id]=[s,a]}}}}const r=[],a=[],i=[];for(const e of this.outputs){Js(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,s]=n[e.id];i.push(t.shape),r.push(t),a.push(s)}return[r,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Ui?1:0;for(let s=0;s<e.inboundNodes.length;s++){const r=Ui.nodeKey(e,s);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new qs(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new qs("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new qs(`No such layer: ${e}`)}calculateLosses(){return(0,r.lub)((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const s=Ui.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const s=e.getClassName(),r=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const s=e.inboundNodes[n],r=Ui.nodeKey(e,n);let i={};if(this.containerNodes.has(r)){if(s.callArgs)try{JSON.stringify(s.callArgs),i=s.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${s.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(s.inboundLayers.length>0){const e=[];for(let n=0;n<s.inboundLayers.length;n++){const r=s.inboundLayers[n],a=s.nodeIndices[n],o=s.tensorIndices[n];let u=t[Ui.nodeKey(r,a)];null==u&&(u=0),e.push([r.name,u,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=s,i.config=r,i.inboundNodes=a,n.push(i)}e.layers=n;const s=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],r=this.inputLayersNodeIndices[e],a=Ui.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];s.push([n.name,i,o])}e.inputLayers=s;const r=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],s=this.outputLayersNodeIndices[e],a=Ui.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];r.push([n.name,i,o])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){const r={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let s;for(const a of t){const o=a[0],u=a[1],l=a[2];if(s=null==a[3]?{}:a[3],!(o in r))return void i(e,t);const c=r[o];if(c.inboundNodes.length<=u)return void i(e,t);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&e.apply(er(n),s)}function u(e){const n=e.name,a=ii(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(s),r[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new qs(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!cr(a);)for(const e of c){const t=r[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],p=[],d=t.inputLayers;for(const e of d){const t=e[0],n=e[1],s=e[2];Js(t in r);const a=r[t].inboundNodes[n].outputTensors;h.push(a[s])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],s=e[2];Js(t in r);const a=r[t].inboundNodes[n].outputTensors;p.push(a[s])}return new e({inputs:h,outputs:p,name:l})}get stateful(){if(this._stateful)throw new qs("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){(0,r.lub)((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Wi(e,t){return function(e,t,n){const s=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===s)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Vi(e,t,n,s){if(null!=t||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=(0,r.lub)((()=>{if(1===e.shape.length)return(0,r.d9v)(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return(0,r.NqF)(e,t)}if(1===e.shape[1])return(0,r.XLQ)(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await t.data());(0,r.B90)(t);const a=[];return s.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),(0,r.RRF)(a,"float32")}return null}function Hi(e,t){return(0,r.dC7)(e,t)}function Gi(e,t){let n,s;const a=t;n=a.xs,s=a.ys,r.D5U.assert(null!=n&&null!=s,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const i=ji("input",e.inputNames,n),o=ji("output",e.outputNames,s),u=i[0].shape[0];r.D5U.assert(i.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),r.D5U.assert(o.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<i.length;t++)r.D5U.assert(i[t].shape[0]===u,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${i[t].shape[0]}; expected  ${u} based on input ${e.inputNames[0]}.`));for(let t=0;t<o.length;t++)r.D5U.assert(o[t].shape[0]===u,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${o[t].shape[0]}; expected  ${u} based on input ${e.inputNames[0]}.`));return{xs:i,ys:o}}function ji(e,t,n){if(n instanceof r.esB)return[n];if(Array.isArray(n))return r.D5U.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const s=[];for(const r of t){if(null==n[r])throw new qs(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function Xi(e){return"function"==typeof e.iterator}function qi(e){r.D5U.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Ki(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Xr(e,t,n-t))):Xr(e,t,n-t)}function Yi(e,t){return r.lub((()=>null==e?null:Array.isArray(e)?e.map((e=>Yi(e,t))):ta(e,"int32"===t.dtype?t:r.pju(t,"int32"))))}function Qi(e,t){const n=[];let s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}function Ji(e){const t=[];e instanceof r.esB&&(e=[e]);for(let n=0;n<e.length;++n){const s=e[n];if(1===s.rank)t.push(jr(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function Zi(e,t){if(null==e)return;const n=[];if(t instanceof r.esB)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const s=t[e];n.push(s.id)}const s=[];if(e instanceof r.esB)-1===n.indexOf(e.id)&&s.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&s.push(e)}));else if(null!=e)for(const t in e){const r=e[t];-1===n.indexOf(r.id)&&s.push(r)}s.forEach((e=>{e.isDisposed||e.dispose()}))}function eo(e){return Array.isArray(e)}function to(e){return!function(e){return e instanceof r.esB}(e)&&!eo(e)}function no(e,t,n,s=!0,r=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(eo(e)&&e.length>0)t=!0;else if(to(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new qs(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(to(e)){e=e,a=[];for(const n of t){if(null==e[n])throw new qs(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(eo(e)){if((e=e).length!==t.length)throw new qs(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new qs(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=Ji(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new qs(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!s)continue;const a=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&a!==o)throw new qs(`${r} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function so(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new qs(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new qs(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new qs(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!s)continue;const o=i.shape[a],u=n[e][a];if(null!=u&&u!==o)throw new qs(`Error when checking ${r}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class ro extends Ui{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new qs("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,s=console.log){const r=function(e){let t=!0;const n=[],s=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}s.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const r of n.inboundNodes)if(-1!==s.indexOf(r)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Output shape","Param #"];let i;if(r?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}s("_".repeat(t)),$i(a,n,s),s("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)r?Ei(o[e],n,s):Ai(o[e],n,i,s),s((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;return t=null!=e.collectedTrainableWeights?La(e.collectedTrainableWeights):La(e.trainableWeights),t}(e),l=La(e.nonTrainableWeights);s(`Total params: ${u+l}`),s(`Trainable params: ${u}`),s(`Non-trainable params: ${l}`),s("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>r.p_j.adagrad(.01),Adadelta:()=>r.p_j.adadelta(1,.95,Gs()),Adam:()=>r.p_j.adam(.001,.9,.999,Gs()),Adamax:()=>r.p_j.adamax(.002,.9,.999,Gs(),0),RMSProp:()=>r.p_j.rmsprop(.001,.9,0,Gs()),SGD:()=>r.p_j.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new qs(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof r.gaJ))throw new qs("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new qs(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>gi(e)))}else{const n=gi(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new qs(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(gi(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Mr("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const s=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const s of t){let t=n.hasOwnProperty(s)?n[s]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Mr("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,s,r;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===di?-1!==["accuracy","acc"].indexOf(i)?s=yi:-1!==["crossentropy","ce"].indexOf(i)&&(s=xi):this.lossFunctions[e]===pi?-1!==["accuracy","acc"].indexOf(i)?s=vi:-1!==["crossentropy","ce"].indexOf(i)&&(s=ki):-1!==["accuracy","acc"].indexOf(i)?s=bi:-1!==["crossentropy","ce"].indexOf(i)&&(s=wi),-1!==["accuracy","acc"].indexOf(i)?a="acc":-1!==["crossentropy","ce"].indexOf(i)&&(a="ce"),r=s,n=""+a}else{const e=Si(i);r=e,n=""+Ni(i)}let t;Mr(n,(()=>{t=r})),a(e,n,t)}})(s[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const s=null==n.batchSize?32:n.batchSize;qi(s);const r=this.standardizeUserDataXY(e,t,!0,s);try{const a=r[0].concat(r[1]);this.makeTestFunction();const i=this.testFunction;return er(this.testLoop(i,a,s,n.verbose,n.steps))}finally{Zi(r[0],e),Zi(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const s=null!=(n=n||{}).batches,a=e.testFunction;let i=[];if(n.verbose>0)throw new Ks("Verbose mode is not implemented yet.");r.D5U.assert(!s||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const o="function"==typeof t.next?t:await t.iterator();let u=0,l=0;for(;!s||l<n.batches;){const t=await o.next();if(i=r.lub((()=>{if(t.value){const{xs:n,ys:s}=Gi(e,t.value),o=n.concat(s),c=r.lub((()=>a(o)));if(r.B90(o),0===l)for(let e=0;e<c.length;++e)i.push((0,r.iD$)(0));const h=o[0].shape[0];for(let e=0;e<c.length;++e){const t=c[e],n=i[e];i[e]=r.lub((()=>r.IHx(i[e],r.dC7(h,t)))),l>0&&r.B90(n)}r.B90(c),u+=h,++l}return i})),t.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<i.length;++e){const t=i[e];i[e]=r.hiC(i[e],u),r.B90(t)}return er(i)}(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(null!=n){if(r=null,null!=t)throw new qs(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new qs(`Either the input data should have a defined shape, or ${s} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new qs("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),s=n?t:[t],a=this.retrieveSymbolicTensors(s),i=new Fi;if(e instanceof r.esB&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new qs(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)i.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new qs(`No value is provided for the model's input ${t.name}`);i.add(t,n)}const o=Li(a,i);return n?o:o[0]}retrieveSymbolicTensors(e){const t=Qs(null,e.length);let n=e.length;for(const s of this.layers){const r=Array.isArray(s.output)?s.output:[s.output],a=r.map((e=>e.name));for(let s=0;s<e.length;++s){const i=a.indexOf(e[s]);if(-1!==i&&(t[s]=r[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,s)=>{null==t&&n.push(e[s])})),new qs(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return r.lub((()=>{const s=this.checkNumSamples(e);if(n)throw new Ks("Verbose predictLoop() is not implemented yet.");const a=Qi(s,t),i=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t)r.lub((()=>{const n=a[t][0],s=a[t][1],r=Ki(e,n,s),i=[];if(Array.isArray(r))for(let e=0;e<r.length;++e)i.push({key:this.inputs[e],value:r[e]});else i.push({key:this.inputs[0],value:r});const o=new Fi(i);return Li(this.outputs,o)})).forEach(((e,t)=>i[t].push(e)));return er(i.map((e=>r.zoF(e,0))))}))}predict(e,t={}){const n=Ji(e);so(n,this.inputNames,this.feedInputShapes,!1);try{const s=null==t.batchSize?32:t.batchSize;return qi(s),this.predictLoop(n,s)}finally{Zi(n,e)}}predictOnBatch(e){so(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(null==this.optimizer_)throw new Xs("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===pi?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(e,t,n){const s=lr(e.map((e=>e.shape[0])));s.sort();const a=lr(t.map((e=>e.shape[0])));if(a.sort(),s.length>1)throw new qs(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new qs(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(s.length>0&&a.length>0&&!r.D5U.arraysEqual(s,a))throw new qs(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=no(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=no(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const s=[ui,di,hi];for(let r=0;r<e.length;++r){const a=e[r],i=t[r],o=n[r];if(null!=i){if(i===hi&&1===a.shape[a.shape.length-1])throw new qs(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const s=e[n],r=t[n];if(null!=r&&s!==r)throw new qs(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&e[0].shape[0]%s!=0)throw new qs(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,r,a);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=s){const e=Wi(s,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await Vi(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,s=0,a){return r.lub((()=>{const i=this.checkNumSamples(t,n,a,"steps"),o=[];if(s>0)throw new Ks("Verbose mode is not implemented yet.");if(null!=a)throw new Ks("steps mode in testLoop() is not implemented yet");{const s=Qi(i,n),a=(0,r.RRF)(Hr(0,i));for(let n=0;n<s.length;++n){const i=s[n][0],u=s[n][1],l=Xr(a,i,u-i),c=Yi(t,l),h=e(c);if(0===n)for(let e=0;e<h.length;++e)o.push((0,r.iD$)(0));for(let e=0;e<h.length;++e){const t=h[e];o[e]=r.IHx(o[e],r.dC7(u-i,t))}}for(let e=0;e<o.length;++e)o[e]=r.hiC(o[e],i)}return o}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const s=e[n];let r=s;Zs(e,s)>1&&(r+=`_${Zs(e.slice(0,n),s)}`),t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],o=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const o=new Fi(e),u=Li(this.outputs,o,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(s[e],u[e]);null!=a[e]&&(n=Hi(n,a[e]));const i=r.J69(n);t.push(i),l=0===e?n:r.IHx(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=r.J69(t(s[a],u[a]))}r.CnY(n),i.push(n)}return l=r.J69(l),this.calculateLosses().forEach((e=>{l=r.IHx(l,e)})),l}),!0,o)].concat(i)}}makeTestFunction(){this.testFunction=e=>r.lub((()=>{const t=[];let n;const s=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let e=0;e<this.inputs.length;++e)i.push({key:this.inputs[e],value:s[e]});const o=new Fi(i),u=Li(this.outputs,o);for(let e=0;e<this.lossFunctions.length;++e){const s=this.lossFunctions[e],i=r.J69(s(a[e],u[e]));n=0===e?i:r.IHx(n,i),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],s=this.metricsTensors[e][1],i=r.J69(n(a[s],u[s]));t.push(i)}return t}))}async fit(e,t,n={}){return async function(e,t,n,s={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,i,o,u,l,c,h;e.isTraining=!0;try{const p=null==s.batchSize?32:s.batchSize;qi(p);const d=!1,f=await e.standardizeUserData(t,n,s.sampleWeight,s.classWeight,d,p);a=f[0],i=f[1],h=f[2];let m,g=!1;if(null!=s.validationData&&s.validationData.length>0){if(g=!0,2!==s.validationData.length)throw 3===s.validationData.length?new Ks("validationData including sample weights is not supported yet."):new qs(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);o=s.validationData[0],u=s.validationData[1];const t=!0,n=await e.standardizeUserData(o,u,null,null,t,p);l=n[0],c=n[1],m=l.concat(c)}else if(null!=s.validationSplit&&s.validationSplit>0&&s.validationSplit<1){g=!0;const e=Math.floor(a[0].shape[0]*(1-s.validationSplit)),t=a[0].shape[0];l=Ki(a,e,t),a=Ki(a,0,e),c=Ki(i,e,t),i=Ki(i,0,e),m=l.concat(c)}else null!=s.validationSteps&&(g=!0);const y=a.concat(i).concat(h);e.checkTrainableWeightsConsistency();const b=e.makeTrainFunction(),x=e.getDedupedMetricsNames();let v,w;g?(e.makeTestFunction(),v=e.testFunction,w=x.slice().concat(x.map((e=>"val_"+e)))):(v=null,m=[],w=x.slice());const k=si(s.callbacks,s.yieldEvery),I=await async function(e,t,n,s,a,i,o,u,l,c,h,p,d,f,m){null==a&&(a=32),null==i&&(i=1),null==h&&(h=!0),null==d&&(d=0);let g=!1;null!=l&&null!=c&&(g=!0);const y=e.checkNumSamples(n,a,f,"steps_per_epoch");let b;null!=y&&(b=Hr(0,y)),null==o&&(o=1);const{callbackList:x,history:v}=ai(u,o,i,d,y,f,a,g,p);x.setModel(e),e.history=v,await x.onTrainBegin(),e.stopTraining_=!1;for(let o=d;o<i;++o){await x.onEpochBegin(o);const i={};{if("batch"===h)throw new Ks("batch shuffling is not implemneted yet");h&&r.D5U.shuffle(b);const o=(0,r.RRF)(b),u=Qi(y,a);for(let h=0;h<u.length;++h){const p={};if(await x.onBatchBegin(h,p),r.lub((()=>{const d=u[h][0],f=u[h][1],m=Xr(o,d,f-d);p.batch=h,p.size=f-d;const y=Yi(n,m),b=t(y);for(let e=0;e<s.length;++e){const t=s[e],n=b[e];p[t]=n,r.CnY(n)}if(h===u.length-1&&g){const t=e.testLoop(l,c,a);for(let e=0;e<s.length;++e){const n=s[e],a=t[e];r.CnY(a),i["val_"+n]=a}}})),await x.onBatchEnd(h,p),Ya(p),e.stopTraining_)break}o.dispose()}if(await x.onEpochEnd(o,i),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}(e,b,y,x,p,s.epochs,s.verbose,k,v,m,s.shuffle,w,s.initialEpoch,null);return I}finally{e.isTraining=!1,Zi(a,t),Zi(i,n),Zi(l,o),Zi(c,u),null!=h&&r.B90(h)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const s=null!=n.batchesPerEpoch;if(r.D5U.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),r.D5U.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),r.D5U.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),r.D5U.assert(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),r.D5U.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let i,o;if(a)if(Xi(n.validationData))r.D5U.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new Ks("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);i=e.xs,o=e.ys}const u=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let c;c=a?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const h=si(n.callbacks,n.yieldEvery),p=null==n.verbose?1:n.verbose,{callbackList:d,history:f}=ai(h,p,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,a,c);d.setModel(e),e.history=f,await d.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;m<n.epochs;){const c={};await d.onEpochBegin(m);let h=0,p=0;for(s||(g=await t.iterator());!s||h<n.batchesPerEpoch;){const t=await g.next();if(s&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${h} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:s,ys:a}=Gi(e,t.value),i={};i.batch=p,i.size=s[0].shape[0],await d.onBatchBegin(p,i);const o=[];if(null!=n.classWeight){const t=Wi(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)o.push(await Vi(a[e],null,t[e]))}const c=s.concat(a).concat(o),f=u(c);r.B90(c);for(let e=0;e<l.length;++e){const t=l[e],n=f[e];i[t]=n,r.CnY(n)}await d.onBatchEnd(p,i),Ya(i),p++,h++}if(s?h>=n.batchesPerEpoch:t.done){if(a){let t;t=Xi(n.validationData)?tr(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):tr(e.evaluate(i,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)c[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(m,c),m++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),s=n[0],a=n[1],i=this.makeTrainFunction()(s.concat(a)),o=[];for(const e of i){const t=await e.data();o.push(t[0])}return r.B90(i),er(o)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let e=0;e<s.length;++e)n&&!s[e].trainable||t.push({name:s[e].originalName,tensor:r[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=r.sq6().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-r.sq6().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=nr(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>nr(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const s of t){if("string"!=typeof n[s])throw new Error("Serialization of non-string loss is not supported.");e[s]=nr(n[s])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[nr(Ni(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>nr(Ni(e))));{const e={};for(const t in this.metrics)e[t]=nr(Ni(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=ii(Ri(e.optimizer_config));let n,s;if("string"==typeof e.loss)n=sr(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>sr(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=sr(e.loss[t])}if(Array.isArray(e.metrics))s=e.metrics.map((e=>sr(e)));else if(null!=e.metrics){s={};for(const t in e.metrics)s[t]=sr(e.metrics[t])}this.compile({loss:n,metrics:s,optimizer:t})}async save(e,t){if("string"==typeof e){const t=r.io.getSaveHandlers(e);if(0===t.length)throw new qs(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new qs(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new qs("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await r.io.encodeWeights(this.getNamedWeights(t)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.9.0",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:a}=await r.io.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=r.io.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Ti(this.userDefinedMetadata,this.name,e),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=n.data,s.weightSpecs=n.specs,e.save(s)}setUserDefinedMetadata(e){Ti(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}ro.className="Model",r.m7h.registerClass(ro);class ao extends ro{}ao.className="Functional",r.m7h.registerClass(ao);class io extends ro{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Ra("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new qs(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof io||e instanceof ro;let n;if(t){if(n=e,1!==n.outputs.length)throw new qs("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new qs("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new qs("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new qs("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new qa({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new qs(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new qs("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Xa(this.outputs[0])}this.inboundNodes=[],new Ha({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Qs(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Ma(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new ro({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Xs("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Xs("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Xs("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Xs("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let a,i={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new qs("Legacy serialization format not supported yet.");a=t}else r.D5U.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,i=t;const o=new e(i);if(!(o instanceof io))throw new Ks(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const e of a){const t=ii(e,void 0,s);s&&t.setFastWeightInitDuringBuild(!0),o.add(t)}return o}set stopTraining(e){if(null==this.model)throw new qs("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new qs("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function oo(e,t){return null==t&&(t={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){const n=r.io.getLoadHandlers(e,t);if(0===n.length)n.push(r.io.browserHTTPRequest(e,t));else if(n.length>1)throw new qs(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new qs("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await e.load();let a=s.modelTopology;null!=a.model_config&&(a=a.model_config);const i=null==n.strict||n.strict,o=null!=s.weightData&&null!=s.weightSpecs&&i,u=ii(Ri(a),void 0,o),l=s.trainingConfig;if(null!=l&&u.loadTrainingConfig(l),null!=s.userDefinedMetadata&&u.setUserDefinedMetadata(s.userDefinedMetadata),null!=s.weightData){if(null==s.weightSpecs)throw new qs("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=r.io.decodeWeights(e,t),s={},a=[];return t.forEach((e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):s[e.name]=n[e.name]})),{modelWeights:s,optimizerWeights:a}}(s.weightData,s.weightSpecs);u.loadWeights(e,i),null!=u.optimizer&&t.length>0&&await u.optimizer.setWeights(t),(0,r.B90)(e),(0,r.B90)(t.map((e=>e.tensor)))}return u}(e,0,t)}(e,t)}io.className="Sequential",r.m7h.registerClass(io);class uo extends r.m7h.Serializable{getConfig(){return{}}}class lo extends uo{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Ks(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return r.pyx(e)}(e,t)}}lo.className="elu",r.m7h.registerClass(lo);class co extends uo{apply(e){return r.U8D(e)}}co.className="selu",r.m7h.registerClass(co);class ho extends uo{apply(e){return r.UYe(e)}}ho.className="relu",r.m7h.registerClass(ho);class po extends uo{apply(e){return(0,r.lub)((()=>r.LTh(6,r.UYe(e))))}}po.className="relu6",r.m7h.registerClass(po);class fo extends uo{apply(e){return e}}fo.className="linear",r.m7h.registerClass(fo);class mo extends uo{apply(e){return r.XD2(e)}}mo.className="sigmoid",r.m7h.registerClass(mo);class go extends uo{apply(e){return function(e){return(0,r.lub)((()=>{const t=r.IHx(.5,r.dC7(.2,e));return r.iUl(t,0,1)}))}(e)}}go.className="hardSigmoid",r.m7h.registerClass(go);class yo extends uo{apply(e){return r.Wvh(e)}}yo.className="softplus",r.m7h.registerClass(yo);class bo extends uo{apply(e){return function(e){return(0,r.lub)((()=>r.hiC(e,r.IHx(r.WnP(e),1))))}(e)}}bo.className="softsign",r.m7h.registerClass(bo);class xo extends uo{apply(e){return r.AEp(e)}}xo.className="tanh",r.m7h.registerClass(xo);class vo extends uo{apply(e,t=-1){return r.XAC(e,t)}}vo.className="softmax",r.m7h.registerClass(vo);class wo extends uo{apply(e,t=-1){return r.CmS(e,t)}}wo.className="logSoftmax",r.m7h.registerClass(wo);class ko extends uo{apply(e,t=1){return(0,r.lub)((()=>r.dC7(r.XD2(r.dC7(e,t)),e)))}}ko.className="swish",r.m7h.registerClass(ko);class Io extends uo{apply(e){return(0,r.lub)((()=>r.dC7(e,r.AEp(r.Wvh(e)))))}}function So(e){return e.getClassName()}function No(e,t={}){return or(e,r.m7h.SerializationMap.getMap().classNameMap,t,"activation")}function To(e){if(null==e){return No({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},No(t)}return e instanceof uo?e:No(e)}Io.className="mish",r.m7h.registerClass(Io);class Co extends r.m7h.Serializable{}class $o extends Co{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return(0,r.lub)((()=>{let t=(0,r.lls)([1]);return this.hasL1&&(t=(0,r.IHx)(t,(0,r.Smz)(r.dC7(this.l1,(0,r.WnP)(e))))),this.hasL2&&(t=(0,r.IHx)(t,(0,r.Smz)(r.dC7(this.l2,na(e))))),r.XLQ(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}$o.className="L1L2",r.m7h.registerClass($o);const Eo={l1l2:"L1L2"};function Ao(e){return ar(e)}function Do(e,t={}){return or(e,r.m7h.SerializationMap.getMap().classNameMap,t,"regularizer")}function Ro(e){return null==e?null:"string"==typeof e?Do({className:e in Eo?Eo[e]:e,config:{}}):e instanceof Co?e:Do(e)}class _o extends ja{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Oa(e);let n=(0,r.UYe)(e);return null!=this.maxValue&&(n=(0,r.iUl)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}_o.className="ReLU",r.m7h.registerClass(_o);class Fo extends ja{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Oa(e);return(0,r.hi7)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Fo.className="LeakyReLU",r.m7h.registerClass(Fo);class Oo extends ja{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=$a(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Ro(e.alphaRegularizer),this.alphaConstraint=Nr(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new qs(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Ma(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Ua({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Oa(e),(0,r.AL3)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Ca(this.alphaInitializer),alphaRegularizer:Ao(this.alphaRegularizer),alphaConstraint:Ir(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Oo.className="PReLU",r.m7h.registerClass(Oo);class Mo extends ja{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Ks(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Oa(e);return(0,r.pyx)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Mo.className="ELU",r.m7h.registerClass(Mo);class Lo extends ja{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Oa(e);return(0,r.dC7)(n,(0,r.pju)((0,r.pjt)(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Lo.className="ThresholdedReLU",r.m7h.registerClass(Lo);class zo extends ja{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new vo).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Oa(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Bo(e,t,n){if("number"==typeof e)return Qs(e,t);if(e.length!==t)throw new qs(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const a=e[r];if((s=a)!==parseInt(s.toString(),10))throw new qs(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var s}function Po(e,t,n,s,r=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(r-1))+1,Math.floor((a+s-1)/s)}function Uo(e,t,n,s){if(null==e)return null;if("valid"===s)e=e*t+Vr([n-t,0]);else{if("same"!==s)throw new qs(`Unsupport padding mode: ${s}.`);e*=t}return e}function Wo(e,t){return(0,r.lub)((()=>(Rr(t),"channelsFirst"===t?r.p4s(e,[0,2,3,1]):e)))}function Vo(e,t){return(0,r.lub)((()=>(Rr(t),"channelsFirst"===t?r.p4s(e,[0,2,3,4,1]):e)))}function Ho(e,t,n,s=[1,1],a="valid",i,o,u=null){return(0,r.lub)((()=>{if(null==i&&(i="channelsLast"),Rr(i),3!==e.rank&&4!==e.rank)throw new qs(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new qs(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Wo(e,i);if("causal"===a)throw new Ks("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=r.imm.conv2d({x:l,filter:t,strides:s,pad:"same"===a?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:u}),"channelsFirst"===i&&(l=r.p4s(l,[0,3,1,2])),l}))}zo.className="Softmax",r.m7h.registerClass(zo);class Go extends ja{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Go.verifyArgs(t),this.rank=e,dr(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Ks(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Bo(t.kernelSize,e,"kernelSize"),this.strides=Bo(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,_r(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Rr(this.dataFormat),this.activation=To(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=$a(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Nr(t.biasConstraint),this.biasRegularizer=Ro(t.biasRegularizer),this.activityRegularizer=Ro(t.activityRegularizer),this.dilationRate=Bo(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new qs(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new qs(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new qs(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Js("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!pr(e.kernelSize,"number",1,3))throw new qs(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:So(this.activation),useBias:this.useBias,biasInitializer:Ca(this.biasInitializer),biasRegularizer:Ao(this.biasRegularizer),activityRegularizer:Ao(this.activityRegularizer),biasConstraint:Ir(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class jo extends Go{constructor(e,t){super(e,t),this.kernel=null,jo.verifyArgs(t),this.filters=t.filters,dr(this.filters,"filters"),this.kernelInitializer=$a(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Nr(t.kernelConstraint),this.kernelRegularizer=Ro(t.kernelRegularizer)}build(e){e=Ma(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new qs(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return(0,r.lub)((()=>{let t;e=Oa(e);const n=null==this.bias?null:this.bias.read(),s=mr(this.activation.getClassName());if(null!=s&&2===this.rank)t=Ho(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(1===this.rank)t=function(e,t,n,s=1,a="valid",i,o=1){return(0,r.lub)((()=>{if(null==i&&(i="channelsLast"),Rr(i),3!==e.shape.length)throw new qs(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new qs(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new qs(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===i&&(e=r.p4s(e,[0,2,1])),"causal"===a)throw new Ks("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let u=r.PAt(e,t,s,"same"===a?"same":"valid","NWC",o);return null!=n&&(u=ra(u,n)),u}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Ho(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Ks("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,s=[1,1,1],a="valid",i,o){return(0,r.lub)((()=>{if(null==i&&(i="channelsLast"),Rr(i),4!==e.rank&&5!==e.rank)throw new qs(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new qs(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let u=Vo(e,i);if("causal"===a)throw new Ks("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return u=r.pdZ(u,t,s,"same"===a?"same":"valid","NDHWC",o),null!=n&&(u=ra(u,n)),"channelsFirst"===i&&(u=r.p4s(u,[0,4,1,2,3])),u}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Ma(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const s=Po(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(s)}let s=[e[0]];return"channelsLast"===this.dataFormat?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){const e={filters:this.filters,kernelInitializer:Ca(this.kernelInitializer),kernelRegularizer:Ao(this.kernelRegularizer),kernelConstraint:Ir(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new qs(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Xo extends jo{constructor(e){super(2,e),Xo.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!pr(e.kernelSize,"number",1,2))throw new qs(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Xo.className="Conv2D",r.m7h.registerClass(Xo);class qo extends jo{constructor(e){super(3,e),qo.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new qs(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}qo.className="Conv3D",r.m7h.registerClass(qo);class Ko extends Xo{constructor(e){if(super(e),this.inputSpec=[new Ua({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new qs(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Ma(e)).length)throw new qs("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new qs("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ua({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return r.lub((()=>{let t=Oa(e);if(4!==t.shape.length)throw new qs(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let a,i;"channelsFirst"===this.dataFormat?(a=2,i=3):(a=1,i=2);const o=n[a],u=n[i],l=this.kernelSize[0],c=this.kernelSize[1],h=this.strides[0],p=this.strides[1],d=[s,Uo(o,h,l,this.padding),Uo(u,p,c,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=r.p4s(t,[0,2,3,1]));let f=r.bc(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(f=r.p4s(f,[0,3,1,2])),null!=this.bias&&(f=ra(f,this.bias.read(),this.dataFormat)),null!=this.activation&&(f=this.activation.apply(f)),f}))}computeOutputShape(e){const t=(e=Ma(e)).slice();let n,s,r;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3):(n=3,s=1,r=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[s]=Uo(t[s],o,a,this.padding),t[r]=Uo(t[r],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Ko.className="Conv2DTranspose",r.m7h.registerClass(Ko);class Yo extends qo{constructor(e){if(super(e),this.inputSpec=[new Ua({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new qs(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Ma(e)).length)throw new qs("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new qs("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ua({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return r.lub((()=>{let t=Oa(e);if(5!==t.shape.length)throw new qs(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let a,i,o;"channelsFirst"===this.dataFormat?(o=2,a=3,i=4):(o=1,a=2,i=3);const u=n[o],l=n[a],c=n[i],h=this.kernelSize[0],p=this.kernelSize[1],d=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],y=[s,Uo(u,f,h,this.padding),Uo(l,m,p,this.padding),Uo(c,g,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=r.p4s(t,[0,2,3,4,1]));let b=r.$QV(t,this.kernel.read(),y,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=r.p4s(b,[0,4,1,2,3])),null!==this.bias&&(b=ra(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(e){const t=(e=Ma(e)).slice();let n,s,r,a;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3,a=4):(n=4,s=1,r=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[s]=Uo(t[s],l,i,this.padding),t[r]=Uo(t[r],c,o,this.padding),t[a]=Uo(t[a],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Yo.className="Conv3DTranspose",r.m7h.registerClass(Yo);class Qo extends jo{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new qs("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new qs("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new qs(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=$a(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Ro(t.depthwiseRegularizer),this.depthwiseConstraint=Nr(t.depthwiseConstraint),this.pointwiseInitializer=$a(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Ro(t.pointwiseRegularizer),this.pointwiseConstraint=Nr(t.pointwiseConstraint)}build(e){if((e=Ma(e)).length<this.rank+2)throw new qs(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new qs(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let e=0;e<this.rank;++e)r.push(1);r.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Ua({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return(0,r.lub)((()=>{let t;if(e=Oa(e),1===this.rank)throw new Ks("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=r.p4s(e,[0,2,3,1])),t=r.U_I(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=ra(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=r.p4s(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ca(this.depthwiseInitializer),e.pointwiseInitializer=Ca(this.pointwiseInitializer),e.depthwiseRegularizer=Ao(this.depthwiseRegularizer),e.pointwiseRegularizer=Ao(this.pointwiseRegularizer),e.depthwiseConstraint=Ir(this.depthwiseConstraint),e.pointwiseConstraint=Ir(this.pointwiseConstraint),e}}Qo.className="SeparableConv";class Jo extends Qo{constructor(e){super(2,e)}}Jo.className="SeparableConv2D",r.m7h.registerClass(Jo);class Zo extends jo{constructor(e){super(1,e),Zo.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!pr(e.kernelSize,"number",1,1))throw new qs(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Zo.className="Conv1D",r.m7h.registerClass(Zo);class eu extends ja{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return(0,r.lub)((()=>{if(e=Oa(e),"channelsLast"===this.dataFormat){const t=Kr(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Kr(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Kr(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Kr(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}eu.className="Cropping2D",r.m7h.registerClass(eu);class tu extends ja{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Rr(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,hr(Cr,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return r.lub((()=>{let t=Oa(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=r.p4s(t,[0,2,3,1]);const e=this.size[0]*n[2],s=this.size[1]*n[3],a="nearest"===this.interpolation?r.BHj.resizeNearestNeighbor(t,[e,s]):r.BHj.resizeBilinear(t,[e,s]);return r.p4s(a,[0,3,1,2])}{const e=this.size[0]*n[1],s=this.size[1]*n[2];return"nearest"===this.interpolation?r.BHj.resizeNearestNeighbor(t,[e,s]):r.BHj.resizeBilinear(t,[e,s])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}tu.className="UpSampling2D",r.m7h.registerClass(tu);class nu extends Go{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=$a(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Nr(e.depthwiseConstraint),this.depthwiseRegularizer=Ro(e.depthwiseRegularizer)}build(e){if((e=Ma(e)).length<4)throw new qs(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new qs(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,r.lub)((()=>{let t=function(e,t,n=[1,1],s="valid",a,i){return(0,r.lub)((()=>{null==a&&(a="channelsLast"),Rr(a);let o=Wo(e,a);if(4!==e.rank)throw new qs(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new qs(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=r.B10(o,t,n,"same"===s?"same":"valid","NHWC",i),"channelsFirst"===a&&(o=r.p4s(o,[0,3,1,2])),o}))}(e=Oa(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=ra(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Ma(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Po(t,this.kernelSize[0],this.padding,this.strides[0]),a=Po(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ca(this.depthwiseInitializer),e.depthwiseRegularizer=Ao(this.depthwiseRegularizer),e.depthwiseConstraint=Ir(this.depthwiseRegularizer),e}}function su(e,t,n,s){if(Array.isArray(e)){if(null!=t||null!=n)throw new qs("When inputs is an array, neither initialState or constants should be provided");null!=s&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function ru(e,t,n,s=!1,a,i,o=!1,u=!1){return r.lub((()=>{const l=t.shape.length;if(l<3)throw new qs(`Input should be at least 3D, but is ${l}D.`);const c=[1,0].concat(Hr(2,l));if(t=r.p4s(t,c),null!=i)throw new Ks("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=r.pju(r.pju(a,"bool"),"float32")).rank===l-1&&(a=r.dt4(a,-1)),a=r.p4s(a,c)),s&&(t=r.GYS(t,0),null!=a&&(a=r.GYS(a,0)));const h=[];let p,d=n;const f=t.shape[0],m=r.HHK(t);let g,y;null!=a&&(g=r.HHK(a));for(let t=0;t<f;++t){const n=m[t],s=r.lub((()=>e(n,d)));if(null==a)p=s[0],d=s[1];else{const e=r.lub((()=>{const e=g[t],n=r.luU(r.JpU(e),e);return{output:r.IHx(r.dC7(s[0],e),r.dC7(d[0],n)),newStates:d.map(((t,a)=>r.IHx(r.dC7(s[1][a],e),r.dC7(t,n))))}}));p=e.output,d=e.newStates}u&&h.push(p)}if(u){const e=1;y=r.knu(h,e)}return[p,y,d]}))}nu.className="DepthwiseConv2D",r.m7h.registerClass(nu);class au extends ja{constructor(e){let t;if(super(e),null==e.cell)throw new qs("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new du({cells:e.cell}):e.cell,null==t.stateSize)throw new qs("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Ua({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Hr(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){_a(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let s;if(s=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const s of t)n.push([e[0],s]);return[s].concat(n)}return s}computeMask(e,t){return r.lub((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Ks("Constants support is not implemented in RNN yet.");_a(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Ua({shape:[t,null,...n]});const s=[e[0]].concat(e.slice(2));let a;if(this.cell.build(s),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!r.D5U.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),a))throw new qs(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map((e=>new Ua({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){(0,r.lub)((()=>{if(!this.stateful)throw new js("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new qs("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>r.lls([n,e]))):this.states_=[r.lls([n,this.cell.stateSize])];else if(null==e)r.B90(this.states_),null!=this.keptStates&&(r.B90(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>r.lls([n,e]))):this.states_[0]=r.lls([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new qs(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):r.B90(this.states_);for(let t=0;t<this.states_.length;++t){const s=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,i=[n,a];if(!r.D5U.arraysEqual(s.shape,i))throw new qs(`State ${t} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${s.shape}`);this.states_[t]=s}}this.states_=this.states_.map((e=>r.CnY(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=su(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Ua({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=s&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof Wa){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return(0,r.lub)((()=>{const n=null==t?null:t.mask,s=null==t?null:t.training;let r=null==t?null:t.initialState;e=Oa(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new qs(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:s},o=ru(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,s);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h}))}getInitialState(e){return(0,r.lub)((()=>{let t=r.lls(e.shape);return t=r.Smz(t,[1,2]),t=jr(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Jr(t,[1,e]):t)):this.cell.stateSize>1?[Jr(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===au.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const s=ii(t.cell,n);return new e(Object.assign(t,{cell:s}))}}au.className="RNN",r.m7h.registerClass(au);class iu extends ja{}class ou extends iu{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,dr(this.units,"units"),this.activation=To(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=$a(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=$a(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=$a(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ro(e.kernelRegularizer),this.recurrentRegularizer=Ro(e.recurrentRegularizer),this.biasRegularizer=Ro(e.biasRegularizer),this.kernelConstraint=Nr(e.kernelConstraint),this.recurrentConstraint=Nr(e.recurrentConstraint),this.biasConstraint=Nr(e.biasConstraint),this.dropout=Wr([1,Vr([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Wr([1,Vr([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ma(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,r.lub)((()=>{if(2!==(e=e).length)throw new qs(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const s=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=fu({ones:()=>r.JpU(e),rate:this.dropout,training:s})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=fu({ones:()=>r.JpU(n),rate:this.recurrentDropout,training:s}));const i=this.dropoutMask,o=this.recurrentDropoutMask;a=ea(null!=i?r.dC7(e,i):e,this.kernel.read()),null!=this.bias&&(a=ra(a,this.bias.read())),null!=o&&(n=r.dC7(n,o));let u=r.IHx(a,ea(n,this.recurrentKernel.read()));return null!=this.activation&&(u=this.activation.apply(u)),[u,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:So(this.activation),useBias:this.useBias,kernelInitializer:Ca(this.kernelInitializer),recurrentInitializer:Ca(this.recurrentInitializer),biasInitializer:Ca(this.biasInitializer),kernelRegularizer:Ao(this.kernelRegularizer),recurrentRegularizer:Ao(this.recurrentRegularizer),biasRegularizer:Ao(this.biasRegularizer),activityRegularizer:Ao(this.activityRegularizer),kernelConstraint:Ir(this.kernelConstraint),recurrentConstraint:Ir(this.recurrentConstraint),biasConstraint:Ir(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}ou.className="SimpleRNNCell",r.m7h.registerClass(ou);class uu extends au{constructor(e){e.cell=new ou(e),super(e)}call(e,t){return(0,r.lub)((()=>{null!=this.cell.dropoutMask&&(r.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(r.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:a})}))}static fromConfig(e,t){return new e(t)}}uu.className="SimpleRNN",r.m7h.registerClass(uu);class lu extends iu{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new qs("GRUCell does not support reset_after parameter set to true.");this.units=e.units,dr(this.units,"units"),this.activation=To(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=To(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=$a(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=$a(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=$a(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ro(e.kernelRegularizer),this.recurrentRegularizer=Ro(e.recurrentRegularizer),this.biasRegularizer=Ro(e.biasRegularizer),this.kernelConstraint=Nr(e.kernelConstraint),this.recurrentConstraint=Nr(e.recurrentConstraint),this.biasConstraint=Nr(e.biasConstraint),this.dropout=Wr([1,Vr([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Wr([1,Vr([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Ma(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,r.lub)((()=>{if(2!==(e=e).length)throw new qs(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=fu({ones:()=>r.JpU(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=fu({ones:()=>r.JpU(s),rate:this.recurrentDropout,training:n,count:3}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l;0<this.dropout&&this.dropout<1&&(e=r.dC7(e,a[0]));let c=ea(e,this.kernel.read());this.useBias&&(c=ra(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=r.dC7(s,i[0]));const h=this.recurrentKernel.read(),[p,d]=r.Vl2(h,[2*this.units,this.units],h.rank-1),f=ea(s,p),[m,g,y]=r.Vl2(c,3,c.rank-1),[b,x]=r.Vl2(f,2,f.rank-1);o=this.recurrentActivation.apply(r.IHx(m,b)),u=this.recurrentActivation.apply(r.IHx(g,x));const v=ea(r.dC7(u,s),d);l=this.activation.apply(r.IHx(y,v));const w=r.IHx(r.dC7(o,s),r.dC7(r.IHx(1,r.W76(o)),l));return[w,w]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:So(this.activation),recurrentActivation:So(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ca(this.kernelInitializer),recurrentInitializer:Ca(this.recurrentInitializer),biasInitializer:Ca(this.biasInitializer),kernelRegularizer:Ao(this.kernelRegularizer),recurrentRegularizer:Ao(this.recurrentRegularizer),biasRegularizer:Ao(this.biasRegularizer),activityRegularizer:Ao(this.activityRegularizer),kernelConstraint:Ir(this.kernelConstraint),recurrentConstraint:Ir(this.recurrentConstraint),biasConstraint:Ir(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}lu.className="GRUCell",r.m7h.registerClass(lu);class cu extends au{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new lu(e),super(e)}call(e,t){return(0,r.lub)((()=>{null!=this.cell.dropoutMask&&(r.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(r.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}cu.className="GRU",r.m7h.registerClass(cu);class hu extends iu{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,dr(this.units,"units"),this.activation=To(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=To(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=$a(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=$a(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=$a(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Ro(e.kernelRegularizer),this.recurrentRegularizer=Ro(e.recurrentRegularizer),this.biasRegularizer=Ro(e.biasRegularizer),this.kernelConstraint=Nr(e.kernelConstraint),this.recurrentConstraint=Nr(e.recurrentConstraint),this.biasConstraint=Nr(e.biasConstraint),this.dropout=Wr([1,Vr([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Wr([1,Vr([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Ma(e))[e.length-1];let s;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;s=new((t=class extends la{apply(t,s){const r=e.apply([n]),a=(new ha).apply([n]),i=e.apply([2*n]);return Qr(Qr(r,a),i)}}).className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return(0,r.lub)((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new qs(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=fu({ones:()=>r.JpU(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=fu({ones:()=>r.JpU(s),rate:this.recurrentDropout,training:n,count:4}));const i=this.dropoutMask,o=this.recurrentDropoutMask;let u,l,c,h;0<this.dropout&&this.dropout<1&&(e=r.dC7(e,i[0]));let p=ea(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=r.dC7(s,o[0])),p=r.IHx(p,ea(s,this.recurrentKernel.read())),this.useBias&&(p=ra(p,this.bias.read()));const[d,f,m,g]=r.Vl2(p,4,p.rank-1);u=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(f),c=r.IHx(r.dC7(l,a),r.dC7(u,this.activation.apply(m))),h=this.recurrentActivation.apply(g);const y=r.dC7(h,this.activation.apply(c));return[y,y,c]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:So(this.activation),recurrentActivation:So(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ca(this.kernelInitializer),recurrentInitializer:Ca(this.recurrentInitializer),biasInitializer:Ca(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Ao(this.kernelRegularizer),recurrentRegularizer:Ao(this.recurrentRegularizer),biasRegularizer:Ao(this.biasRegularizer),activityRegularizer:Ao(this.activityRegularizer),kernelConstraint:Ir(this.kernelConstraint),recurrentConstraint:Ir(this.recurrentConstraint),biasConstraint:Ir(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}hu.className="LSTMCell",r.m7h.registerClass(hu);class pu extends au{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new hu(e),super(e)}call(e,t){return(0,r.lub)((()=>{null!=this.cell.dropoutMask&&(r.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(r.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}pu.className="LSTM",r.m7h.registerClass(pu);class du extends iu{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return(0,r.lub)((()=>{let n=(e=e).slice(1);const s=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?s.push(n.splice(0,e.stateSize.length)):s.push(n.splice(0,1));s.reverse();const r=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=s[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),r.push(a.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;_a(e)&&(e=e[0]),e=e,this.cells.forEach(((n,s)=>{Mr(`RNNCell_${s}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const s=[];for(const e of t.cells)s.push(ii(e,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Ba(e)}setWeights(e){const t=[];for(const n of this.cells){const s=n.weights.length,r=e.splice(s);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}Pa(t)}}function fu(e){const{ones:t,rate:n,training:s=!1,count:a=1}=e,i=()=>aa(t(),n),o=()=>ia(i,t,s);return!a||a<=1?r.CnY(o().clone()):Array(a).fill(void 0).map(o).map((e=>r.CnY(e.clone())))}du.className="StackedRNNCells",r.m7h.registerClass(du);class mu extends au{constructor(e){if(e.unroll)throw new Ks("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Ks("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Ua({ndim:5})]}call(e,t){return r.lub((()=>{if(null!=this.cell.dropoutMask&&(r.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(r.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new qs("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,s=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return r.lub((()=>{const{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),a=[s[0],...s.slice(2)],i=r.lls(a);return Array.isArray(t)?Array(t.length).fill(i):[i]}))}resetStates(e,t=!1){r.lub((()=>{if(!this.stateful)throw new js("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),a=[s[0],...s.slice(2)];if(null==n[0])throw new qs("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>r.lls(a))):this.states_=[r.lls(a)];else if(null==e)r.B90(this.states_),null!=this.keptStates&&(r.B90(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>r.lls(a))):this.states_[0]=r.lls(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new qs(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):r.B90(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],s=a;if(!r.D5U.arraysEqual(n.shape,s))throw new qs(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>r.CnY(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=Po(u,s[0],r,a[0],i[0]),h=Po(l,s[1],r,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}mu.className="ConvRNN2D";class gu extends hu{constructor(e){const{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,dr(this.filters,"filters"),this.kernelSize=Bo(n,2,"kernelSize"),this.kernelSize.forEach((e=>dr(e,"kernelSize"))),this.strides=Bo(s||1,2,"strides"),this.strides.forEach((e=>dr(e,"strides"))),this.padding=r||"valid",_r(this.padding),this.dataFormat=a||"channelsLast",Rr(this.dataFormat),this.dilationRate=Bo(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>dr(e,"dilationRate")))}build(e){var t;e=Ma(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new qs(`The channel dimension of the input should be defined. Found ${e[n]}`);const s=e[n],a=this.kernelSize.concat([s,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;e=new((t=class extends la{apply(e,t){return Yr([n.apply([s]),r.iUs([s]),n.apply([2*s])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return r.lub((()=>{if(3!==e.length)throw new qs(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,s=e[0],a=e[1],i=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=fu({ones:()=>r.JpU(s),rate:this.dropout,training:n,count:4}));const o=this.dropoutMask,u=(e,t,n)=>t&&t[n]?r.dC7(t[n],e):e;let l=u(s,o,0),c=u(s,o,1),h=u(s,o,2),p=u(s,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=fu({ones:()=>r.JpU(a),rate:this.recurrentDropout,training:n,count:4}));const d=this.recurrentDropoutMask;let f=u(a,d,0),m=u(a,d,1),g=u(a,d,2),y=u(a,d,3);const[b,x,v,w]=r.Vl2(this.kernel.read(),4,3),[k,I,S,N]=this.useBias?r.Vl2(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,v,S,this.padding),p=this.inputConv(p,w,N,this.padding);const[T,C,$,E]=r.Vl2(this.recurrentKernel.read(),4,3);f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,$),y=this.recurrentConv(y,E);const A=this.recurrentActivation.apply(r.IHx(l,f)),D=this.recurrentActivation.apply(r.IHx(c,m)),R=r.IHx(r.dC7(D,i),r.dC7(A,this.activation.apply(r.IHx(h,g)))),_=r.dC7(this.recurrentActivation.apply(r.IHx(p,y)),this.activation.apply(R));return[_,_,R]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(e);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(e,s[r])&&(n[s[r]]=e[s[r]])}return n}(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,s)}inputConv(e,t,n,s){const a=r.Tek(e,t,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?ra(a,n,this.dataFormat):a}recurrentConv(e,t){return r.Tek(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}gu.className="ConvLSTM2DCell",r.m7h.registerClass(gu);class yu extends mu{constructor(e){const t=new gu(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}yu.className="ConvLSTM2D",r.m7h.registerClass(yu);class bu extends ja{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t);const n=Oa(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,s=this.getNoiseShape(n);return ia((()=>aa(n,this.rate,s,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}bu.className="Dropout",r.m7h.registerClass(bu);class xu extends bu{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}xu.className="SpatialDropout1D",r.m7h.registerClass(xu);class vu extends ja{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,dr(this.units,"units"),this.activation=To(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=$a(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=$a(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Nr(e.kernelConstraint),this.biasConstraint=Nr(e.biasConstraint),this.kernelRegularizer=Ro(e.kernelRegularizer),this.biasRegularizer=Ro(e.biasRegularizer),this.activityRegularizer=Ro(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Ma(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Ma(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t);const n=Oa(e),s=mr(this.activation.getClassName());let r;return null!=s?r=ea(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=ea(n,this.kernel.read()),null!=this.bias&&(r=ra(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:So(this.activation),useBias:this.useBias,kernelInitializer:Ca(this.kernelInitializer),biasInitializer:Ca(this.biasInitializer),kernelRegularizer:Ao(this.kernelRegularizer),biasRegularizer:Ao(this.biasRegularizer),activityRegularizer:Ao(this.activityRegularizer),kernelConstraint:Ir(this.kernelConstraint),biasConstraint:Ir(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}vu.className="Dense",r.m7h.registerClass(vu);class wu extends ja{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Ma(e);for(const t of e.slice(1))if(null==t)throw new qs(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Ur(e,1)]}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t);let n=Oa(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=(0,r.p4s)(n,e)}return function(e){if(e.rank<=1)throw new qs(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Ur(e.shape,1)];return r.XLQ(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}wu.className="Flatten",r.m7h.registerClass(wu);class ku extends ja{constructor(e){super(e),this.supportsMasking=!0,this.activation=To(e.activation)}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t);const n=Oa(e);return this.activation.apply(n)}))}getConfig(){const e={activation:So(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}ku.className="Activation",r.m7h.registerClass(ku);class Iu extends ja{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return(0,r.lub)((()=>{return e=Oa(e),t=e,n=this.n,(0,r.lub)((()=>{if(2!==t.shape.length)throw new qs(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Jr(jr(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Iu.className="RepeatVector",r.m7h.registerClass(Iu);class Su extends ja{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",s=t.slice();let r=1,a=null;for(let e=0;e<s.length;++e){const t=s[e];if(this.isUnknown(t)){if(null!==a)throw new qs("Can only specifiy one unknown dimension.");a=e}else r*=t}const i=Ur(e);if(null!==a){if(0===r||i%r!=0)throw new qs(n);s[a]=i/r}else if(i!==r)throw new qs(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t);const n=Oa(e),s=n.shape,a=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return(0,r.XLQ)(n,a)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Su.className="Reshape",r.m7h.registerClass(Su);class Nu extends ja{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Hr(1,e.dims.length+1);if(!r.D5U.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Ua({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Ma(e)).slice();return this.dims.forEach(((n,s)=>{t[s+1]=e[n]})),t}call(e,t){return(0,r.p4s)(Oa(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Nu.className="Permute",r.m7h.registerClass(Nu);class Tu extends ja{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Oa(e);return(0,r.YjB)((0,r.Quu)(n,this.maskValue),-1)}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t);const n=Oa(e),s=(0,r.YjB)((0,r.Quu)(n,this.maskValue),-1,!0);return(0,r.dC7)(n,(0,r.pju)(s,n.dtype))}))}}Tu.className="Masking",r.m7h.registerClass(Tu);class Cu extends ja{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(tr(e.inputLength))}this.inputDim=e.inputDim,dr(this.inputDim,"inputDim"),this.outputDim=e.outputDim,dr(this.outputDim,"outputDim"),this.embeddingsInitializer=$a(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Ro(e.embeddingsRegularizer),this.activityRegularizer=Ro(e.activityRegularizer),this.embeddingsConstraint=Nr(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return(0,r.lub)((()=>this.maskZero?(e=Oa(e),(0,r.Quu)(e,(0,r.P84)(e))):null))}computeOutputShape(e){if(e=Ma(e),null==this.inputLength)return[...e,this.outputDim];const t=tr(this.inputLength);if(t.length!==e.length-1)throw new qs(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){const r=t[s],a=e[s+1];if(null!=r&&null!=a&&r!==a)throw new qs(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==r&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t);let n=Oa(e);"int32"!==n.dtype&&(n=Gr(n,"int32"));const s=ta(this.embeddings.read(),(0,r.XLQ)(n,[n.size]));return(0,r.XLQ)(s,Ma(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ca(this.embeddingsInitializer),embeddingsRegularizer:Ao(this.embeddingsRegularizer),activityRegularizer:Ao(this.activityRegularizer),embeddingsConstraint:Ir(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Cu.className="Embedding",r.m7h.registerClass(Cu);class $u extends ja{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Ks}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){const r=e[e.length-t.length+s],a=t[s];if(null==r||null==a||r<0||a<0)n.push(null);else if(1===r)n.push(a);else if(1===a)n.push(r);else{if(r!==a)throw new qs("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Ma(e)]),(e=e).length<2)throw new qs(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=lr(t),t.length>1)throw new qs(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const s=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}const s=e.map((e=>e.length));-1===e.indexOf(null)&&1===lr(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return(0,r.lub)((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const s=Vr(n);for(let n of e){const e=n.rank;for(let t=0;t<s-e;++t)n=jr(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const s of e){const e=s.rank;if(null==e){const e=s.shape,a=e[0],i=e.slice(1).concat([a]);let o=r.XLQ(s,[a].concat(Ur(e.slice(1))));o=r.p4s(o,[1,0]),o=r.XLQ(o,i),t.push(o),n=!0}else if(e>1){const a=Hr(1,e).concat([0]);t.push(r.p4s(s,a)),n=!0}else t.push(s)}let s=this.mergeFunction(t);const a=s.rank;if(n)if(null==a){const e=s.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));s=r.XLQ(r.p4s(r.XLQ(s,[-1,t]),[1,0]),n)}else if(a>1){const e=[a-1].concat(Hr(0,a-1));s=r.p4s(s,e)}return s}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const s=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=lr(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return r.lub((()=>{if(null==t)return null;if(!Array.isArray(t))throw new qs("`mask` should be an Array");if(!Array.isArray(e))throw new qs("`inputs` should be an Array");if(t.length!==e.length)throw new qs(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:r.dt4(e,0))))[0];for(let e=1;e<t.length-1;++e)n=r.HvI(n,t[e]);return n}))}}class Eu extends $u{constructor(e){super(e)}mergeFunction(e){return(0,r.lub)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=r.IHx(t,e[n]);return t}))}}Eu.className="Add",r.m7h.registerClass(Eu);class Au extends $u{constructor(e){super(e)}mergeFunction(e){return(0,r.lub)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=r.dC7(t,e[n]);return t}))}}Au.className="Multiply",r.m7h.registerClass(Au);class Du extends $u{constructor(e){super(e)}mergeFunction(e){return(0,r.lub)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=r.IHx(t,e[n]);return r.dC7(1/e.length,t)}))}}Du.className="Average",r.m7h.registerClass(Du);class Ru extends $u{constructor(e){super(e)}mergeFunction(e){return(0,r.lub)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=r.gWQ(t,e[n]);return t}))}}Ru.className="Maximum",r.m7h.registerClass(Ru);class _u extends $u{constructor(e){super(e)}mergeFunction(e){return(0,r.lub)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=r.LTh(t,e[n]);return t}))}}_u.className="Minimum",r.m7h.registerClass(_u);class Fu extends $u{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new qs("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const s=e[t].slice();s.splice(this.axis,1);let a=!1;for(const e of n)if(r.D5U.arraysEqual(e,s)){a=!0;break}a||n.push(s)}if(n.length>1)throw new qs("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return(0,r.lub)((()=>Yr(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new qs("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[s]||null==e[s]){n[s]=null;break}n[s]+=e[s]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new qs("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new qs("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new qs(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return r.lub((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const s=[];for(let n=0;n<e.length;++n)null==t[n]?s.push(r.pju(r.JpU(e[n]),"bool")):t[n].rank<e[n].rank?s.push(r.dt4(t[n],-1)):s.push(t[n]);const a=r.zoF(s,this.axis);return r.$6P(a,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Ou(e,t){for(;e<0;)e+=t;return e}Fu.className="Concatenate",r.m7h.registerClass(Fu);class Mu extends $u{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){r.D5U.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Ks("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new qs(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(2!==e.length)throw new qs(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],s=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Ou(t,e[n].shape.length))):[Ou(this.axes,n.shape.length),Ou(this.axes,s.shape.length)],this.normalize&&(n=oi(n,t[0]),s=oi(s,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Ks("batchDot is not implemented for tensors of 4D or higher rank yet");if(r.D5U.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),r.D5U.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Ks("batchDot is not implemented for complex64-type Tensors yet.");const s=e.shape.length,a=t.shape.length;null==n&&(n=[s-1,a-2]);const i=n;return r.lub((()=>{let n,o;if(s>a){n=s-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=r.XLQ(t,t.shape.concat(e))}else if(a>s){n=a-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=r.XLQ(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)o=i[0]===i[1]?r.Smz(r.dC7(e,t),i[0]):r.Smz(r.dC7(r.p4s(e,[1,0]),t),i[1]);else{const n=i[0]!==e.shape.length-1,s=i[1]===t.shape.length-1;o=r.OI3(e,t,n,s)}if(n>0){let e;e=s>a?s+a-3:s-1;const t=[];for(let s=e;s<e+n;++s)t.push(s);o=r.L9e(o,t)}return 1===o.shape.length&&(o=r.dt4(o,1)),o}))}(n,s,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Ou(this.axes,e.length),Ou(this.axes,t.length)],n}computeOutputShape(e){r.D5U.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Ks("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Mu.className="Dot",r.m7h.registerClass(Mu);class Lu extends ja{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t);const n=Oa(e);return ia((()=>(0,r.IHx)(Zr(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}Lu.className="GaussianNoise",r.m7h.registerClass(Lu);class zu extends ja{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t);const n=Oa(e);return this.rate>0&&this.rate<1?ia((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return(0,r.dC7)(n,Zr(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}zu.className="GaussianDropout",r.m7h.registerClass(zu);class Bu extends ja{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Oa(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,r.lub)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return ia((()=>{const t=Oa(e),s=-1.7580993408473766;let a=(0,r.brS)((0,r.LGj)(n),this.rate);a=Gr(a,"float32");const i=((1-this.rate)*(1+this.rate*s**2))**-.5,o=-i*s*this.rate,u=(0,r.IHx)((0,r.dC7)(t,a),(0,r.dC7)((0,r.IHx)(a,-1),s));return(0,r.IHx)((0,r.dC7)(u,i),o)}),(()=>Oa(e)),t.training||!1)}return e}))}}function Pu(e,t,n,s,a,i=.001){let o;if(2===e.rank)o=r.Dxk(e,t,n,s,a,i);else if(3===e.rank)o=r.JY5(e,t,n,s,a,i);else{if(4!==e.rank)throw new Ks(`batchNormalization is not implemented for array of rank ${e.rank} yet`);o=r.p3b(e,t,n,s,a,i)}return o}Bu.className="AlphaDropout",r.m7h.registerClass(Bu);class Uu extends ja{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=$a(e.betaInitializer||"zeros"),this.gammaInitializer=$a(e.gammaInitializer||"ones"),this.movingMeanInitializer=$a(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=$a(e.movingVarianceInitializer||"ones"),this.betaConstraint=Nr(e.betaConstraint),this.gammaConstraint=Nr(e.gammaConstraint),this.betaRegularizer=Ro(e.betaRegularizer),this.gammaRegularizer=Ro(e.gammaRegularizer)}build(e){e=Ma(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new qs(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Ua({ndim:e.length,axes:{[t]:n}})];const s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return(0,r.lub)((()=>{const n=null!=t.training&&t.training,s=Oa(e),a=s.shape,i=a.length,o=Hr(0,i),u=this.axis>=0?this.axis:this.axis+i;o.splice(u,1);const l=Qs(1,i);l[u]=a[u];const c=o.slice();c.sort();const h=!r.D5U.arraysEqual(c,Hr(0,i).slice(0,i-1));if(!n)return(()=>{if(h){const e=(0,r.XLQ)(this.movingMean.read(),l),t=(0,r.XLQ)(this.movingVariance.read(),l),n=this.center?(0,r.XLQ)(this.beta.read(),l):null,a=this.scale?(0,r.XLQ)(this.gamma.read(),l):null;return Pu(s,e,t,n,a,this.epsilon)}return Pu(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[p,d,f]=function(e,t,n,s,a=.001){return r.D5U.arraysEqual(s.slice().sort(),Hr(0,e.rank-1))?function(e,t,n,s,a=.001){return(0,r.lub)((()=>{const i=r.Gi7(e,s),o=i.mean,u=i.variance;return[Pu(e,o,u,n,t,a),o,u]}))}(e,t,n,s,a):function(e,t,n,s,a=.001){return(0,r.lub)((()=>{const i=r.Gi7(e,s),o=i.mean,u=i.variance,l=[];for(const t of Hr(0,e.rank))-1!==s.indexOf(t)?l.push(1):l.push(e.shape[t]);const c=(0,r.XLQ)(o,l),h=(0,r.XLQ)(u,l),p=null==t?null:(0,r.XLQ)(t,l),d=null==n?null:(0,r.XLQ)(n,l);return[Pu(e,c,h,d,p,a),o,u]}))}(e,t,n,s,a)}(s,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(e,t,n)=>{r.lub((()=>{const s=1-n,a=e.read(),i=r.dC7(r.luU(a,t),s);e.write(r.luU(a,i))}))};return(()=>{m(this.movingMean,d,this.momentum),m(this.movingVariance,f,this.momentum)})(),p}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ca(this.betaInitializer),gammaInitializer:Ca(this.gammaInitializer),movingMeanInitializer:Ca(this.movingMeanInitializer),movingVarianceInitializer:Ca(this.movingVarianceInitializer),betaRegularizer:Ao(this.betaRegularizer),gammaRegularizer:Ao(this.gammaRegularizer),betaConstraint:Ir(this.betaConstraint),gammaConstraint:Ir(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Uu.className="BatchNormalization",r.m7h.registerClass(Uu);class Wu extends ja{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=$a(e.betaInitializer||"zeros"),this.gammaInitializer=$a(e.gammaInitializer||"ones"),this.betaRegularizer=Ro(e.betaRegularizer),this.gammaRegularizer=Ro(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Ma(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==lr(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=Oa(e),s=n.shape,a=s.length;return(0,r.lub)((()=>{let{mean:e,variance:t}=(0,r.Gi7)(n,this.axis,!0);const i=Qs(1,a);for(const e of this.axis)i[e]=s[e];const o=e=>null!=e&&e.shape.length!==a&&this.axis!==[a-1]?r.XLQ(e,i):e;let u=o(this.gamma.read()),l=o(this.beta.read());const c=[],h=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(c.push(s[e]),h.push(1)):(c.push(1),h.push(s[e]));return e=r.Gg6(e,c),t=r.Gg6(t,c),u=r.Gg6(u,h),l=r.Gg6(l,h),Pu(n,e,t,l,u,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ca(this.betaInitializer),gammaInitializer:Ca(this.gammaInitializer),betaRegularizer:Ao(this.betaRegularizer),gammaRegularizer:Ao(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Wu.className="LayerNormalization",r.m7h.registerClass(Wu);class Vu extends ja{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new qs(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new qs(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new qs(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Ua({ndim:4})]}computeOutputShape(e){let t,n;return e=Ma(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return(0,r.lub)((()=>{return t=Oa(e),n=this.padding,s=this.dataFormat,(0,r.lub)((()=>{if(4!==t.rank)throw new qs(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new qs("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==s&&(s="channelsLast"),"channelsLast"!==s&&"channelsFirst"!==s)throw new qs(`Unknown data format: ${s}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===s?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],r.vku(t,e)}));var t,n,s}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Hu(e,t,n,s,a,i){return(0,r.lub)((()=>{let o;Rr(a),Fr(i),_r(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==a&&(a="channelsLast"),null==i&&(i="max"),e=Wo(e,a);const u="same"===s?"same":"valid";return o="max"===i?r._sB(e,t,n,u):r.wS1(e,t,n,u),"channelsFirst"===a&&(o=r.p4s(o,[0,3,1,2])),o}))}function Gu(e,t,n,s,a,i){return(0,r.lub)((()=>{let o;Rr(a),Fr(i),_r(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==a&&(a="channelsLast"),null==i&&(i="max"),e=Vo(e,a);const u="same"===s?"same":"valid";return o="max"===i?r.YQQ(e,t,n,u):r.uR5(e,t,n,u),"channelsFirst"===a&&(o=r.p4s(o,[0,4,1,2,3])),o}))}Vu.className="ZeroPadding2D",r.m7h.registerClass(Vu);class ju extends ja{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new qs(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(dr(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new qs(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}dr(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,_r(this.padding),this.inputSpec=[new Ua({ndim:3})]}computeOutputShape(e){const t=Po((e=Ma(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t),e=jr(Oa(e),2);const n=this.poolingFunction(Oa(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return r.L9e(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Xu extends ju{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Rr(r),_r(s),Hu(e,t,n,s,r,"max")}}Xu.className="MaxPooling1D",r.m7h.registerClass(Xu);class qu extends ju{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Rr(r),_r(s),Hu(e,t,n,s,r,"avg")}}qu.className="AveragePooling1D",r.m7h.registerClass(qu);class Ku extends ja{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new qs(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];dr(this.poolSize,"poolSize"),dr(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Rr(this.dataFormat),_r(this.padding),this.inputSpec=[new Ua({ndim:4})]}computeOutputShape(e){e=Ma(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Po(t,this.poolSize[0],this.padding,this.strides[0]),n=Po(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return(0,r.lub)((()=>(this.invokeCallHook(e,t),this.poolingFunction(Oa(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Yu extends Ku{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Rr(r),_r(s),Hu(e,t,n,s,r,"max")}}Yu.className="MaxPooling2D",r.m7h.registerClass(Yu);class Qu extends Ku{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Rr(r),_r(s),Hu(e,t,n,s,r,"avg")}}Qu.className="AveragePooling2D",r.m7h.registerClass(Qu);class Ju extends ja{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new qs(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];dr(this.poolSize,"poolSize"),dr(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Rr(this.dataFormat),_r(this.padding),this.inputSpec=[new Ua({ndim:5})]}computeOutputShape(e){e=Ma(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Po(t,this.poolSize[0],this.padding,this.strides[0]),n=Po(n,this.poolSize[1],this.padding,this.strides[1]),s=Po(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return(0,r.lub)((()=>(this.invokeCallHook(e,t),this.poolingFunction(Oa(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Zu extends Ju{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Rr(r),_r(s),Gu(e,t,n,s,r,"max")}}Zu.className="MaxPooling3D",r.m7h.registerClass(Zu);class el extends Ju{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Rr(r),_r(s),Gu(e,t,n,s,r,"avg")}}el.className="AveragePooling3D",r.m7h.registerClass(el);class tl extends ja{constructor(e){super(e),this.inputSpec=[new Ua({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Ks}}class nl extends tl{constructor(e){super(e||{})}call(e,t){return(0,r.lub)((()=>{const t=Oa(e);return r.J69(t,1)}))}}nl.className="GlobalAveragePooling1D",r.m7h.registerClass(nl);class sl extends tl{constructor(e){super(e||{})}call(e,t){return(0,r.lub)((()=>{const t=Oa(e);return r.Fp7(t,1)}))}}sl.className="GlobalMaxPooling1D",r.m7h.registerClass(sl);class rl extends ja{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Rr(this.dataFormat),this.inputSpec=[new Ua({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Ks}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class al extends rl{call(e,t){return(0,r.lub)((()=>{const t=Oa(e);return"channelsLast"===this.dataFormat?r.J69(t,[1,2]):r.J69(t,[2,3])}))}}al.className="GlobalAveragePooling2D",r.m7h.registerClass(al);class il extends rl{call(e,t){return(0,r.lub)((()=>{const t=Oa(e);return"channelsLast"===this.dataFormat?r.Fp7(t,[1,2]):r.Fp7(t,[2,3])}))}}il.className="GlobalMaxPooling2D",r.m7h.registerClass(il);class ol extends ja{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const s=ii(t.layer,n);delete t.layer;const r={layer:s};return Object.assign(r,t),new e(r)}}class ul extends ol{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Ma(e)).length<3)throw new qs(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Ma(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return(0,r.lub)((()=>ru(((e,n)=>[Oa(this.layer.call(e,t)),[]]),e=Oa(e),[],!1,null,null,!1,!0)[1]))}}ul.className="TimeDistributed",r.m7h.registerClass(ul);class ll extends ol{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=ii(n),t.goBackwards=!0!==t.goBackwards;const s={};var r;if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=ii(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,hr(Ar,"BidirectionalMergeMode",r),e.weights)throw new Ks("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,s,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),r=r,this.returnState?(s=r.slice(1),t=r[0]):t=r[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(s).concat(s.slice()):[t].concat(s).concat(s.slice()):er(n)}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=su(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==s)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new qs("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const s=n.map((e=>new Ua({shape:e.shape})));this.forwardLayer.stateSpec=s.slice(0,e/2),this.backwardLayer.stateSpec=s.slice(e/2),i.push(...s)}if(null!=s)throw new Ks("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof Wa;for(const e of a)if(e instanceof Wa!==o)throw new qs("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return(0,r.lub)((()=>{const n=t.initialState;let s,a,i,o;if(null==n)s=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const r=n.slice(0,n.length/2),i=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:r})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(s)&&(i=s.slice(1).concat(a.slice(1))),s=s[0],a=a[0]),this.returnSequences&&(a=r.GYS(a,1)),"concat"===this.mergeMode?o=Yr([s,a]):"sum"===this.mergeMode?o=r.IHx(s,a):"ave"===this.mergeMode?o=r.dC7(.5,r.IHx(s,a)):"mul"===this.mergeMode?o=r.dC7(s,a):null==this.mergeMode&&(o=[s,a]),this.returnState?null==this.mergeMode?o.concat(i):[o].concat(i):o}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Mr(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Mr(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=ii(t.layer);if(delete t.layer,null!=t.numConstants)throw new Ks("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=t;return s.layer=n,new e(s)}}ll.className="Bidirectional",r.m7h.registerClass(ll);var cl,hl=n(2766),pl=n(6377);function dl(e,t,n=new Map,s=new Set){if(null==e)return null;if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(bl(e)){const r=Array.isArray(e)?[]:{};s.add(e);for(const a in e){const i=dl(e[a],t,n,s);r[a]=i}return s.delete(e),r}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,r.value),r.value}function fl(e,t=gl){return ml(e,t)}function ml(e,t,n=new Set){const s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(bl(s)){const r=Array.isArray(s)?[]:{};n.add(s);for(const a in s){const s=ml(e.map((e=>e[a])),t,n);r[a]=s}return n.delete(s),r}throw new Error(`Can't recurse into non-iterable type: ${s}`)}return r.value}function gl(e){return null===e?null:bl(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function yl(e,t){const n=new Map;dl(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(r.D5U.isPromise(t)){const s=await t;n.set(e,s)}}return dl(e,t,n)}function bl(e){let t=!1;if(r.OBj().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:s}=n(4977);t=e instanceof s}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof r.esB)&&!(e instanceof Promise)&&!t)}function xl(e){return e instanceof r.esB?{value:e.clone(),recurse:!1}:bl(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class vl{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class wl extends vl{constructor(){super(wl.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function kl(e){return new Nl(e)}function Il(e){return new Tl(e)}wl.INITIAL_CAPACITY=32;class Sl{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new _l(this,e)}filter(e){return new Dl(this,e)}map(e){return new Rl(this,e)}mapAsync(e){return new Fl(this,e)}serialMapAsync(e){return new Fl(this,e).serial()}flatmap(e){return new Ml(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new Al(this,e,t)}columnMajorBatch(e,t=!0,n=gl){return this.rowMajorBatch(e,t).map((e=>fl(e,n)))}concatenate(e,t){return new Ll(kl([this,e]),t)}take(e){return e<0||null==e?this:new El(this,e)}skip(e){return e<0||null==e?this:new $l(this,e)}prefetch(e){return new Bl(this,e)}shuffle(e,t){return new Pl(this,e,t)}serial(){return new Cl(this)}}class Nl extends Sl{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,dl(t,xl)),done:!1};var t}}class Tl extends Sl{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class Cl extends Sl{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class $l extends Sl{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;r.B90(e.value)}return this.upstream.next()}}class El extends Sl{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Al extends Sl{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class Dl extends Sl{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;r.B90(e.value)}}}class Rl extends Sl{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=r.piX.getTensorsInContainer(e.value),n=this.transform(e.value),s=r.piX.getTensorsInContainer(n);for(const e of t)r.piX.isTensorInList(e,s)||e.dispose();return{value:n,done:!1}}}class _l extends Sl{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class Fl extends Sl{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=r.piX.getTensorsInContainer(e.value),n=await this.transform(e.value),s=r.piX.getTensorsInContainer(n);for(const e of t)r.piX.isTensorInList(e,s)||e.dispose();return{value:n,done:!1}}}class Ol extends Sl{constructor(){super(),this.outputQueue=new wl,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Ml extends Ol{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=r.piX.getTensorsInContainer(e.value),n=this.transform(e.value),s=r.piX.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const e of t)r.piX.isTensorInList(e,s)||e.dispose();return!0}}class Ll extends Sl{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(cl||(cl={}));class zl extends Sl{constructor(e,t=cl.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const s=await yl(this.iterators,(function(e){return e instanceof Sl?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case cl.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case cl.SHORTEST:return{value:null,done:!0};case cl.LONGEST:}return this.count++,{value:s,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class Bl extends Sl{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new vl(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class Pl extends Bl{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=pl.alea(n||r.D5U.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Ul{constructor(){this.size=null}batch(e,t=!0){const n=this;let s;return r.D5U.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),s=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Wl((async()=>(await n.iterator()).columnMajorBatch(e,t,Gl)),s)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Wl((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,Wl((async()=>(await t.iterator()).filter((t=>r.lub((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Wl((async()=>(await t.iterator()).map((t=>r.lub((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return Wl((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Wl((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Wl((async()=>{return n=Il((async()=>({value:await t.iterator(),done:!1}))).take(e),new Ll(n,s);var n,s}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Wl((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,a=pl.alea(t||r.D5U.now().toString());return Wl((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await s.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Wl((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Wl(e,t=null){return new class extends Ul{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Vl(e){return Wl((async()=>kl(e)),e.length)}function Hl(e){if(!bl(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return Wl((async()=>function(e,t=cl.FAIL){return new zl(e,t)}(await yl(e,(e=>{if(e instanceof Ul)return{value:e.iterator(),recurse:!1};if(bl(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),cl.SHORTEST)),t)}function Gl(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof r.esB||r.D5U.isTypedArray(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof r.esB?r.knu(e):r.XeE(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}Ul.MAX_BUFFER_SIZE=1e4;class jl extends Ul{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}}const Xl='"',ql=Symbol("out"),Kl=Symbol("field"),Yl=Symbol("quote"),Ql=Symbol("quoteafterquote"),Jl=Symbol("quoteinquote");class Zl extends Ul{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new jl(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(r.D5U.assert(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&r.D5U.assert(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(r.D5U.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},s={};for(let r=0;r<this.fullColumnNames.length;r++){const a=this.fullColumnNames[r],i=this.columnConfigs?this.columnConfigs[a]:null;if(!this.configuredColumnsOnly||i){const o=t[r];let u=null;if(""===o)if(i&&void 0!==i.default)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);u=void 0}else{const e=Number(o);if(isNaN(e))u=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){default:u=e;break;case"int32":u=Math.floor(e);break;case"bool":u=this.getBoolean(o)}else u=e}i&&i.isLabel?s[a]=u:n[a]=u}}return 0===Object.keys(s).length?n:{xs:n,ys:s}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let s=0;const r=e.length;let a=ql;for(let t=0;t<r;t++)switch(a){case ql:switch(e.charAt(t)){case Xl:s=t+1,a=Yl;break;case this.delimiter:if(s=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),a=ql;break;default:a=Kl,s=t}break;case Kl:e.charAt(t)===this.delimiter&&(n.push(e.substring(s,t)),a=ql,s=t+1);break;case Yl:e.charAt(t)===Xl&&(a=Ql);break;case Ql:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(s,t-1)),a=ql,s=t+1;break;case Xl:a=Yl;break;default:a=Jl}break;case Jl:e.charAt(t)===Xl&&(a=Yl)}if(a===Ql?n.push(e.substring(s,r-1)):n.push(e.substring(s)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class ec extends Sl{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if((0,r.OBj)().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const t=new ec(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((s=>{const r=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(r),s({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,s)=>n.set(e,s*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(r.D5U.sizeFromShape(t));return n.set(e,n.length-e.length),(0,r.XeE)(n,t)}}class tc extends Sl{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=(0,r.RRF)([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,s=(1-t)/2,a=n+e,i=t+s;this.cropBox=(0,r.odF)([s,n,i,a],[1,4])}else this.cropBox=(0,r.odF)([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if((0,r.OBj)().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new tc(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&r.D5U.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=r.Xhn.fromPixels(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return(0,r.lub)((()=>{const t=(0,r.dt4)((0,r.pju)(e,"float32"),0);let n;n=r.BHj.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const s=n.shape;return(0,r.XLQ)(n,s.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class nc{}class sc extends Sl{split(e){return new rc(this,e)}}class rc extends sc{constructor(e,t){super(),this.upstream=e,this.impl=new ac(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class ac extends Ol{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}}class ic extends Sl{decodeUTF8(){return new oc(this)}}class oc extends sc{constructor(e){super(),this.upstream=e,this.impl=new uc(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class uc extends Ol{constructor(e){if(super(),this.upstream=e,(0,r.OBj)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(1601);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=(0,r.OBj)().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}}class lc extends ic{constructor(e,t={}){super(),this.file=e,this.options=t,r.D5U.assert(e instanceof Uint8Array||!!(0,r.OBj)().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const s=new FileReader;s.onload=n=>{let r=s.result;if(r instanceof ArrayBuffer&&(r=new Uint8Array(r)),!(r instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(r)},s.onabort=e=>t(new Error("Aborted")),s.onerror=e=>t(new Error(e.type));const r=this.file.slice(this.offset,n);s.readAsArrayBuffer(r)}this.offset=n}));return{value:await e,done:!1}}}function cc(e){return"string"==typeof e&&"file://"===e.substr(0,7)}class hc extends nc{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(cc(this.input)&&(0,r.OBj)().get("IS_NODE")){const e=n(7792);this.input=e.readFileSync(this.input.substr(7))}return new lc(this.input,this.options)}}class pc extends nc{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return cc(this.url)?new hc(this.url,this.fileOptions).iterator():async function(e,t={}){let n,s;var a;"string"==typeof e?n=e:(n=e.url,s={method:(a=e).method,headers:a.headers,body:a.body,mode:a.mode,credentials:a.credentials,cache:a.cache,redirect:a.redirect,referrer:a.referrer,integrity:a.integrity});const i=await r.D5U.fetch(n,s);if(i.ok){const e=new Uint8Array(await i.arrayBuffer());return new lc(e,t)}throw new Error(i.statusText)}(this.url,this.fileOptions)}}function dc(e,t={}){return new Zl(new pc(e),t)}function fc(e){const t=Il(e);return Wl((async()=>t))}function mc(e){return Wl((async()=>{const t=await e();return Il((()=>t.next()))}))}async function gc(e,t){return tc.create(e,t)}async function yc(e){return ec.create(e)}const bc="3.9.0";var xc=n(8166);const vc=r.GDt.ZA;class wc extends r.Zuw{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new r.JLz(this,(0,r.SRH)())}nextDataId(){return wc.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,(0,r.OBj)().get("IS_NODE")&&r.Wap.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&r.D5U.isString(n[0])){const a=n.map((e=>r.D5U.encodeString(e)));s=this.write(a,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return r.Wap.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>r.D5U.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,r.f3b)(e.shape,e.dtype,n)}makeOutput(e,t,n){const s=this.write(e,t,n);return(0,r.SRH)().makeTensorFromDataId(s,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=r.D5U.now();return e(),{kernelMs:r.D5U.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){(0,xc.H)([e],"where");const t=this.readSync(e.dataId);return vc(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}wc.nextDataId=0,(0,r.jqO)("cpu",(()=>new wc),1);var kc=n(6738);const Ic=(0,kc.A)(r.SX0,(e=>e>=0?e:Math.exp(e)-1)),Sc={kernelName:r.SX0,backendName:"cpu",kernelFunc:Ic};var Nc=n(1775);function Tc(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{alpha:i}=s;(0,xc.H)([a],"leakyRelu");const o=r.D5U.sizeFromShape(a.shape),u=n.data.get(a.dataId).values,l=r.D5U.getTypedArrayFromDType("float32",o);for(let e=0;e<u.length;e++)l[e]=u[e]<0?i*u[e]:u[e];return n.makeTensorInfo(a.shape,"float32",l)}const Cc={kernelName:r.J$2,backendName:"cpu",kernelFunc:Tc};var $c=n(3533);const Ec=(0,$c.b)(((e,t)=>e<0?t*e:e));function Ac(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t;(0,xc.H)([s,r],"prelu");const a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,[o,u]=Ec(s.shape,r.shape,a,i,s.dtype);return n.makeTensorInfo(u,s.dtype,o)}const Dc={kernelName:r.o0g,backendName:"cpu",kernelFunc:Ac},Rc=(0,kc.A)(r.qkr,(e=>Math.max(0,e))),_c={kernelName:r.qkr,backendName:"cpu",kernelFunc:Rc},Fc=(0,kc.A)(r.SbG,(e=>Math.min(Math.max(0,e),6))),Oc={kernelName:r.SbG,backendName:"cpu",kernelFunc:Fc};var Mc=n(108);function Lc(e,t,n,s,r){if("linear"===n)return(0,Nc.y)({inputs:{x:t},backend:e});if("relu"===n)return Rc({inputs:{x:t},backend:e});if("elu"===n)return Ic({inputs:{x:t},backend:e});if("relu6"===n)return Fc({inputs:{x:t},backend:e});if("prelu"===n)return Ac({inputs:{x:t,alpha:s},backend:e});if("leakyrelu"===n)return Tc({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return(0,Mc.XD)({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}var zc=n(2779);function Bc(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{shape:i}=s,o=r.D5U.sizeFromShape(a.shape),u=r.D5U.inferFromImplicitShape(i,o),l=r.D5U.sizeFromShape(u);r.D5U.assert(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);const c=n.data.get(a.dataId);if(null!=c.complexTensorInfos){const e=c.complexTensorInfos.real,t=c.complexTensorInfos.imag;e.shape=u,t.shape=u}return{dataId:a.dataId,shape:u,dtype:a.dtype}}const Pc={kernelName:r.HZH,backendName:"cpu",kernelFunc:Bc};function Uc(e){const{inputs:t,backend:n,attrs:s}=e,{a,b:i}=t,{transposeA:o,transposeB:u}=s;(0,xc.H)([a,i],"matMul");const l=a.shape.length,c=i.shape.length,h=o?a.shape[l-2]:a.shape[l-1],p=u?i.shape[c-1]:i.shape[c-2],d=o?a.shape[l-1]:a.shape[l-2],f=u?i.shape[c-2]:i.shape[c-1],m=a.shape.slice(0,-2),g=i.shape.slice(0,-2),y=r.D5U.sizeFromShape(m),b=r.D5U.sizeFromShape(g),x=y===b||1===y||1===b;r.D5U.assert(l>=2&&c>=2&&x,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`));const v=(y>b?a.shape.slice(0,-2):i.shape.slice(0,-2)).concat([d,f]);r.D5U.assert(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${a.shape} and ${i.shape} and transposeA=${o} and transposeB=${u} must match.`));const w=u?[b,f,p]:[b,p,f],k=Bc({inputs:{x:a},backend:n,attrs:{shape:o?[y,h,d]:[y,d,h]}}),I=Bc({inputs:{x:i},backend:n,attrs:{shape:w}}),S=o?k.shape[1]:k.shape[2],N=o?k.shape[2]:k.shape[1],T=u?I.shape[1]:I.shape[2],C=Math.max(y,b),$=n.data.get(k.dataId).values,E=n.data.get(I.dataId).values,A=r.D5U.computeStrides(k.shape),D=r.D5U.computeStrides(I.shape),[R,_,F]=o?[A[0],1,A[1]]:[A[0],A[1],1],[O,M,L]=u?[1,D[1],D[0]]:[D[1],1,D[0]],z=N*T,B=(0,r.f3b)([C,N,T],k.dtype),P=B.values,U=n.blockSize;for(let e=0;e<C;e++)for(let t=0;t<N;t+=U)for(let n=0;n<T;n+=U)for(let s=0;s<S;s+=U){const r=Math.min(t+U,N),a=Math.min(n+U,T),i=Math.min(s+U,S);for(let o=t;o<r;o++)for(let t=n;t<a;t++){let n=0;for(let r=s;r<i;r++){const s=Math.min(e,y-1)*R,a=Math.min(e,b-1)*L;n+=$[s+o*_+r*F]*E[r*O+t*M+a]}P[e*z+(o*T+t)]+=n}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(v,B.dtype,B.values)}const Wc={kernelName:r.XLW,backendName:"cpu",kernelFunc:Uc},Vc={kernelName:r.usg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=s;let p,d,f;const m=[];p=Uc({inputs:{a:r,b:a},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(d=(0,zc.IH)({inputs:{a:p,b:i},backend:n}),m.push(p),p=d),c&&(f=Lc(n,p,c,o,h),m.push(p),p=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return p}};var Hc=n(224);const Gc=(0,kc.A)(r.VGw,(e=>Math.acos(e))),jc={kernelName:r.VGw,backendName:"cpu",kernelFunc:Gc},Xc=(0,kc.A)(r.SpW,(e=>Math.acosh(e))),qc={kernelName:r.SpW,backendName:"cpu",kernelFunc:Xc},Kc={kernelName:r.Xze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,s=t;(0,xc.H)(t,"addN");const a=s.map((e=>n.data.get(e.dataId).values)),i=(0,r.f3b)(s[0].shape,s[0].dtype),o=i.values;for(let e=0;e<s.length;e++){const t=a[e];for(let e=0;e<o.length;e++)o[e]+=t[e]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}};var Yc=n(4802);const Qc={kernelName:r.oT6,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;(0,xc.H)(a,"all");const u=r.D5U.parseAxisParam(i,a.shape);let l=u;const c=r.Wap.getAxesPermutation(l,a.shape.length);let h=a;null!=c&&(h=(0,Yc.p)({inputs:{x:a},backend:n,attrs:{perm:c}}),l=r.Wap.getInnerMostAxes(l.length,a.shape.length)),r.Wap.assertAxesAreInnerMostDims("all",l,h.shape.length);const[p,d]=r.Wap.computeOutAndReduceShapes(h.shape,l),f=r.D5U.sizeFromShape(d),m=r.D5U.makeZerosTypedArray(r.D5U.sizeFromShape(p),h.dtype),g=n.data.get(h.dataId).values;for(let e=0;e<m.length;++e){const t=e*f;let n=g[t];for(let e=0;e<f;++e){const s=g[t+e];n=n&&s}m[e]=n}null!=c&&n.disposeIntermediateTensorInfo(h);const y=n.makeTensorInfo(p,h.dtype,m);if(o){const e=Bc({inputs:{x:y},backend:n,attrs:{shape:r.Wap.expandShapeToKeepDim(p,u)}});return n.disposeIntermediateTensorInfo(y),e}return y}},Jc={kernelName:r.IKK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;(0,xc.H)(a,"any");const u=r.D5U.parseAxisParam(i,a.shape);let l=u;const c=r.Wap.getAxesPermutation(l,a.shape.length);let h=a;null!=c&&(h=(0,Yc.p)({inputs:{x:a},backend:n,attrs:{perm:c}}),l=r.Wap.getInnerMostAxes(l.length,a.shape.length)),r.Wap.assertAxesAreInnerMostDims("any",l,h.shape.length);const[p,d]=r.Wap.computeOutAndReduceShapes(h.shape,l),f=r.D5U.sizeFromShape(d),m=r.D5U.makeZerosTypedArray(r.D5U.sizeFromShape(p),h.dtype),g=n.data.get(h.dataId).values;for(let e=0;e<m.length;++e){const t=e*f;let n=g[t];for(let e=0;e<f;++e){const s=g[t+e];n=n||s}m[e]=n}null!=c&&n.disposeIntermediateTensorInfo(h);const y=n.makeTensorInfo(p,h.dtype,m);if(o){const e=Bc({inputs:{x:y},backend:n,attrs:{shape:r.Wap.expandShapeToKeepDim(p,u)}});return n.disposeIntermediateTensorInfo(y),e}return y}},Zc={kernelName:r.sJF,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i}=s;(0,xc.H)(a,"argMax");let o=r.D5U.parseAxisParam(i,a.shape);const u=r.Wap.getAxesPermutation(o,a.shape.length);let l=a;const c=[];null!=u&&(l=(0,Yc.p)({inputs:{x:a},backend:n,attrs:{perm:u}}),c.push(l),o=r.Wap.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],r.Wap.assertAxesAreInnerMostDims("argMax",o,l.shape.length);const[h,p]=r.Wap.computeOutAndReduceShapes(l.shape,o),d=r.D5U.sizeFromShape(h),f=r.D5U.makeZerosTypedArray(d,"int32"),m=r.D5U.sizeFromShape(p),g=n.data.get(l.dataId).values;for(let e=0;e<f.length;++e){const t=e*m;let n=g[t],s=0;for(let e=0;e<m;++e){const r=g[t+e];r>n&&(n=r,s=e)}f[e]=s}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(h,"int32",f)}},eh={kernelName:r.aJk,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i}=s;(0,xc.H)(a,"argMin");let o=r.D5U.parseAxisParam(i,a.shape);const u=r.Wap.getAxesPermutation(o,a.shape.length);let l=a;const c=[];null!=u&&(l=(0,Yc.p)({inputs:{x:a},backend:n,attrs:{perm:u}}),c.push(l),o=r.Wap.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],r.Wap.assertAxesAreInnerMostDims("argMin",o,l.shape.length);const[h,p]=r.Wap.computeOutAndReduceShapes(l.shape,o),d=r.D5U.sizeFromShape(h),f=r.D5U.makeZerosTypedArray(d,"int32"),m=r.D5U.sizeFromShape(p),g=n.data.get(l.dataId).values;for(let e=0;e<f.length;++e){const t=e*m;let n=g[t],s=0;for(let e=0;e<m;++e){const r=g[t+e];r<n&&(n=r,s=e)}f[e]=s}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(h,"int32",f)}},th=(0,kc.A)(r.M2y,(e=>Math.asin(e))),nh={kernelName:r.M2y,backendName:"cpu",kernelFunc:th},sh=(0,kc.A)(r.qw7,(e=>Math.asinh(e))),rh={kernelName:r.qw7,backendName:"cpu",kernelFunc:sh},ah=(0,kc.A)(r.jMg,(e=>Math.atan(e))),ih={kernelName:r.jMg,backendName:"cpu",kernelFunc:ah};var oh=n(6205);const uh=(0,$c.b)(((e,t)=>Math.atan2(e,t))),lh=(0,oh.j)(r.QCc,uh),ch={kernelName:r.QCc,backendName:"cpu",kernelFunc:lh},hh=(0,kc.A)(r.Oyi,(e=>Math.atanh(e))),ph={kernelName:r.Oyi,backendName:"cpu",kernelFunc:hh};function dh(e,t,n,s,a,i){const o=a.strideHeight,u=a.strideWidth,l=a.dilationHeight,c=a.dilationWidth,h=a.effectiveFilterHeight,p=a.effectiveFilterWidth,d=a.padInfo.top,f=a.padInfo.left,m="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=(0,r.f3b)(a.outShape,n),y=g.values,b=a.outShape[1]*a.outShape[2]*a.outShape[3],x=a.outShape[2]*a.outShape[3],v=a.outShape[3];for(let t=0;t<a.batchSize;++t){const n=t*b,r=t*s[0];for(let t=0;t<a.inChannels;++t)for(let g=0;g<a.outHeight;++g){const b=g*o-d,w=Math.max(0,b),k=Math.min(a.inHeight,h+b),I=n+g*x;for(let n=0;n<a.outWidth;++n){const o=n*u-f,h=Math.max(0,o),d=Math.min(a.inWidth,p+o);let g=m,b=0,x=0;for(let n=w;n<k;n+=l){const a=r+n*s[1];for(let n=h;n<d;n+=c){const r=e[a+n*s[2]+t];"max"===i&&r>g?g=r:"avg"===i&&(b+=r,x++)}if(isNaN(g))break}y[I+n*v+t]="avg"===i?b/x:g}}}return g}function fh(e,t,n,s,a=!1,i=!1){const o=(0,r.f3b)(s.outShape,"int32"),u=s.strideHeight,l=s.strideWidth,c=s.dilationHeight,h=s.dilationWidth,p=s.effectiveFilterHeight,d=s.effectiveFilterWidth,f=s.padInfo.top,m=s.padInfo.left,g=(0,r.f3b)(t,n,e);for(let e=0;e<s.batchSize;++e)for(let t=0;t<s.inChannels;++t)for(let n=0;n<s.outHeight;++n){const r=n*u-f;let y=r;for(;y<0;)y+=c;const b=Math.min(s.inHeight,p+r);for(let u=0;u<s.outWidth;++u){const p=u*l-m;let f=p;for(;f<0;)f+=h;const x=Math.min(s.inWidth,d+p);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=c){const o=n-r;for(let r=f;r<x;r+=h){const u=r-p,l=g.get(e,n,r,t);l>v&&(v=l,w=a?i?((e*s.inHeight+n)*s.inWidth+r)*s.inChannels+t:(n*s.inWidth+r)*s.inChannels+t:o*d+u)}}o.set(w,e,n,u,t)}}return o}function mh(e,t,n,s,a,i){const o=a.strideDepth,u=a.strideHeight,l=a.strideWidth,c=a.dilationDepth,h=a.dilationHeight,p=a.dilationWidth,d=a.effectiveFilterDepth,f=a.effectiveFilterHeight,m=a.effectiveFilterWidth,g=a.padInfo.front,y=a.padInfo.top,b=a.padInfo.left,x="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=(0,r.f3b)(a.outShape,n),w=v.values,k=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[2]*a.outShape[3]*a.outShape[4],S=a.outShape[3]*a.outShape[4],N=a.outShape[4];for(let t=0;t<a.batchSize;++t){const n=t*k,r=t*s[0];for(let t=0;t<a.inChannels;++t)for(let v=0;v<a.outDepth;++v){const k=v*o-g;let T=k;for(;T<0;)T+=c;const C=Math.min(a.inDepth,d+k),$=n+v*I;for(let n=0;n<a.outHeight;++n){const o=n*u-y;let d=o;for(;d<0;)d+=h;const g=Math.min(a.inHeight,f+o),v=$+n*S;for(let n=0;n<a.outWidth;++n){const o=n*l-b;let u=o;for(;u<0;)u+=p;const f=Math.min(a.inWidth,m+o),y=v+n*N;let k=x,I=0,S=0;for(let n=T;n<C;n+=c){const a=r+n*s[1];for(let n=d;n<g;n+=h){const r=a+n*s[2];for(let n=u;n<f;n+=p){const a=e[r+n*s[3]+t];if("max"===i&&a>k?k=a:"avg"===i&&(I+=a,S++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[y+t]="avg"===i?I/S:k}}}}return v}const gh={kernelName:r.JhU,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;(0,xc.H)(a,"avgPool");const{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=s;r.D5U.assert(r.Wap.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=r.Wap.computePool2DInfo(a.shape,i,o,1,u,l);let h;if(1===c.filterWidth&&1===c.filterHeight&&r.D5U.arraysEqual(c.inShape,c.outShape))h=(0,Nc.y)({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=r.D5U.computeStrides(a.shape),s=dh(e,a.shape,a.dtype,t,c,"avg");h=n.makeTensorInfo(c.outShape,a.dtype,s.values)}return h}},yh={kernelName:r._k9,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l,dataFormat:c}=s;(0,xc.H)(a,"avgPool3d");const h=r.Wap.computePool3DInfo(a.shape,i,o,1,u,l,c),p=mh(n.data.get(a.dataId).values,a.shape,a.dtype,r.D5U.computeStrides(a.shape),h,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}},bh={kernelName:r.IMb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:i}=t,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=s;(0,xc.H)([a,i],"avgPool3DGrad");const h=r.Wap.computePool3DInfo(i.shape,o,u,1,l,c),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=h.dilationDepth,x=h.dilationHeight,v=h.dilationWidth,w=h.effectiveFilterDepth,k=h.effectiveFilterHeight,I=h.effectiveFilterWidth,S=w-1-h.padInfo.front,N=I-1-h.padInfo.left,T=k-1-h.padInfo.top,C=(0,r.f3b)(i.shape,"float32"),$=1/(m*g*y),E=n.bufferSync(a);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let s=0;s<h.inHeight;++s)for(let r=0;r<h.inWidth;++r){const a=n-S,i=s-T,o=r-N;let u=0;for(let n=0;n<w;n+=b){const s=(a+n)/p;if(!(s<0||s>=h.outDepth||Math.floor(s)!==s))for(let n=0;n<k;n+=x){const r=(i+n)/d;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let n=0;n<I;n+=v){const a=(o+n)/f;a<0||a>=h.outWidth||Math.floor(a)!==a||(u+=E.get(e,s,r,a,t))}}}C.set(u*$,e,n,s,r,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}},xh={kernelName:r.ROF,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:i}=t,o=i;(0,xc.H)([a,i],"avgPoolGrad");const{filterSize:u,strides:l,pad:c}=s,h=r.Wap.computePool2DInfo(o.shape,u,l,1,c),p=h.strideHeight,d=h.strideWidth,f=h.filterHeight,m=h.filterWidth,g=h.dilationHeight,y=h.dilationWidth,b=h.effectiveFilterHeight,x=h.effectiveFilterWidth,v=x-1-h.padInfo.left,w=b-1-h.padInfo.top,k=(0,r.f3b)(o.shape,"float32"),I=1/(f*m),S=n.data.get(a.dataId).values,N=(0,r.f3b)(a.shape,"float32",S);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inHeight;++n)for(let s=0;s<h.inWidth;++s){const r=n-w,a=s-v;let i=0;for(let n=0;n<b;n+=g){const s=(r+n)/p;if(!(s<0||s>=h.outHeight||Math.floor(s)!==s))for(let n=0;n<x;n+=y){const r=(a+n)/d;r<0||r>=h.outWidth||Math.floor(r)!==r||(i+=N.get(e,s,r,t))}}k.set(i*I,e,n,s,t)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},vh={kernelName:r.sHE,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,scale:i,offset:o,mean:u,variance:l}=t;r.D5U.assert(u.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),r.D5U.assert(null==o||u.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),r.D5U.assert(null==i||u.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),(0,xc.H)([a,u,l,i,o],"batchNorm");let{varianceEpsilon:c}=s;null==c&&(c=.001);const h=n.data.get(a.dataId).values,p=n.data.get(u.dataId).values,d=n.data.get(l.dataId).values,f=i?n.data.get(i.dataId).values:new Float32Array([1]),m=o?n.data.get(o.dataId).values:new Float32Array([0]),g=new Float32Array(h.length),y=m.length,b=f.length,x=d.length,v=p.length;let w=0,k=0,I=0,S=0;for(let e=0;e<h.length;++e)g[e]=m[w++]+(h[e]-p[k++])*f[I++]/Math.sqrt(d[S++]+c),w>=y&&(w=0),k>=v&&(k=0),I>=b&&(I=0),S>=x&&(S=0);return n.makeTensorInfo(a.shape,a.dtype,g)}};var wh=n(2578);const kh={kernelName:r.zws,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:i,crops:o}=s;(0,xc.H)([a],"batchToSpaceND");const u=i.reduce(((e,t)=>e*t)),l=r.Wap.getReshaped(a.shape,i,u),c=r.Wap.getPermuted(l.length,i.length),h=r.Wap.getReshapedPermuted(a.shape,i,u),p=r.Wap.getSliceBeginCoords(o,i.length),d=r.Wap.getSliceSize(h,o,i.length),f=Bc({inputs:{x:a},backend:n,attrs:{shape:l}}),m=(0,Yc.p)({inputs:{x:f},backend:n,attrs:{perm:c}}),g=Bc({inputs:{x:m},backend:n,attrs:{shape:h}}),y=(0,wh.tP)({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}};var Ih=n(8607);const Sh={kernelName:r.zvY,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=(0,Ih.W)(o,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,l)}},Nh={kernelName:r.eEB,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:a}=t,i=n.data.get(s.dataId).values,o=n.data.get(a.dataId).values,u=r.Wap.assertAndGetBroadcastShape(Array.from(i),Array.from(o));return n.makeTensorInfo([u.length],"int32",Int32Array.from(u))}};var Th=n(9258),Ch=n(4769);const $h=(0,kc.A)(r.xnO,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),Eh={kernelName:r.xnO,backendName:"cpu",kernelFunc:$h};var Ah=n(6961);const Dh={kernelName:r.yj2,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,s=new Float32Array(r.D5U.sizeFromShape(t.shape)),a=n.data.get(t.dataId),i=a.complexTensorInfos.real,o=a.complexTensorInfos.imag,u=n.data.get(i.dataId).values,l=n.data.get(o.dataId).values;for(let e=0;e<u.length;e++){const t=u[e],n=l[e];s[e]=Math.hypot(t,n)}return n.makeOutput(s,t.shape,"float32")}};var Rh=n(8926);function _h(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const Fh={kernelName:r.J_u,backendName:"cpu",kernelFunc:_h};var Oh=n(2186);function Mh(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s,i=r.D5U.parseAxisParam(a,t[0].shape)[0];let o=r.Wap.computeOutShape(t.map((e=>e.shape)),i);if(0===r.D5U.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const u=t.filter((e=>r.D5U.sizeFromShape(e.shape)>0));if(1===u.length)return(0,Nc.y)({inputs:{x:u[0]},backend:n});const l=u.map((e=>e.shape));if(r.Wap.assertParamsConsistent(l,i),"complex64"===u[0].dtype){const e=u.map((e=>(0,Oh.k)({inputs:{input:e},backend:n}))),t=u.map((e=>_h({inputs:{input:e},backend:n}))),s=Mh({inputs:e,backend:n,attrs:{axis:i}}),r=Mh({inputs:t,backend:n,attrs:{axis:i}}),a=(0,Ah.P)({inputs:{real:s,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),a}const c=u.map((e=>{const t=r.D5U.sizeFromShape(e.shape.slice(i));return Bc({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),h=c.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=r.Wap.computeOutShape(c.map((e=>e.shape)),1);const p=1===c[0].shape[0],d=(0,Rh.j)(h,o,t[0].dtype,p),f=r.Wap.computeOutShape(u.map((e=>e.shape)),i),m=n.makeTensorInfo(f,t[0].dtype,d);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}const Lh={kernelName:r.Eh3,backendName:"cpu",kernelFunc:Mh};function zh(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:u,dataFormat:l,dilations:c,dimRoundingMode:h}=s;(0,xc.H)([a,i],"conv2d");const p=r.Wap.convertConv2DDataFormat(l),d=r.Wap.computeConv2DInfo(a.shape,i.shape,o,c,u,h,!1,p),f=d.filterHeight,m=d.filterWidth,g=d.dilationHeight,y=d.dilationWidth,b=d.padInfo.left,x=d.padInfo.top,v="channelsLast"===d.dataFormat,w=new r.YDk(d.outShape,a.dtype),k=r.D5U.computeStrides(a.shape),I=r.D5U.computeStrides(i.shape),S=k[0],N=v?k[1]:k[2],T=v?k[2]:1,C=v?1:k[1],$=w.strides[0],E=v?w.strides[1]:w.strides[2],A=v?w.strides[2]:1,D=v?1:w.strides[1],R=n.data.get(a.dataId).values,_=n.data.get(i.dataId).values,F=w.values;for(let e=0;e<d.batchSize;++e){const t=e*S,n=e*$;for(let e=0;e<d.outHeight;++e){const s=n+e*E,r=e*d.strideHeight-x;for(let e=0;e<f;++e){const n=r+e*g;if(n<0||n>=d.inHeight)continue;const a=e*I[0],i=t+n*N;for(let e=0;e<d.outWidth;++e){const t=s+e*A,n=e*d.strideWidth-b;for(let e=0;e<m;++e){const s=n+e*y;if(s<0||s>=d.inWidth)continue;const r=i+s*T;let o=a+e*I[1];for(let e=0;e<d.inChannels;++e){const n=R[r+e*C];for(let e=0;e<d.outChannels;++e)F[t+e*D]+=n*_[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,F)}const Bh={kernelName:r.mhS,backendName:"cpu",kernelFunc:zh},Ph={kernelName:r.wUP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:i}=t,{strides:o,pad:u,dataFormat:l,dimRoundingMode:c,filterShape:h}=s;(0,xc.H)([a,i],"conv2dBackpropFilter");const p=r.Wap.convertConv2DDataFormat(l),d=r.Wap.computeConv2DInfo(a.shape,h,o,1,u,c,!1,p),{strideHeight:f,strideWidth:m,filterHeight:g,filterWidth:y}=d,b="channelsLast"===d.dataFormat,x=new r.YDk(d.filterShape,"float32"),v=d.padInfo.left,w=d.padInfo.top,k=n.data.get(a.dataId).values,I=n.data.get(i.dataId).values,S=new r.YDk(a.shape,a.dtype,k),N=new r.YDk(i.shape,i.dtype,I);for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((w-e)/f)),n=Math.min(d.outHeight,(d.inHeight+w-e)/f);for(let s=0;s<y;++s){const r=Math.max(0,Math.ceil((v-s)/m)),a=Math.min(d.outWidth,(d.inWidth+v-s)/m);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let u=0;for(let l=0;l<d.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*f-w;for(let e=r;e<a;++e){const n=s+e*m-v;u+=b?S.get(l,t,n,i)*N.get(l,c,e,o):S.get(l,i,t,n)*N.get(l,o,c,e)}}x.set(u,e,s,i,o)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},Uh={kernelName:r.wm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:i}=t,{inputShape:o,strides:u,pad:l,dataFormat:c,dimRoundingMode:h}=s;(0,xc.H)([a,i],"conv2dBackpropInput");const p=r.D5U.computeStrides(i.shape),d=r.D5U.computeStrides(a.shape);let f=r.Wap.convertConv2DDataFormat(c);const m=r.Wap.computeConv2DInfo(o,i.shape,u,1,l,h,!1,f),g=new r.YDk(m.inShape,"float32"),y=g.values,b=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,[v,w,k]=p,{batchSize:I,filterHeight:S,filterWidth:N,inChannels:T,inHeight:C,inWidth:$,outChannels:E,outHeight:A,outWidth:D,strideHeight:R,strideWidth:_}=m;f=m.dataFormat;const F=S-1-m.padInfo.top,O=N-1-m.padInfo.left,M="channelsLast"===f,L=g.strides[0],z=M?g.strides[1]:g.strides[2],B=M?g.strides[2]:1,P=M?1:g.strides[1],U=d[0],W=M?d[1]:d[2],V=M?d[2]:1,H=M?1:d[1];for(let e=0;e<I;++e)for(let t=0;t<T;++t)for(let n=0;n<C;++n){const s=n-F,r=Math.max(0,Math.ceil(s/R)),a=Math.min(A,(S+s)/R);for(let i=0;i<$;++i){const o=i-O,u=Math.max(0,Math.ceil(o/_)),l=Math.min(D,(N+o)/_);let c=0;for(let n=r;n<a;++n){const r=n*R-s;for(let s=u;s<l;++s){const a=U*e+W*n+V*s,i=v*(S-1-r)+w*(N-1-(s*_-o))+k*t;for(let e=0;e<E;++e)c+=b[a+H*e]*x[i+e]}}y[L*e+z*n+B*i+P*t]=c}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},Wh={kernelName:r.x12,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:u,dilations:l}=s;(0,xc.H)([a,i],"conv3d");const c=r.Wap.computeConv3DInfo(a.shape,i.shape,o,l,u),{filterDepth:h,filterHeight:p,filterWidth:d,dilationDepth:f,dilationHeight:m,dilationWidth:g,padInfo:y}=c,b=y.front,x=y.left,v=y.top,w=new r.YDk(c.outShape,a.dtype),k=n.data.get(a.dataId).values,I=n.data.get(i.dataId).values,S=w.values,N=r.D5U.computeStrides(a.shape),T=r.D5U.computeStrides(i.shape);for(let e=0;e<c.batchSize;++e){const t=e*N[0],n=e*w.strides[0];for(let e=0;e<c.outDepth;++e){const s=n+e*w.strides[1],r=e*c.strideDepth-b;for(let e=0;e<h;++e){const n=r+e*f;if(n<0||n>=c.inDepth)continue;const a=e*T[0],i=t+n*N[1];for(let e=0;e<c.outHeight;++e){const t=s+e*w.strides[2],n=e*c.strideHeight-v;for(let e=0;e<p;++e){const s=n+e*m;if(s<0||s>=c.inHeight)continue;const r=a+e*T[1],o=i+s*N[2];for(let e=0;e<c.outWidth;++e){const n=t+e*c.outChannels,s=e*c.strideWidth-x;for(let e=0;e<d;++e){const t=s+e*g;if(t<0||t>=c.inWidth)continue;const a=r+e*T[2],i=o+t*c.inChannels;let u=a;for(let e=0;e<c.inChannels;++e){const t=k[i+e];for(let e=0;e<c.outChannels;++e)S[n+e]+=t*I[u+e];u+=c.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},Vh={kernelName:r.o2y,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:i}=t,{strides:o,pad:u,filterShape:l}=s;(0,xc.H)([a,i],"conv3dBackpropFilterV2");const c=r.D5U.computeStrides(a.shape),h=r.D5U.computeStrides(i.shape),p=r.Wap.computeConv3DInfo(a.shape,l,o,1,u),d=p.strideDepth,f=p.strideHeight,m=p.strideWidth,g=p.filterDepth,y=p.filterHeight,b=p.filterWidth,x=new r.YDk(p.filterShape,"float32"),v=x.values,[w,k,I,S]=x.strides,N=n.data.get(i.dataId).values,[T,C,$,E]=h,A=n.data.get(a.dataId).values,[D,R,_,F]=c,O=p.padInfo.front,M=p.padInfo.left,L=p.padInfo.top;for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((O-e)/d)),n=Math.min(p.outDepth,(p.inDepth+O-e)/d),s=e*w;for(let r=0;r<y;++r){const a=Math.max(0,Math.ceil((L-r)/f)),i=Math.min(p.outHeight,(p.inHeight+L-r)/f),o=r*k+s;for(let s=0;s<b;++s){const u=Math.max(0,Math.ceil((M-s)/m)),l=Math.min(p.outWidth,(p.inWidth+M-s)/m),c=s*I+o;for(let o=0;o<p.inChannels;++o){const h=o*S+c;for(let c=0;c<p.outChannels;++c){let g=0;for(let h=0;h<p.batchSize;++h){const p=h*D,y=h*T;for(let h=t;h<n;++h){const t=(e+h*d-O)*R+p,n=h*C+y;for(let e=a;e<i;++e){const a=(r+e*f-L)*_+t,i=e*$+n;for(let e=u;e<l;++e){const t=e*E+i;g+=A[(s+e*m-M)*F+a+o]*N[t+c]}}}}v[h+c]=g}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},Hh={kernelName:r.ik2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:i}=t,{pad:o,strides:u,inputShape:l}=s;(0,xc.H)([a],"conv3dBackpropInputV2");const c=r.D5U.computeStrides(a.shape),h=r.D5U.computeStrides(i.shape),p=r.Wap.computeConv3DInfo(l,i.shape,u,1,o),d=new r.YDk(p.inShape,"float32"),f=d.values,[m,g,y,b]=d.strides,x=n.data.get(a.dataId).values,[v,w,k,I]=c,S=n.data.get(i.dataId).values,[N,T,C,$]=h,{batchSize:E,filterDepth:A,filterHeight:D,filterWidth:R,inChannels:_,inDepth:F,inHeight:O,inWidth:M,outChannels:L,outDepth:z,outHeight:B,outWidth:P,strideDepth:U,strideHeight:W,strideWidth:V}=p,H=A-1-p.padInfo.front,G=D-1-p.padInfo.top,j=R-1-p.padInfo.left;for(let e=0;e<E;++e)for(let t=0;t<_;++t)for(let n=0;n<F;++n){const s=n-H,r=Math.max(0,Math.ceil(s/U)),a=Math.min(z,(A+s)/U);for(let i=0;i<O;++i){const o=i-G,u=Math.max(0,Math.ceil(o/W)),l=Math.min(B,(D+o)/W);for(let c=0;c<M;++c){const h=c-j,p=Math.max(0,Math.ceil(h/V)),d=Math.min(P,(R+h)/V);let E=0;for(let n=r;n<a;++n){const r=n*U-s;for(let s=u;s<l;++s){const a=s*W-o;for(let i=p;i<d;++i){const o=v*e+w*n+k*s+I*i,u=N*(A-1-r)+T*(D-1-a)+C*(R-1-(i*V-h))+$*t;for(let e=0;e<L;++e)E+=x[o+e]*S[u+e]}}}f[m*e+g*n+y*i+b*c+t]=E}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},Gh=(0,kc.A)(r.mc4,(e=>Math.cos(e))),jh={kernelName:r.mc4,backendName:"cpu",kernelFunc:Gh},Xh=(0,kc.A)(r.TR1,(e=>Math.cosh(e))),qh={kernelName:r.TR1,backendName:"cpu",kernelFunc:Xh},Kh={kernelName:r.VcC,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:a,boxes:i,boxInd:o}=t,{cropSize:u,method:l,extrapolationValue:c}=s,[h,p,d,f]=a.shape,m=i.shape[0],[g,y]=u,b=(0,r.f3b)([m,g,y,f],"float32"),x=n.data.get(i.dataId).values,v=n.data.get(o.dataId).values,w=n.data.get(a.dataId).values,k=r.D5U.computeStrides(a.shape),I=r.D5U.computeStrides(b.shape);for(let e=0;e<m;e++){const t=4*e,n=x[t],s=x[t+1],r=x[t+2],a=x[t+3],i=v[e];if(i>=h)continue;const o=g>1?(r-n)*(p-1)/(g-1):0,u=y>1?(a-s)*(d-1)/(y-1):0;for(let t=0;t<g;t++){const h=g>1?n*(p-1)+t*o:.5*(n+r)*(p-1);if(h<0||h>p-1)for(let n=0;n<y;n++)for(let s=0;s<f;s++){const r=s+n*I[2]+t*I[1]+e*I[0];b.values[r]=c}else if("bilinear"===l){const n=Math.floor(h),r=Math.ceil(h),o=h-n;for(let l=0;l<y;l++){const h=y>1?s*(d-1)+l*u:.5*(s+a)*(d-1);if(h<0||h>d-1){for(let n=0;n<f;n++){const s=n+l*I[2]+t*I[1]+e*I[0];b.values[s]=c}continue}const p=Math.floor(h),m=Math.ceil(h),g=h-p;for(let s=0;s<f;s++){let a=s+p*k[2]+n*k[1]+i*k[0];const u=w[a];a=s+m*k[2]+n*k[1]+i*k[0];const c=w[a];a=s+p*k[2]+r*k[1]+i*k[0];const h=w[a];a=s+m*k[2]+r*k[1]+i*k[0];const d=u+(c-u)*g,f=h+(w[a]-h)*g;a=s+l*I[2]+t*I[1]+e*I[0],b.values[a]=d+(f-d)*o}}}else for(let n=0;n<y;++n){const r=y>1?s*(d-1)+n*u:.5*(s+a)*(d-1);if(r<0||r>d-1){for(let s=0;s<f;s++){const r=s+n*I[2]+t*I[1]+e*I[0];b.values[r]=c}continue}const o=Math.round(r),l=Math.round(h);for(let s=0;s<f;s++){const r=s+o*k[2]+l*k[1]+i*k[0],a=s+n*I[2]+t*I[1]+e*I[0];b.values[a]=w[r]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Yh={kernelName:r.iHb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,exclusive:o,reverse:u}=s;(0,xc.H)(a,"cumsum");const l=r.Wap.getAxesPermutation([i],a.shape.length);let c=a;null!=l&&(c=(0,Yc.p)({inputs:{x:a},backend:n,attrs:{perm:l}}));const h=r.Wap.getInnerMostAxes(1,a.shape.length)[0];if(h!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${h}`);const p=(0,r.x8V)(c.dtype,"int32"),d=r.D5U.makeZerosTypedArray(r.D5U.sizeFromShape(c.shape),p),f=n.data.get(c.dataId).values,m=c.shape[c.shape.length-1],g=u?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let e=0;e<f.length;e+=m)for(let t=0;t<m;t++){const n=g(e,t);if(0===t)d[n]=o?0:f[n];else{const s=g(e,t-1);d[n]=o?f[s]+d[s]:f[n]+d[s]}}const y=n.makeTensorInfo(c.shape,p,d);if(null!=l){const e=r.Wap.getUndoAxesPermutation(l),t=(0,Yc.p)({inputs:{x:y},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(c),t}return y}},Qh={kernelName:r.QRR,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=n.data.get(r.dataId).values,t=n.data.get(a.dataId).values,s=(0,Ih.W)(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,s)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(a),s=(0,Ih.i)(e,t,i,o);return n.makeTensorInfo(s.shape,a.dtype,s.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},Jh={kernelName:r.T0n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockSize:i,dataFormat:o}=s;r.D5U.assert("NHWC"===o,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`)),r.D5U.assert(i>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${i}`));const u=a.shape[0],l=a.shape[1],c=a.shape[2],h=a.shape[3],p=l*i,d=c*i,f=h/(i*i),m=n.data.get(a.dataId).values,g=new Float32Array(u*p*d*f);let y=0;for(let e=0;e<u;++e)for(let t=0;t<p;++t){const n=Math.floor(t/i),s=t%i;for(let t=0;t<d;++t){const r=Math.floor(t/i),a=(s*i+t%i)*f;for(let t=0;t<f;++t){const s=t+a+h*(r+c*(n+l*e));g[y++]=m[s]}}}return n.makeTensorInfo([u,p,d,f],a.dtype,g)}};function Zh(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:u,dilations:l,dimRoundingMode:c}=s;(0,xc.H)([a,i],"depthwiseConv2DNative");const h=r.D5U.computeStrides(a.shape),p=r.D5U.computeStrides(i.shape);let d=l;null==d&&(d=[1,1]),r.D5U.assert(r.Wap.eitherStridesOrDilationsAreOne(o,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`));const f=r.Wap.computeConv2DInfo(a.shape,i.shape,o,d,u,c,!0),{filterHeight:m,filterWidth:g,dilationHeight:y,dilationWidth:b,padInfo:x}=f,v=x.left,w=x.top,k=f.outChannels/f.inChannels,I=new r.YDk(f.outShape,a.dtype),S=n.data.get(a.dataId).values,N=n.data.get(i.dataId).values,T=I.values;for(let e=0;e<f.batchSize;++e){const t=e*h[0],n=e*I.strides[0];for(let e=0;e<f.outHeight;++e){const s=n+e*I.strides[1],r=e*f.strideHeight-w;for(let e=0;e<m;++e){const n=r+e*y;if(n<0||n>=f.inHeight)continue;const a=e*p[0],i=t+n*h[1];for(let e=0;e<f.outWidth;++e){const t=s+e*I.strides[2],n=e*f.strideWidth-v;for(let e=0;e<g;++e){const s=n+e*b;if(s<0||s>=f.inWidth)continue;const r=a+e*p[1],o=i+s*f.inChannels;let u=t,l=r;for(let e=0;e<f.inChannels;++e){const t=S[o+e];for(let e=0;e<k;++e)T[u+e]+=t*N[l+e];u+=k,l+=k}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const ep={kernelName:r.cie,backendName:"cpu",kernelFunc:Zh},tp={kernelName:r.sL$,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:i}=t,{strides:o,dilations:u,pad:l,dimRoundingMode:c,filterShape:h}=s;(0,xc.H)([a,i],"depthwiseConv2dNativeBackpropFilter");const p=r.Wap.computeConv2DInfo(a.shape,h,o,u,l,c,!0),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y=new r.YDk(p.filterShape,"float32"),b=p.padInfo.left,x=p.padInfo.top,v=p.outChannels/p.inChannels,w=n.data.get(a.dataId).values,k=new r.YDk(a.shape,a.dtype,w),I=n.data.get(i.dataId).values,S=new r.YDk(i.shape,i.dtype,I);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((x-e)/d)),n=Math.min(p.outHeight,(p.inHeight+x-e)/d);for(let s=0;s<g;++s){const r=Math.max(0,Math.ceil((b-s)/f)),a=Math.min(p.outWidth,(p.inWidth+b-s)/f);for(let i=0;i<p.outChannels;++i){const o=Math.trunc(i/v),u=i%v;let l=0;for(let u=0;u<p.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*d-x;for(let e=r;e<a;++e){const n=s+e*f-b;l+=k.get(u,t,n,o)*S.get(u,c,e,i)}}y.set(l,e,s,o,u)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},np={kernelName:r.y7R,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:i}=t,{strides:o,dilations:u,pad:l,dimRoundingMode:c,inputShape:h}=s;(0,xc.H)([a,i],"depthwiseConv2DNativeBackpropInput");const p=r.D5U.computeStrides(a.shape),d=r.D5U.computeStrides(i.shape),f=r.Wap.computeConv2DInfo(h,i.shape,o,u,l,c,!0),m=new r.YDk(f.inShape,"float32"),g=m.values,[y,b,x]=m.strides,v=n.data.get(a.dataId).values,[w,k,I]=p,S=n.data.get(i.dataId).values,[N,T,C]=d,{batchSize:$,filterHeight:E,filterWidth:A,inChannels:D,inHeight:R,inWidth:_,outChannels:F,outHeight:O,outWidth:M,strideHeight:L,strideWidth:z}=f,B=E-1-f.padInfo.top,P=A-1-f.padInfo.left,U=F/D;for(let e=0;e<$;++e)for(let t=0;t<D;++t)for(let n=0;n<R;++n){const s=n-B,r=Math.max(0,Math.ceil(s/L)),a=Math.min(O,(E+s)/L);for(let i=0;i<_;++i){const o=i-P,u=Math.max(0,Math.ceil(o/z)),l=Math.min(M,(A+o)/z);let c=0;for(let n=r;n<a;++n){const r=n*L-s;for(let s=u;s<l;++s){const a=w*e+k*n+I*s,i=N*(E-1-r)+T*(A-1-(s*z-o))+C*t;for(let e=0;e<U;++e)c+=v[a+(t*U+e)]*S[i+e]}}g[y*e+b*n+x*i+t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},sp={kernelName:r.$w,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,a=r.D5U.sizeFromShape(s.shape),i=n.data.get(s.dataId).values,o=(0,r.f3b)([a,a],s.dtype),u=o.values;for(let e=0;e<i.length;e++)u[e*a+e]=i[e];const l=[...s.shape,...s.shape];return n.makeTensorInfo(l,o.dtype,o.values)}},rp={kernelName:r.p4S,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=l.data.get(s.dataId).values,h=s.shape.length,p=l.data.get(a.dataId).values,d=a.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:I,filterWidth:S,dilationHeight:N,dilationWidth:T,outShape:C}=r.Wap.computeDilation2DInfo(s.shape,a.shape,i,o,"NHWC",u),$=r.D5U.sizeFromShape(C),E=C.length,A=r.D5U.getArrayFromDType(s.dtype,$);for(let e=0;e<f;++e)for(let t=0;t<b;++t){const n=t*w-v.top;for(let i=0;i<x;++i){const o=i*k-v.left;for(let u=0;u<y;++u){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<I;++t){const i=n+t*N;if(i>=0&&i<m)for(let n=0;n<S;++n){const f=o+n*T;if(f>=0&&f<g){const o=r.D5U.locToIndex([e,i,f,u],h,r.D5U.computeStrides(s.shape)),m=r.D5U.locToIndex([t,n,u],d,r.D5U.computeStrides(a.shape)),g=c[o]+p[m];g>l&&(l=g)}}}A[r.D5U.locToIndex([e,t,i,u],E,r.D5U.computeStrides(C))]=l}}}return{dataId:l.write(r.D5U.toTypedArray(A,s.dtype),C,s.dtype),shape:C,dtype:s.dtype}}},ap={kernelName:r.Vn9,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:a,dy:i}=e,{strides:o,pad:u,dilations:l}=n,c=t,h=r.D5U.toNestedArray(s.shape,c.data.get(s.dataId).values),p=r.D5U.toNestedArray(a.shape,c.data.get(a.dataId).values),{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=r.Wap.computeDilation2DInfo(s.shape,a.shape,o,u,"NHWC",l);r.D5U.assert(i.rank===T.length,(()=>`Error in ${r.Vn9}, dy must have the same rank as output ${T.length}, but got ${i.rank}`));const C=r.D5U.toNestedArray(T,c.data.get(i.dataId).values),$=r.D5U.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<d;++e)for(let t=0;t<y;++t){const n=t*v-x.top;for(let s=0;s<b;++s){const r=s*w-x.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<k;++t){const s=n+t*S;if(s>=0&&s<f)for(let n=0;n<I;++n){const l=r+n*N;if(l>=0&&l<m){const r=h[e][s][l][a]+p[t][n][a];r>i&&(i=r,o=t,u=n)}}}$[o][u][a]+=C[e][t][s][a]}}}return{dataId:c.write(r.D5U.toTypedArray($,s.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},ip={kernelName:r.ekb,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:a,dy:i}=e,{strides:o,pad:u,dilations:l}=n,c=t,h=r.D5U.toNestedArray(s.shape,c.data.get(s.dataId).values),p=r.D5U.toNestedArray(a.shape,c.data.get(a.dataId).values),{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=r.Wap.computeDilation2DInfo(s.shape,a.shape,o,u,"NHWC",l);r.D5U.assert(i.rank===T.length,(()=>`Error in ${r.ekb}, dy must have the same rank as output ${T.length}, but got ${i.rank}`));const C=r.D5U.toNestedArray(T,c.data.get(i.dataId).values),$=r.D5U.makeZerosNestedTypedArray(s.shape,s.dtype);for(let e=0;e<d;++e)for(let t=0;t<y;++t){const n=t*v-x.top;for(let s=0;s<b;++s){const r=s*w-x.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=r<0?0:r;for(let t=0;t<k;++t){const s=n+t*S;if(s>=0&&s<f)for(let n=0;n<I;++n){const l=r+n*N;if(l>=0&&l<m){const r=h[e][s][l][a]+p[t][n][a];r>i&&(i=r,o=s,u=l)}}}$[e][o][u][a]+=C[e][t][s][a]}}}return{dataId:c.write(r.D5U.toTypedArray($,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};var op=n(1917),up=n(4391);function lp(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;let u;(0,xc.H)(a,"sum"),u="bool"===a.dtype?(0,Th.p)({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):(0,Nc.y)({inputs:{x:a},backend:n});const l=u.shape.length,c=r.D5U.parseAxisParam(i,u.shape),h=r.Wap.getAxesPermutation(c,l);let p=c,d=u;null!=h&&(d=(0,Yc.p)({inputs:{x:u},backend:n,attrs:{perm:h}}),p=r.Wap.getInnerMostAxes(p.length,l)),r.Wap.assertAxesAreInnerMostDims("sum",p,d.shape.length);const[f,m]=r.Wap.computeOutAndReduceShapes(d.shape,p),g=r.Wap.upcastType(d.dtype,"int32");let y=(0,up.l)(n,f,g);const b=r.D5U.sizeFromShape(m),x=n.data.get(y.dataId).values,v=n.data.get(d.dataId).values;for(let e=0;e<x.length;++e){const t=e*b;let n=0;for(let e=0;e<b;++e)n+=v[t+e];x[e]=n}if(o){const e=y;y=Bc({inputs:{x:y},backend:n,attrs:{shape:r.Wap.expandShapeToKeepDim(y.shape,c)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(u),null!=h&&n.disposeIntermediateTensorInfo(d),y}const cp={kernelName:r.GBy,backendName:"cpu",kernelFunc:lp},hp={kernelName:r.$g6,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:a}=s,i=t,{allDims:o,summedDims:u,idDims:l}=r.Wap.decodeEinsumEquation(a,i.length);r.Wap.checkEinsumDimSizes(o.length,l,i);const{path:c,steps:h}=r.Wap.getEinsumComputePath(u,l),p=h.length;let d=null,f=o.length;const m=[];for(let e=0;e<p;++e){for(const t of h[e]){const{permutationIndices:e,expandDims:s}=r.Wap.getEinsumPermutation(f,l[t]);let a;r.Wap.isIdentityPermutation(e)?a=i[t]:(a=(0,Yc.p)({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),m.push(a));const o=a.shape.slice();for(let e=0;e<s.length;++e)o.splice(s[e],0,1);r.D5U.arraysEqual(a.shape,o)||(a=Bc({inputs:{x:a},backend:n,attrs:{shape:o}}),m.push(a)),null===d?d=a:(d=(0,op.Jp)({inputs:{a,b:d},backend:n}),m.push(d))}e<p-1&&(c[e]>=0&&(d=lp({inputs:{x:d},backend:n,attrs:{axis:c[e]-(o.length-f),keepDims:!1}}),m.push(d)),f--)}for(const e of m)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},pp={kernelName:r.HEU,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:s,y:a}=t;(0,xc.H)([s,a],"eluGrad");const i=new Float32Array(r.D5U.sizeFromShape(a.shape)),o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values;for(let e=0;e<o.length;++e){const t=o[e];i[e]=t>=1?u[e]:u[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",i)}};var dp=n(7679);const fp=r.Wap.ERF_P,mp=r.Wap.ERF_A1,gp=r.Wap.ERF_A2,yp=r.Wap.ERF_A3,bp=r.Wap.ERF_A4,xp=r.Wap.ERF_A5,vp=(0,kc.A)(r.Omj,(e=>{const t=Math.sign(e),n=Math.abs(e),s=1/(1+fp*n);return t*(1-((((xp*s+bp)*s+yp)*s+gp)*s+mp)*s*Math.exp(-n*n))})),wp={kernelName:r.Omj,backendName:"cpu",kernelFunc:vp};var kp=n(1211);function Ip(e){const{inputs:t,backend:n,attrs:s}=e,{input:a}=t,{dim:i}=s,o=a.shape.length,u=a.shape.slice();let l=i;return i<0&&(r.D5U.assert(-(o+1)<=i,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),l=o+i+1),u.splice(l,0,1),Bc({inputs:{x:a},backend:n,attrs:{shape:u}})}const Sp={kernelName:r.YFo,backendName:"cpu",kernelFunc:Ip};var Np=n(969);const Tp=(0,$c.b)(((e,t)=>e/t)),Cp=(0,oh.j)(r.oHH,Tp),$p={kernelName:r.oHH,backendName:"cpu",kernelFunc:Cp};var Ep=n(1649);function Ap(e,t,n){const s=e.shape,a=s[0],i=s[1],o=n.data.get(e.dataId),u=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,c=[a,i],h=r.D5U.sizeFromShape(c),p=r.D5U.getTypedArrayFromDType("float32",h),d=r.D5U.getTypedArrayFromDType("float32",h);for(let e=0;e<a;e++){const s=(0,wh.tP)({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,i]}}),a=(0,wh.tP)({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,i]}}),o=(0,Ah.P)({inputs:{real:s,imag:a},backend:n}),{real:c,imag:h}=Dp(o,t,n),f=r.Wap.mergeRealAndImagArrays(c,h);for(let t=0;t<i;t++){const n=r.Wap.getComplexWithIndex(f,t);p[e*i+t]=n.real,d[e*i+t]=n.imag}n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o)}const f=n.makeTensorInfo(c,"float32",p),m=n.makeTensorInfo(c,"float32",d),g=(0,Ah.P)({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}function Dp(e,t,n){const s=r.D5U.sizeFromShape(e.shape),a=n.data.get(e.dataId),i=n.data.get(a.complexTensorInfos.real.dataId).values,o=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0==((u=s)&u-1)){const a=Rp(i,o,s,t,n),u=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(u,"float32",a.real),t=n.makeTensorInfo(u,"float32",a.imag),i=n.makeTensorInfo([],"float32",r.D5U.createScalarValue(s,"float32")),o=(0,Nc.y)({inputs:{x:i},backend:n}),l=$p.kernelFunc({inputs:{a:e,b:i},backend:n}),c=$p.kernelFunc({inputs:{a:t,b:o},backend:n}),h=n.data.get(l.dataId).values,p=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),{real:h,imag:p}}return a}{const e=function(e,t,n){const s=new Float32Array(2*t);for(let a=0;a<t;a++){let i=0,o=0;for(let s=0;s<t;s++){const u=r.Wap.exponent(a*s,t,n),l=r.Wap.getComplexWithIndex(e,s);i+=l.real*u.real-l.imag*u.imag,o+=l.real*u.imag+l.imag*u.real}n&&(i/=t,o/=t),r.Wap.assignToTypedArray(s,i,o,a)}return s}(r.Wap.mergeRealAndImagArrays(i,o),s,t);return r.Wap.splitRealAndImagArrays(e)}var u}function Rp(e,t,n,s,a){if(1===n)return{real:e,imag:t};const i=r.Wap.mergeRealAndImagArrays(e,t),o=n/2,u=r.Wap.complexWithEvenIndex(i),l=u.real,c=u.imag,h=[l.length],p=a.makeTensorInfo(h,"float32",l),d=a.makeTensorInfo(h,"float32",c),f=(0,Ah.P)({inputs:{real:p,imag:d},backend:a}),m=r.Wap.complexWithOddIndex(i),g=m.real,y=m.imag,b=[g.length],x=a.makeTensorInfo(b,"float32",g),v=a.makeTensorInfo(b,"float32",y),w=(0,Ah.P)({inputs:{real:x,imag:v},backend:a}),k=Rp(l,c,o,s,a),I=k.real,S=k.imag,N=[I.length],T=a.makeTensorInfo(N,"float32",I),C=a.makeTensorInfo(N,"float32",S),$=(0,Ah.P)({inputs:{real:T,imag:C},backend:a}),E=Rp(g,y,o,s,a),A=E.real,D=E.imag,R=[A.length],_=a.makeTensorInfo(R,"float32",A),F=a.makeTensorInfo(R,"float32",D),O=(0,Ah.P)({inputs:{real:_,imag:F},backend:a}),M=r.Wap.exponents(n,s),L=[M.real.length],z=a.makeTensorInfo(L,"float32",M.real),B=a.makeTensorInfo(L,"float32",M.imag),P=(0,Ah.P)({inputs:{real:z,imag:B},backend:a}),U=(0,op.Jp)({inputs:{a:P,b:O},backend:a}),W=(0,zc.IH)({inputs:{a:$,b:U},backend:a}),V=(0,Ep.lu)({inputs:{a:$,b:U},backend:a}),H=(0,Oh.k)({inputs:{input:W},backend:a}),G=(0,Oh.k)({inputs:{input:V},backend:a}),j=_h({inputs:{input:W},backend:a}),X=_h({inputs:{input:V},backend:a}),q=Mh({inputs:[H,G],backend:a,attrs:{axis:0}}),K=Mh({inputs:[j,X],backend:a,attrs:{axis:0}}),Y=a.data.get(q.dataId).values,Q=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo($),a.disposeIntermediateTensorInfo(_),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(O),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(X),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:Y,imag:Q}}const _p={kernelName:r.vwp,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,a=r.D5U.sizeFromShape(s.shape),i=s.shape[s.shape.length-1],o=Bc({inputs:{x:s},backend:n,attrs:{shape:[a/i,i]}}),u=Ap(o,!1,n),l=Bc({inputs:{x:u},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),l}};function Fp(e){const{backend:t,attrs:n}=e,{shape:s,value:a,dtype:i}=n,o=i||r.D5U.inferDtype(a),u=r.D5U.getArrayFromDType(o,r.D5U.sizeFromShape(s));return function(e,t,n){e.fill(t)}(u,a),t.makeTensorInfo(s,o,u)}const Op={kernelName:r.deh,backendName:"cpu",kernelFunc:Fp},Mp={kernelName:r.Uyb,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,a=n,i=r.D5U.getTypedArrayFromDType(s.dtype,r.D5U.sizeFromShape(s.shape)),[o,u,l,c]=s.shape,h=a.data.get(s.dataId).values;for(let e=0;e<o;e++){const t=e*l*u*c;for(let e=0;e<u;e++){const n=e*(l*c);for(let e=0;e<l;e++){const s=e*c;for(let r=0;r<c;r++){const a=Math.round(l-e-1),o=t+n+s+r;let u=h[o];a>=0&&a<l&&(u=h[t+n+a*c+r]),i[o]=u}}}}return{dataId:a.write(i,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};var Lp=n(6574);const zp=(0,$c.b)(((e,t)=>Math.floor(e/t))),Bp=(0,oh.j)(r.jeX,zp,null,"int32"),Pp={kernelName:r.jeX,backendName:"cpu",kernelFunc:Bp},Up={kernelName:r._V0,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s;let m=zh({inputs:{x:r,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=(0,zc.IH)({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=Lc(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}},Wp={kernelName:r.luS,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s;let m=Zh({inputs:{x:r,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=(0,zc.IH)({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=Lc(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}};var Vp=n(1820);const Hp={kernelName:r.q1x,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:a}=t,i=r.D5U.sizeFromShape(s.shape),o=a.shape,u=o[o.length-1],[l,c,h,p]=r.Wap.prepareAndValidate(s,a);if(0===c)return n.makeTensorInfo(l,s.dtype,[]);const d=n.data.get(a.dataId).values,f=n.bufferSync(s),m=(0,Vp.m)(d,f,s.dtype,c,u,h,p,s.shape,i);return n.makeTensorInfo(l,s.dtype,m.values)}};var Gp=n(4468);const jp={kernelName:r.qi_,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,indices:i}=t,{axis:o,batchDims:u}=s;(0,xc.H)([a,i],"gatherV2");let l=u;null==u&&(l=0);const c=r.D5U.sizeFromShape(i.shape),h=r.D5U.parseAxisParam(o,a.shape)[0],p=r.Wap.segment_util.collectGatherOpShapeInfo(a,i,h,l),d=Bc({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),f=Bc({inputs:{x:i},backend:n,attrs:{shape:[p.batchSize,c/p.batchSize]}}),m=[p.batchSize,p.outerSize,c/p.batchSize,p.sliceSize],g=n.bufferSync(f),y=n.bufferSync(d),b=(0,Gp.i)(y,g,m);return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}};var Xp=n(6272),qp=n(6259);const Kp={kernelName:r.Qg5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,a=r.D5U.sizeFromShape(s.shape),i=s.shape[s.shape.length-1],o=Bc({inputs:{x:s},backend:n,attrs:{shape:[a/i,i]}}),u=Ap(o,!0,n),l=Bc({inputs:{x:u},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),l}},Yp=(0,kc.A)(r.avt,(e=>Number.isFinite(e)?1:0),"bool"),Qp={kernelName:r.avt,backendName:"cpu",kernelFunc:Yp},Jp=(0,kc.A)(r.iWB,(e=>Math.abs(e)===1/0?1:0),"bool"),Zp={kernelName:r.iWB,backendName:"cpu",kernelFunc:Jp},ed=(0,kc.A)(r.r7n,(e=>Number.isNaN(e)?1:0),"bool"),td={kernelName:r.r7n,backendName:"cpu",kernelFunc:ed};var nd=n(8405),sd=n(635),rd=n(1325);const ad={kernelName:r.e7N,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=(0,rd.b)(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}};var id=n(5223);const od=(0,kc.A)(r.kU,(e=>Math.log1p(e))),ud={kernelName:r.kU,backendName:"cpu",kernelFunc:od},ld=(0,$c.b)(((e,t)=>e&&t)),cd=(0,oh.j)(r.PYm,ld,null,"bool"),hd={kernelName:r.PYm,backendName:"cpu",kernelFunc:cd},pd=(0,kc.A)(r.VfG,(e=>e?0:1),"bool"),dd={kernelName:r.VfG,backendName:"cpu",kernelFunc:pd},fd=(0,$c.b)(((e,t)=>e||t)),md=(0,oh.j)(r.MZg,fd,null,"bool"),gd={kernelName:r.MZg,backendName:"cpu",kernelFunc:md},yd={kernelName:r.eZ0,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{depthRadius:i,bias:o,alpha:u,beta:l}=s;(0,xc.H)(a,"LRN");const c=a.shape[3],h=c-1,p=n.data.get(a.dataId).values,d=r.D5U.sizeFromShape(a.shape),f=new Float32Array(d);function m(e){const t=e%c;let n=e-t+Math.max(0,t-i);const s=e-t+Math.min(t+i,h);let r=0;for(;n<=s;n++){const e=p[n];r+=e*e}return r}for(let e=0;e<d;e++){const t=m(e),n=p[e]*Math.pow(o+u*t,-l);f[e]=n}return n.makeTensorInfo(a.shape,a.dtype,f)}},bd={kernelName:r.Hhh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,y:i,dy:o}=t,{depthRadius:u,bias:l,alpha:c,beta:h}=s;(0,xc.H)(o,"LRNGrad");const p=r.D5U.sizeFromShape(o.shape),d=o.shape[3],f=n.data.get(o.dataId).values,m=n.data.get(a.dataId).values,g=n.data.get(i.dataId).values,y=new Float32Array(p),b=p;for(let e=0;e<b;e++){const t=e%d,n=e-t+Math.max(0,t-u),s=e-t+Math.min(d,t+u+1);let r=0;for(let e=n;e<s;e++)r+=Math.pow(m[e],2);r=c*r+l;for(let t=n;t<s;t++){let n=-2*c*h*m[t]*g[e]/r;e===t&&(n+=Math.pow(r,-h)),n*=f[e],y[t]+=n}}return n.makeTensorInfo(o.shape,a.dtype,y)}};var xd=n(5126),vd=n(7107);function wd(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{reductionIndices:i,keepDims:o}=s,u=n;let l=a.shape;const c=l.length,h=r.D5U.parseAxisParam(i,l);let p=h;const d=r.Wap.getAxesPermutation(p,c);let f=u.data.get(a.dataId).values;if(null!=d){const e=new Array(c);for(let t=0;t<e.length;t++)e[t]=l[d[t]];f=(0,vd.H)(f,l,a.dtype,d,e),p=r.Wap.getInnerMostAxes(p.length,c),l=e}(0,xc.H)(a,"max"),r.Wap.assertAxesAreInnerMostDims("max",p,c);const[m,g]=r.Wap.computeOutAndReduceShapes(l,p),y=r.D5U.sizeFromShape(g),b=(0,xd.B)(f,y,m,a.dtype),x=u.write(b,m,a.dtype);let v=m;return o&&(v=r.Wap.expandShapeToKeepDim(m,h)),{dataId:x,shape:v,dtype:a.dtype}}const kd={kernelName:r.YoZ,backendName:"cpu",kernelFunc:wd};var Id=n(1717);const Sd={kernelName:r.mTV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;(0,xc.H)(a,"maxPool");const{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=s;r.D5U.assert(r.Wap.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=r.Wap.computePool2DInfo(a.shape,i,o,1,u,l);let h;if(1===c.filterWidth&&1===c.filterHeight&&r.D5U.arraysEqual(c.inShape,c.outShape))h=(0,Nc.y)({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=r.D5U.computeStrides(a.shape),s=dh(e,a.shape,a.dtype,t,c,"max");h=n.makeTensorInfo(c.outShape,a.dtype,s.values)}return h}},Nd={kernelName:r.OAf,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l,dataFormat:c}=s;(0,xc.H)(a,"maxPool3d");const h=r.Wap.computePool3DInfo(a.shape,i,o,1,u,l,c),p=mh(n.data.get(a.dataId).values,a.shape,a.dtype,r.D5U.computeStrides(a.shape),h,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}},Td={kernelName:r.OU7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:i}=t,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=s;(0,xc.H)([a,i],"maxPool3DGrad");const h=r.Wap.computePool3DInfo(i.shape,o,u,1,l,c),p=function(e,t){const n=(0,r.f3b)(t.outShape,"int32"),s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,h=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left;for(let r=0;r<t.batchSize;++r)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*s-d;let x=b;for(;x<0;)x+=o;const v=Math.min(t.inDepth,c+b);for(let s=0;s<t.outHeight;++s){const c=s*a-f;let d=c;for(;d<0;)d+=u;const w=Math.min(t.inHeight,h+c);for(let a=0;a<t.outWidth;++a){const f=a*i-m;let k=f;for(;k<0;)k+=l;const I=Math.min(t.inWidth,p+f);let S=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<v;t+=o){const n=t-b;for(let s=d;s<w;s+=u){const a=s-c;for(let i=k;i<I;i+=l){const o=i-f,u=e.get(r,t,s,i,g);u>=S&&(S=u,N=n*h*p+a*h+o)}}}n.set(N,r,y,s,a,g)}}}return n}(n.bufferSync(i),h),d=h.strideDepth,f=h.strideHeight,m=h.strideWidth,g=h.dilationDepth,y=h.dilationHeight,b=h.dilationWidth,x=h.effectiveFilterDepth,v=h.effectiveFilterHeight,w=h.effectiveFilterWidth,k=x-1-h.padInfo.front,I=w-1-h.padInfo.left,S=v-1-h.padInfo.top,N=(0,r.f3b)(i.shape,"float32"),T=n.bufferSync(a);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let s=0;s<h.inHeight;++s)for(let r=0;r<h.inWidth;++r){const a=n-k,i=s-S,o=r-I;let u=0;for(let n=0;n<x;n+=g){const s=(a+n)/d;if(!(s<0||s>=h.outDepth||Math.floor(s)!==s))for(let r=0;r<v;r+=y){const a=(i+r)/f;if(!(a<0||a>=h.outHeight||Math.floor(a)!==a))for(let i=0;i<w;i+=b){const l=(o+i)/m;if(l<0||l>=h.outWidth||Math.floor(l)!==l)continue;const c=x*v*w-1-p.get(e,s,a,l,t)===n*v*w+r*w+i?1:0;0!==c&&(u+=T.get(e,s,a,l,t)*c)}}}N.set(u,e,n,s,r,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},Cd={kernelName:r.OV7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:i,output:o}=t,u=i;(0,xc.H)([i,o],"maxPoolGrad");const{filterSize:l,strides:c,pad:h,dimRoundingMode:p}=s,d=r.Wap.computePool2DInfo(u.shape,l,c,1,h,p),f=n.data.get(u.dataId).values,m=(0,r.f3b)(d.outShape,u.dtype,fh(f,u.shape,u.dtype,d).values),g=d.strideHeight,y=d.strideWidth,b=d.dilationHeight,x=d.dilationWidth,v=d.effectiveFilterHeight,w=d.effectiveFilterWidth,k=w-1-d.padInfo.left,I=v-1-d.padInfo.top,S=(0,r.f3b)(u.shape,"float32"),N=n.data.get(a.dataId).values,T=(0,r.f3b)(a.shape,"float32",N);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let s=0;s<d.inWidth;++s){const r=n-I,a=s-k;let i=0;for(let n=0;n<v;n+=b){const s=(r+n)/g;if(!(s<0||s>=d.outHeight||Math.floor(s)!==s))for(let r=0;r<w;r+=x){const o=(a+r)/y;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const u=v*w-1-m.get(e,s,o,t)===n*w+r?1:0;0!==u&&(i+=T.get(e,s,o,t)*u)}}S.set(i,e,n,s,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},$d={kernelName:r.vFR,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:a,strides:i,pad:o,includeBatchInIndex:u}=t,l=n;(0,xc.H)(s,"MaxPoolWithArgmax");const c=l.data.get(s.dataId).values,h=r.Wap.computePool2DInfo(s.shape,a,i,[1,1],o),[p,d]=function(e,t,n,s,a){const i=dh(e,0,n,r.D5U.computeStrides(t),a,"max"),o=fh(e,t,n,a,!0,s);return[i.values,o.values]}(c,s.shape,s.dtype,u,h),f=l.write(p,h.outShape,s.dtype),m=l.write(d,h.outShape,s.dtype);return[{dataId:f,shape:h.outShape,dtype:s.dtype},{dataId:m,shape:h.outShape,dtype:"int32"}]}},Ed={kernelName:r.q2K,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,u=r.D5U.parseAxisParam(i,a.shape),l=r.Wap.computeOutAndReduceShapes(a.shape,u)[1],c=r.D5U.sizeFromShape(l),h=[],p=n.makeTensorInfo([],"float32",new Float32Array([c]));h.push(p);const d=(0,Th.p)({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});h.push(d);const f=Cp({inputs:{a:d,b:p},backend:n});h.push(f);const m=lp({inputs:{x:f},backend:n,attrs:{axis:i,keepDims:o}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}},Ad={kernelName:r.c17,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;(0,xc.H)(a,"min");const u=r.D5U.parseAxisParam(i,a.shape);let l=u;const c=r.Wap.getAxesPermutation(l,a.shape.length);let h=a;null!=c&&(h=(0,Yc.p)({inputs:{x:a},backend:n,attrs:{perm:c}}),l=r.Wap.getInnerMostAxes(l.length,a.shape.length)),r.Wap.assertAxesAreInnerMostDims("min",l,h.shape.length);const[p,d]=r.Wap.computeOutAndReduceShapes(h.shape,l),f=r.D5U.sizeFromShape(d),m=r.D5U.makeZerosTypedArray(r.D5U.sizeFromShape(p),h.dtype),g=n.data.get(h.dataId).values;for(let e=0;e<m.length;++e){const t=e*f;let n=g[t];for(let e=0;e<f;++e){const s=g[t+e];(Number.isNaN(s)||s<n)&&(n=s)}m[e]=n}null!=c&&n.disposeIntermediateTensorInfo(h);const y=n.makeTensorInfo(p,h.dtype,m);if(o){const e=Bc({inputs:{x:y},backend:n,attrs:{shape:r.Wap.expandShapeToKeepDim(p,u)}});return n.disposeIntermediateTensorInfo(y),e}return y}};var Dd=n(612);const Rd={kernelName:r.jQs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{paddings:i,mode:o}=s;(0,xc.H)(a,"mirrorPad");const u=i.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=i.map((e=>e[0])),c=i.map(((e,t)=>e[0]+a.shape[t])),h="reflect"===o?0:1,p=n.data.get(a.dataId).values,d=a.shape.length,f=r.D5U.computeStrides(a.shape),m=r.D5U.sizeFromShape(u),g=u.length,y=r.D5U.computeStrides(u),b=r.D5U.getTypedArrayFromDType(a.dtype,m);for(let e=0;e<m;e++){let t=r.D5U.indexToLoc(e,g,y);for(let e=0;e<g;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-h:t[e]>=c[e]&&(t[e]=2*(c[e]-1)-t[e]+h);t=t.map(((e,t)=>e-l[t]));const n=r.D5U.locToIndex(t,d,f);b[e]=p[n]}return{dataId:n.write(b,u,a.dtype),shape:u,dtype:a.dtype}}},_d=(0,$c.b)(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),Fd=(0,oh.j)(r.Vbg,_d),Od={kernelName:r.Vbg,backendName:"cpu",kernelFunc:Fd};function Md(e){const{inputs:t,backend:n,attrs:s}=e,{logits:a}=t,{dim:i}=s,o=a.shape.length;let u=i;if(-1===u&&(u=o-1),u!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${u}`);const l=r.D5U.parseAxisParam([u],a.shape),c=wd({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),h=r.Wap.expandShapeToKeepDim(c.shape,l),p=Bc({inputs:{x:c},backend:n,attrs:{shape:h}}),d=(0,Ep.lu)({inputs:{a,b:p},backend:n}),f=(0,kp.Qq)({inputs:{x:d},backend:n}),m=lp({inputs:{x:f},backend:n,attrs:{axis:l,keepDims:!1}}),g=Bc({inputs:{x:m},backend:n,attrs:{shape:h}}),y=Cp({inputs:{a:f,b:g},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}const Ld={kernelName:r.Gcp,backendName:"cpu",kernelFunc:Md},zd={kernelName:r.NZg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:a}=t,{numSamples:i,seed:o,normalized:u}=s;(0,xc.H)(a,"multinomial");const l=u?a:Md({inputs:{logits:a},backend:n,attrs:{dim:-1}}),c=l.shape[0],h=l.shape[1],p=n.data.get(l.dataId).values,d=[c,i],f=r.D5U.makeZerosTypedArray(r.D5U.sizeFromShape(d),"int32");for(let e=0;e<c;++e){const t=e*h,n=new Float32Array(h-1);n[0]=p[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+p[t+e];const s=pl.alea(o.toString()),r=e*i;for(let e=0;e<i;++e){const t=s();f[r+e]=n.length;for(let s=0;s<n.length;s++)if(t<n[s]){f[r+e]=s;break}}}return u||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",f)}};var Bd=n(854);const Pd=r.GDt.GP,Ud={kernelName:r.uv1,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=s;(0,xc.H)(r,"NonMaxSuppression");const l=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=Pd(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Wd=r.GDt.qP,Vd={kernelName:r.cye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=s;(0,xc.H)(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:d}=Wd(c,h,i,o,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},Hd=r.GDt.pA,Gd={kernelName:r.W0H,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=s;(0,xc.H)(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,p=i,d=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=Hd(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};var jd=n(8584);const Xd={kernelName:r.we_,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:a}=t,{depth:i,onValue:o,offValue:u}=s;(0,xc.H)(a,"oneHot");const l=r.D5U.sizeFromShape(a.shape),c=new Float32Array(l*i);c.fill(u);const h=n.data.get(a.dataId).values;for(let e=0;e<l;++e)h[e]>=0&&h[e]<i&&(c[e*i+h[e]]=o);return n.makeTensorInfo([...a.shape,i],"int32",c)}};function qd(e){const{inputs:t,backend:n}=e,{x:s}=t;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const e=(0,Oh.k)({inputs:{input:s},backend:n}),t=qd({inputs:{x:e},backend:n}),r=_h({inputs:{input:s},backend:n}),a=qd({inputs:{x:r},backend:n}),i=(0,Ah.P)({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return Fp({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const Kd={kernelName:r.RuY,backendName:"cpu",kernelFunc:qd},Yd={kernelName:r.qWM,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=(0,Oh.k)({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=_h({inputs:{input:r},backend:s}),i=qd({inputs:{x:a},backend:s}),o=(0,Ah.P)({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return Fp({backend:s,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function Qd(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s;if(1===t.length)return Ip({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const i=t[0].shape,o=t[0].dtype;t.forEach((e=>{r.D5U.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),r.D5U.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],l=Mh({inputs:t.map((e=>{const t=Ip({inputs:{input:e},backend:n,attrs:{dim:a}});return u.push(t),t})),backend:n,attrs:{axis:a}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const Jd={kernelName:r.QiL,backendName:"cpu",kernelFunc:Qd},Zd={kernelName:r.lyA,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{paddings:i,constantValue:o}=s;(0,xc.H)(a,"pad");const u=i.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=i.map((e=>e[0])),c=n.data.get(a.dataId).values,h=r.D5U.sizeFromShape(a.shape),p=a.shape.length,d=r.D5U.computeStrides(a.shape),f=r.D5U.sizeFromShape(u),m=u.length,g=r.D5U.computeStrides(u),y=r.D5U.getTypedArrayFromDType(a.dtype,f);0!==o&&y.fill(o);for(let e=0;e<h;e++){const t=r.D5U.indexToLoc(e,p,d).map(((e,t)=>e+l[t]));y[r.D5U.locToIndex(t,m,g)]=c[e]}return{dataId:n.write(y,u,a.dtype),shape:u,dtype:a.dtype}}},ef=(0,$c.b)(((e,t)=>Math.pow(e,t))),tf=(0,oh.j)(r.pe_,ef),nf={kernelName:r.pe_,backendName:"cpu",kernelFunc:tf};var sf=n(9560),rf=n(9230);const af={kernelName:r.e6w,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:i}=n,o=(0,rf.b)(s,r,i,a);return t.makeTensorInfo([o.length],a,o)}},of=(0,kc.A)(r.$HU,(e=>1/e)),uf={kernelName:r.$HU,backendName:"cpu",kernelFunc:of},lf={kernelName:r._Yw,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:o,size:u}=s;(0,xc.H)(a,"resizeBilinear");const l=r.D5U.computeStrides(a.shape),[c,h]=u,[p,d,f,m]=a.shape,g=n.data.get(a.dataId).values,y=new Float32Array(r.D5U.sizeFromShape([p,c,h,m])),b=[i&&c>1?d-1:d,i&&h>1?f-1:f],x=[i&&c>1?c-1:c,i&&h>1?h-1:h];let v=0;const w=b[0]/x[0],k=b[1]/x[1];for(let e=0;e<p;e++)for(let t=0;t<c;t++){let n;n=o?w*(t+.5)-.5:w*t;const s=Math.max(0,Math.floor(n)),r=n-s,a=Math.min(d-1,Math.ceil(n)),i=e*l[0]+s*l[1],u=e*l[0]+a*l[1];for(let e=0;e<h;e++){let t;t=o?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),s=t-n,a=Math.min(f-1,Math.ceil(t)),c=i+n*l[2],h=u+n*l[2],p=i+a*l[2],d=u+a*l[2];for(let e=0;e<m;e++){const t=g[c+e],n=g[h+e],a=t+(g[p+e]-t)*s,i=a+(n+(g[d+e]-n)*s-a)*r;y[v++]=i}}}return n.makeTensorInfo([p,c,h,m],"float32",y)}},cf={kernelName:r.zbQ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a,dy:i}=t,{alignCorners:o}=s;(0,xc.H)([i,a],"resizeBilinearGrad");const u=r.D5U.computeStrides(a.shape),[l,c,h,p]=a.shape,[,d,f]=i.shape,m=new Float32Array(l*c*h*p),g=[o&&d>1?c-1:c,o&&f>1?h-1:h],y=[o&&d>1?d-1:d,o&&f>1?f-1:f],b=g[0]/y[0],x=g[1]/y[1],v=n.data.get(i.dataId).values;let w=0;for(let e=0;e<l;e++){const t=e*u[0];for(let e=0;e<d;e++){const n=e*b,s=Math.floor(n),r=Math.min(Math.ceil(n),c-1),a=t+s*u[1],i=t+r*u[1],o=n-s,l=1-o;for(let e=0;e<f;e++){const t=e*x,n=Math.floor(t),s=Math.min(Math.ceil(t),h-1),r=t-n,c=1-r,d=a+n*u[2],f=a+s*u[2],g=i+n*u[2],y=i+s*u[2],b=l*c,k=l*r,I=o*c,S=o*r;for(let e=0;e<p;e++){const t=v[w++];m[d+e]+=t*b,m[f+e]+=t*k,m[g+e]+=t*I,m[y+e]+=t*S}}}}return n.makeTensorInfo([l,h,c,p],"float32",m)}},hf={kernelName:r.dpD,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:o,size:u}=s;(0,xc.H)(a,"resizeNearestNeighbor");const l=r.D5U.computeStrides(a.shape),[c,h]=u,[p,d,f,m]=a.shape,g=n.data.get(a.dataId).values,y=new Float32Array(p*c*h*m),b=[i&&c>1?d-1:d,i&&h>1?f-1:f],x=[i&&c>1?c-1:c,i&&h>1?h-1:h],v=b[0]/x[0],w=b[1]/x[1];let k=0;for(let e=0;e<p;e++){const t=e*l[0];for(let e=0;e<c;e++){const n=o?v*(e+.5):v*e;let s=Math.min(d-1,i?Math.round(n):Math.floor(n));o&&(s=Math.max(0,s));const r=t+s*l[1];for(let e=0;e<h;e++){const t=o?w*(e+.5):w*e;let n=Math.min(f-1,i?Math.round(t):Math.floor(t));o&&(n=Math.max(0,n));const s=r+n*l[2];for(let e=0;e<m;e++){const t=g[s+e];y[k++]=t}}}}return n.makeTensorInfo([p,c,h,m],a.dtype,y)}},pf={kernelName:r.Hmb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a,dy:i}=t,{alignCorners:o}=s;(0,xc.H)([i,a],"resizeNearestNeighborGrad");const u=r.D5U.computeStrides(a.shape),l=r.D5U.computeStrides(i.shape),[c,h,p,d]=a.shape,[,f,m]=i.shape,g=new Float32Array(c*h*p*d),y=n.data.get(i.dataId).values,b=[o&&f>1?h-1:h,o&&m>1?p-1:p],x=[o&&f>1?f-1:f,o&&m>1?m-1:m],v=b[0]/x[0],w=b[1]/x[1],k=1/v,I=1/w,S=2*Math.ceil(k)+2,N=2*Math.ceil(I)+2;for(let e=0;e<c;e++){const t=e*u[0];for(let e=0;e<h;e++){const n=t+e*u[1],s=Math.floor(e*k),r=Math.floor(s-S/2);for(let s=0;s<p;s++){const a=n+s*u[2],i=Math.floor(s*I),c=Math.floor(i-N/2);for(let n=0;n<d;n++){let i=0;for(let a=0;a<S;a++){const u=a+r;if(u<0||u>=f)continue;const d=t+u*l[1],g=u*v;if(e===Math.min(h-1,o?Math.round(g):Math.floor(g)))for(let e=0;e<N;e++){const t=e+c;if(t<0||t>=m)continue;const r=d+t*l[2],a=t*w;s===Math.min(p-1,o?Math.round(a):Math.floor(a))&&(i+=y[r+n])}}g[a+n]=i}}}}return n.makeTensorInfo(a.shape,a.dtype,g)}},df={kernelName:r.mKl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{dims:i}=s;(0,xc.H)(a,"reverse");const o=a.shape.length,u=r.D5U.parseAxisParam(i,a.shape);if(0===o)return(0,Nc.y)({inputs:{x:a},backend:n});const l=new r.YDk(a.shape,a.dtype),c=n.bufferSync(a);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();u.forEach((e=>n[e]=a.shape[e]-1-n[e])),l.set(c.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},ff={kernelName:r.b9H,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:a,fillValue:i,center:o}=t,u=n,l=r.D5U.getTypedArrayFromDType(s.dtype,r.D5U.sizeFromShape(s.shape)),[c,h,p,d]=s.shape,[f,m]=r.Wap.getImageCenter(o,h,p),g=Math.sin(a),y=Math.cos(a),b=u.data.get(s.dataId).values;for(let e=0;e<c;e++){const t=e*p*h*d;for(let e=0;e<h;e++){const n=e*(p*d);for(let s=0;s<p;s++){const r=s*d;for(let a=0;a<d;a++){const o=[c,e,s,a],u=o[2],x=o[1];let v=(u-f)*y-(x-m)*g,w=(u-f)*g+(x-m)*y;v=Math.round(v+f),w=Math.round(w+m);let k=i;"number"!=typeof i&&(k=3===a?255:i[a]),v>=0&&v<p&&w>=0&&w<h&&(k=b[t+w*(p*d)+v*d+a]),l[t+n+r+a]=k}}}}return{dataId:u.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},mf=(0,kc.A)(r.e07,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),gf={kernelName:r.e07,backendName:"cpu",kernelFunc:mf};var yf=n(7742);function bf(e,t,n,s,a,i,o,u,l,c){const h=[s/a,a],p=e.values,d=t.values;if(0===s)return(0,r.f3b)(n,t.dtype);const f=(0,r.f3b)(h,t.dtype);f.values.fill(l);for(let e=0;e<i;e++){const r=[];let i=0;for(let t=0;t<o;t++){const n=p[e*o+t];r.push(n),i+=n*u[t]}if(i<0||i>=s/a)throw new Error(`Invalid indices: ${r} does not index into ${n}`);for(let n=0;n<a;n++)c?f.values[i*a+n]+=d[e*a+n]:f.values[i*a+n]=0===t.rank?d[0]:d[e*a+n]}return f}const xf={kernelName:r.xQA,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:a,updates:i}=t,{shape:o}=s,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:p}=r.Wap.calculateShapes(i,a,o),d=bf(n.bufferSync(a),n.bufferSync(i),o,p,c,l,u,h,0,!0);return n.makeTensorInfo(o,d.dtype,d.values)}},vf={kernelName:r.PhF,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:a,e:i}=t;(0,xc.H)([s,a,i],"select");const o=s.shape.length,u=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values,h=(0,r.x8V)(a.dtype,i.dtype),p=r.D5U.makeZerosTypedArray(r.D5U.sizeFromShape(a.shape),h);let d=0;const f=0===o||o>1||1===a.shape.length?1:r.D5U.sizeFromShape(a.shape.slice(1));for(let e=0;e<u.length;e++)for(let t=0;t<f;t++)1===u[e]?p[d++]=l[e]:p[d++]=c[e];return n.makeTensorInfo(a.shape,h,p)}},wf=r.Wap.SELU_SCALEALPHA,kf=r.Wap.SELU_SCALE,If=(0,kc.A)(r.oFR,(e=>e>=0?kf*e:wf*(Math.exp(e)-1))),Sf={kernelName:r.oFR,backendName:"cpu",kernelFunc:If},Nf=(0,kc.A)(r.i5y,(e=>e<0?-1:e>0?1:0)),Tf={kernelName:r.i5y,backendName:"cpu",kernelFunc:Nf},Cf=(0,kc.A)(r.RQH,(e=>Math.sin(e))),$f={kernelName:r.RQH,backendName:"cpu",kernelFunc:Cf},Ef=(0,kc.A)(r.wYB,(e=>Math.sinh(e))),Af={kernelName:r.wYB,backendName:"cpu",kernelFunc:Ef},Df=Math.log(1.1920928955078125e-7)+2,Rf=(0,kc.A)(r.MRv,(e=>{const t=e>-Df,n=e<Df,s=Math.exp(e);let r;return r=n?s:t?e:Math.log(1+s),r})),_f={kernelName:r.MRv,backendName:"cpu",kernelFunc:Rf},Ff={kernelName:r.TQc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:i,paddings:o}=s;(0,xc.H)([a],"spaceToBatchND");const u=r.D5U.sizeFromShape(i),l=[[0,0]];l.push(...o);for(let e=1+i.length;e<a.shape.length;++e)l.push([0,0]);const c=Zd.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=r.Wap.getReshaped(c.shape,i,u,!1),p=r.Wap.getPermuted(h.length,i.length,!1),d=r.Wap.getReshapedPermuted(c.shape,i,u,!1),f=Bc({inputs:{x:c},backend:n,attrs:{shape:h}}),m={x:f},g={perm:p},y=(0,Yc.p)({inputs:m,backend:n,attrs:g}),b=Bc({inputs:{x:y},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),b}};var Of=n(2123);const Mf={kernelName:r.O3z,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n        ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,p,d,f,m]=(0,Of.c)(o,s.shape,s.dtype,u,r.dtype,l,c);return[n.makeTensorInfo(p,s.dtype,h),n.makeTensorInfo([p[0]],r.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}};var Lf=n(3849);const zf={kernelName:r.nhH,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(r.dataId).values),o=n.data.get(s.dataId).values,u=Array.from(n.data.get(a.dataId).values),[l,c,h]=(0,Lf.U)(o,s.shape,s.dtype,i,u);return[n.makeTensorInfo(c,s.dtype,l),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};var Bf=n(3989);const Pf={kernelName:r.w3H,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);const i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,[l,c]=(0,Bf.V)(i,s.shape,s.dtype,o,u,!0);return n.makeTensorInfo(c,s.dtype,l)}},Uf={kernelName:r.ZjV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);const i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,[l,c]=(0,Bf.V)(i,s.shape,s.dtype,o,u);return n.makeTensorInfo(c,s.dtype,l)}},Wf={kernelName:r.D2d,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:a,sparseValues:i,defaultValue:o}=t,{outputShape:u}=s,{sliceRank:l,numUpdates:c,sliceSize:h,strides:p,outputSize:d}=r.Wap.calculateShapes(i,a,u),f=bf(n.bufferSync(a),n.bufferSync(i),u,d,h,c,l,p,n.data.get(o.dataId).values[0],!1);return n.makeTensorInfo(u,f.dtype,f.values)}},Vf={kernelName:r.L8s,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{numOrSizeSplits:i,axis:o}=s,u=r.D5U.parseAxisParam(o,a.shape)[0],l=r.Wap.prepareSplitSize(a,i,u),c=new Array(a.shape.length).fill(0),h=a.shape.slice();return l.map((e=>{const t=[...h];t[u]=e;const s=(0,wh.tP)({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[u]+=e,s}))}};var Hf=n(440);const Gf={kernelName:r.bK0,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,s=t;(0,xc.H)(n,"square");const r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let e=0;e<r.length;++e){const t=r[e];a[e]=t*t}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var jf=n(212);const Xf=(0,kc.A)(r.h8e,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),qf={kernelName:r.h8e,backendName:"cpu",kernelFunc:Xf};var Kf=n(2210);const Yf={kernelName:r.jQk,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{begin:i,end:o,strides:u,beginMask:l,endMask:c,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:d}=s;(0,xc.H)(a,"stridedSlice");const{nonStrided:f,$begin:m,$strides:g,size:y,newShape:b,outShape:x}=r.kuN.sliceInfo(a.shape,i,o,u,l,c,h,p,d),v=Bc({inputs:{x:a},backend:n,attrs:{shape:b}});let w;if(f){const e=(0,wh.tP)({inputs:{x:v},backend:n,attrs:{begin:m,size:y}});w=Bc({inputs:{x:e},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(e)}else if(x.some((e=>0===e)))w=n.makeTensorInfo(x,a.dtype,[]);else{const e=n.bufferSync(v),t=(0,Kf.t)(x,e,g,m);w=n.makeTensorInfo(t.shape,t.dtype,t.values)}const k=Bc({inputs:{x:w},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),k}};var Qf=n(6841);const Jf={kernelName:r._JP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=s,{data:c,dataSplits:h}=t,p=n.data.get(c.dataId).values,d=n.data.get(h.dataId).values,[f,m]=(0,Qf.A)(p,d,r,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};var Zf=n(8639);const em={kernelName:r.s1s,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,h]=(0,Zf.Q)(o,u,r),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};var tm=n(6626);const nm={kernelName:r.XkS,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=n.data.get(a.dataId).values,o=(0,tm.h)(i,r);return n.makeTensorInfo(a.shape,"int32",o)}},sm=(0,kc.A)(r.sEM,(e=>Math.tan(e))),rm={kernelName:r.sEM,backendName:"cpu",kernelFunc:sm},am=(0,kc.A)(r.MIZ,(e=>Math.tanh(e))),im={kernelName:r.MIZ,backendName:"cpu",kernelFunc:am};var om=n(7723);const um={kernelName:r.n9L,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;(0,xc.H)(r,"tile");const i=(0,om.R)(n.bufferSync(r),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}};var lm=n(9556);const cm={kernelName:r.cWu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s;(0,xc.H)(r,"topk");const o=n.data.get(r.dataId).values,[u,l]=(0,lm.W)(o,r.shape,r.dtype,a,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},hm={kernelName:r.wx7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{image:a,transforms:i}=t,{interpolation:o,fillMode:u,fillValue:l,outputShape:c}=n,[h,p,d,f]=a.shape,[m,g]=null!=c?c:[p,d],y=[h,m,g,f],b=r.D5U.computeStrides(a.shape),x=b[0],v=b[1],w=b[2],k=r.D5U.getTypedArrayFromDType(a.dtype,r.D5U.sizeFromShape(y));k.fill(l);const I=s.data.get(a.dataId).values,S=s.data.get(i.dataId).values;for(let e=0;e<h;++e){const t=1===i.shape[0]?S:S.subarray(8*e,8*e+8);for(let n=0;n<m;++n)for(let s=0;s<g;++s)for(let r=0;r<f;++r){let a;const i=t[6]*s+t[7]*n+1;if(0===i)continue;const c=(t[0]*s+t[1]*n+t[2])/i,h=(t[3]*s+t[4]*n+t[5])/i,f=pm(c,d,u),m=pm(h,p,u);switch(o){case"nearest":a=fm(I,p,d,x,v,w,e,m,f,r,l);break;case"bilinear":a=mm(I,p,d,x,v,w,e,m,f,r,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}k[e*x+n*v+s*w+r]=a}return s.makeTensorInfo(y,a.dtype,k)}return{dataId:s.write(k,y,a.dtype),shape:a.shape,dtype:a.dtype}}};function pm(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return r.D5U.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return r.D5U.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return r.D5U.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function dm(e,t,n,s,r,a,i,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[i*s+o*r+u*a+l]:c}function fm(e,t,n,s,r,a,i,o,u,l,c){return dm(e,t,n,s,r,a,i,Math.round(o),Math.round(u),l,c)}function mm(e,t,n,s,r,a,i,o,u,l,c){const h=Math.floor(o),p=Math.floor(u),d=h+1,f=p+1;return(d-o)*((f-u)*dm(e,t,n,s,r,a,i,h,p,l,c)+(u-p)*dm(e,t,n,s,r,a,i,h,f,l,c))+(o-h)*((f-u)*dm(e,t,n,s,r,a,i,d,p,l,c)+(u-p)*dm(e,t,n,s,r,a,i,d,f,l,c))}var gm=n(5638);const ym={kernelName:r.kpP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;(0,xc.H)(a,"unique");const i=s.data.get(a.dataId).values,{outputValues:o,outputShape:u,indices:l}=(0,gm.S)(i,r,a.shape,a.dtype);return[s.makeTensorInfo(u,a.dtype,o),s.makeTensorInfo([l.length],"int32",l)]}},bm={kernelName:r.ToN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r.shape.length,o=r.shape[a],u=new Array(i-1);let l=0;for(let e=0;e<i;e++)e!==a&&(u[l++]=r.shape[e]);const c=new Array(i).fill(0),h=r.shape.slice();h[a]=1;const p=new Array(o);for(let e=0;e<p.length;e++){c[a]=e;const t=(0,wh.tP)({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});p[e]=Bc({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return p}},xm={kernelName:r.Qvg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,segmentIds:i}=t,{numSegments:o}=s;(0,xc.H)(a,"unsortedSegmentSum");const u=[],l=[],c=a.shape.length-i.shape.length;let h=i;for(let e=0;e<c;++e){const t=Ip({inputs:{input:h},backend:n,attrs:{dim:e+1}});h=t,l.push(t)}for(let e=0;e<o;++e){const t=r.D5U.createScalarValue(e,"int32"),s=n.makeTensorInfo([],"int32",t),i=(0,dp.Dg)({inputs:{a:s,b:h},backend:n}),o=(0,Th.p)({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),c=(0,op.Jp)({inputs:{a:o,b:a},backend:n}),p=lp({inputs:{x:c},backend:n,attrs:{axis:0,keepDims:!1}});u.push(p),l.push(s),l.push(i),l.push(o),l.push(c),l.push(p)}const p=Qd({inputs:u,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},vm=[Vc,Hc.fC,jc,qc,zc.j4,Kc,Qc,Jc,Zc,eh,nh,rh,ih,ch,ph,gh,yh,bh,xh,Wc,vh,kh,Sh,Nh,Th.M,Ch.y2,Eh,Ah.z,Dh,Lh,Ph,Uh,Bh,Vh,Hh,Wh,jh,qh,Kh,Yh,Qh,Jh,ep,tp,np,sp,rp,ip,ap,$p,hp,Sc,pp,dp.Kx,wp,kp.SX,Sp,Np.Vu,_p,Op,Mp,Lp.Ao,Pp,Up,Wp,Hp,jp,Xp.Ce,qp.V,Nc.I,Kp,Fh,Qp,Zp,td,Cc,nd.zh,sd.m3,ad,id.xM,ud,hd,dd,gd,yd,bd,Id.eJ,Sd,Nd,Td,Cd,$d,kd,Ed,Ad,Dd.u0,Rd,Od,zd,op.f$,Bd.AF,Ud,Vd,Gd,jd.nP,Xd,Yd,Jd,Zd,nf,Dc,sf.Iz,af,Oh.O,uf,_c,Oc,Pc,lf,cf,hf,pf,df,ff,gf,yf.FY,xf,vf,Sf,Mc.BP,Tf,$f,Af,wh.C6,Ld,_f,Ff,Mf,zf,Pf,Uf,Wf,Vf,Hf.cz,Gf,jf.MS,qf,Yf,Jf,em,nm,Ep.GR,cp,rm,im,um,cm,Yc.b,hm,ym,bm,xm,Kd];for(const e of vm)(0,r.wCN)(e);var wm=n(6920);r.jTM,wm.ic,hl.gJ},3720:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function s(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=s;var r={},a={};function i(e,t){var n,s,i;return t?(i=0<=(e>>>=0)&&e<256)&&(s=a[e])?s:(n=u(e,(0|e)<0?-1:0,!0),i&&(a[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(s=r[e])?s:(n=u(e,e<0?-1:0,!1),i&&(r[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=d)return k}else{if(e<=-f)return I;if(e+1>=f)return w}return e<0?o(-e,t).neg():u(e%p|0,e/p|0,t)}function u(e,t,s){return new n(e,t,s)}n.fromInt=i,n.fromNumber=o,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var s;if((s=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===s)return c(e.substring(1),t,n).neg();for(var r=o(l(n,8)),a=g,i=0;i<e.length;i+=8){var u=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+u),n);if(u<8){var p=o(l(n,u));a=a.mul(p).add(o(h))}else a=(a=a.mul(r)).add(o(h))}return a.unsigned=t,a}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var p=4294967296,d=p*p,f=d/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var b=i(1);n.ONE=b;var x=i(1,!0);n.UONE=x;var v=i(-1);n.NEG_ONE=v;var w=u(-1,2147483647,!1);n.MAX_VALUE=w;var k=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=u(0,-2147483648,!1);n.MIN_VALUE=I;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),s=n.mul(t).sub(this);return n.toString(e)+s.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=o(l(e,6),this.unsigned),a=this,i="";;){var u=a.div(r),c=(a.sub(u.mul(r)).toInt()>>>0).toString(e);if((a=u).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1==(1&this.low)},S.isEven=function(){return 0==(1&this.low)},S.equals=function(e){return s(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(s(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(b)},S.neg=S.negate,S.add=function(e){s(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,a=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,c=0,p=0,d=0,f=0;return d+=(f+=a+(65535&e.low))>>>16,p+=(d+=r+l)>>>16,c+=(p+=n+o)>>>16,c+=t+i,u((d&=65535)<<16|(f&=65535),(c&=65535)<<16|(p&=65535),this.unsigned)},S.subtract=function(e){return s(e)||(e=h(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return g;if(s(e)||(e=h(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,a=this.low>>>16,i=65535&this.low,l=e.high>>>16,c=65535&e.high,p=e.low>>>16,d=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=i*d)>>>16,y+=(b+=a*d)>>>16,b&=65535,y+=(b+=i*p)>>>16,f+=(y+=r*d)>>>16,y&=65535,f+=(y+=a*p)>>>16,y&=65535,f+=(y+=i*c)>>>16,f+=n*d+r*p+a*c+i*l,u((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(s(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,r,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;a=y}else{if(this.eq(I))return e.eq(b)||e.eq(v)?I:e.eq(I)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:v:(r=this.sub(e.mul(n)),a=n.add(r.div(e)));if(e.eq(I))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=g}for(r=this;r.gte(e);){n=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:l(2,i-48),p=o(n),d=p.mul(e);d.isNegative()||d.gt(r);)d=(p=o(n-=c,this.unsigned)).mul(e);p.isZero()&&(p=b),a=a.add(p),r=r.sub(d)}return a},S.div=S.divide,S.modulo=function(e){return s(e)||(e=h(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return u(~this.low,~this.high,this.unsigned)},S.and=function(e){return s(e)||(e=h(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return s(e)||(e=h(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return s(e)||(e=h(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return s(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return s(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(s(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,s){return s?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},6377:(e,t,n)=>{var s=n(4832),r=n(8652),a=n(801),i=n(2030),o=n(3618),u=n(9049),l=n(1971);l.alea=s,l.xor128=r,l.xorwow=a,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},4832:function(e,t,n){var s;!function(e,r,a){function i(e){var t,n=this,s=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var s=.02519603282416938*(t+=e.charCodeAt(n));s-=t=s>>>0,t=(s*=t)>>>0,t+=4294967296*(s-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(e),n.s0<0&&(n.s0+=1),n.s1-=s(e),n.s1<0&&(n.s1+=1),n.s2-=s(e),n.s2<0&&(n.s2+=1),s=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),s=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.alea=u}(0,e=n.nmd(e),n.amdD)},9049:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,s=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-s|0,t.d=s<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var s=0;s<n.length+20;s++)t.b^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.tychei=u}(0,e=n.nmd(e),n.amdD)},8652:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.xor128=u}(0,e=n.nmd(e),n.amdD)},3618:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.w,r=t.X,a=t.i;return t.w=s=s+1640531527|0,n=r[a+34&127],e=r[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[a]=n^e,t.i=a,n+(s^s>>>16)|0},function(e,t){var n,s,r,a,i,o=[],u=128;for(t===(0|t)?(s=t,t=null):(t+="\0",s=0,u=Math.max(u,t.length)),r=0,a=-32;a<u;++a)t&&(s^=t.charCodeAt((a+32)%t.length)),0===a&&(i=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,a>=0&&(i=i+1640531527|0,r=0==(n=o[127&a]^=s+i)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,a=512;a>0;--a)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;e.w=i,e.X=o,e.i=r}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},2030:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.x,r=t.i;return e=s[r],n=(e^=e>>>7)^e<<24,n^=(e=s[r+1&7])^e>>>10,n^=(e=s[r+3&7])^e>>>3,n^=(e=s[r+4&7])^e<<7,e=s[r+7&7],n^=(e^=e<<13)^e<<9,s[r]=n,t.i=r+1&7,n},function(e,t){var n,s=[];if(t===(0|t))s[0]=t;else for(t=""+t,n=0;n<t.length;++n)s[7&n]=s[7&n]<<15^t.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],e.x=s,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),s==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},1971:(e,t,n)=>{var s;!function(r,a){var i,o=this,u=256,l=a.pow(u,6),c=a.pow(2,52),h=2*c,p=255;function d(e,t,n){var s=[],p=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(r)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(r)]}}():e,3),s),d=new f(s),x=function(){for(var e=d.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=d.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),r),(t.pass||n||function(e,t,n,s){return s&&(s.S&&m(s,d),e.state=function(){return m(d,{})}),n?(a.random=e,t):e})(x,p,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,s=this,r=0,a=s.i=s.j=0,i=s.S=[];for(n||(e=[n++]);r<u;)i[r]=r++;for(r=0;r<u;r++)i[r]=i[a=p&a+e[r%n]+(t=i[r])],i[a]=t;(s.g=function(e){for(var t,n=0,r=s.i,a=s.j,i=s.S;e--;)t=i[r=p&r+1],n=n*u+i[p&(i[r]=i[a=p&a+t])+(i[a]=t)];return s.i=r,s.j=a,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,s=[],r=typeof e;if(t&&"object"==r)for(n in e)try{s.push(g(e[n],t-1))}catch(e){}return s.length?s:"string"==r?e:e+"\0"}function y(e,t){for(var n,s=e+"",r=0;r<s.length;)t[p&r]=p&(n^=19*t[p&r])+s.charCodeAt(r++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=d,y(a.random(),r),e.exports){e.exports=d;try{i=n(5042)}catch(e){}}else void 0===(s=function(){return d}.call(t,n,t,e))||(e.exports=s)}([],Math)},8138:(e,t,n)=>{"use strict";n.a(e,(async e=>{var t=n(6064),s=n(7213);function r(e){if(0===e.length)return-1;for(var t=e[0],n=0,s=1;s<e.length;s++)e[s]>t&&(n=s,t=e[s]);return n}n(6920);const a={4:[2,0,1,3],10:[10,8,6,5,7,9],6:[12,14,16],5:[11,13,15],12:[11]},i={0:"downdog",1:"goddess",2:"plank",3:"tree",4:"warrior2"},o=document.getElementById("video_element"),u={modelType:t.cy.modelType.SINGLEPOSE_LIGHTNING},l=await t.cH(t.oV.MoveNet,u),c=await s.FBF("https://raw.githubusercontent.com/harshitdaga7/tfjs_model_yoga/main/model.json");let h=null;var p=document.getElementById("my_canvas"),d=p.getContext("2d"),f=!1;d.translate(p.width,0),d.scale(-1,1),l&&c&&(document.getElementById("loading").style.display="none",document.getElementById("loaded").style.display="initial");let m=document.getElementById("liveView"),g=document.getElementById("pose_select"),y=document.getElementById("help_text_head"),b=document.getElementById("help_text_content"),x=document.getElementById("help_img"),v=document.getElementById("start_button"),w=document.getElementById("stop_button"),k=document.getElementById("my_canvas"),I={0:{head:"downdog",content:"One of yoga's most widely recognized poses, Downward-Facing Dog Pose, called Adho Mukha Svanasana in Sanskrit, works to strengthen the core and improve circulation. This rejuvenating pose works to provide a delicious, full-body stretch.",img_path:"assets/img/downward_dog.gif"},1:{head:"goddess",content:"Utkata Konasana (Goddess Pose), also referred to as the Fierce Angle Pose, is an empowering, intermediate standing level pose. The Goddess Pose (Utkata Konasana) can also be part of yoga sequences intended for hips, the chest",img_path:"https://64.media.tumblr.com/72dff3ef8380328ac9bf3effac9eb55d/tumblr_o3j8h2su5B1rysr6eo1_400.gifv"},2:{head:"plank",content:"Nurture your love-hate relationship with Plank Pose. A beginner's best friend, it's the perfect precursor to more challenging arm balances.",img_path:"https://media2.giphy.com/media/2UqZvQq4p9DjTBDVRc/giphy.gif"},3:{head:"tree",content:"Tree Pose, called Vrksasana in Sanskrit, establishes strength and balance in the legs, and helps you feel centered, steady, and grounded.",img_path:"https://www.sheknows.com/wp-content/uploads/2018/08/gijnkznlgwzt0bcb1bgp.gif"},4:{head:"warrior II",content:"Named for a fierce warrior, an incarnation of Shiva, this version of Warrior Pose increases stamina.",img_path:"https://www.verywellfit.com/thmb/I1bZw-lS3uLWsoz3Us9QC1A19Mg=/1500x1000/filters:fill(FFDB5D,1)/Verywell-03-3567198-Warrior2-598a10d4d963ac0011fc9d72.gif"}};function S(){h&&h.stop(),m.style.display="none",g.options.selectedIndex=0,f=!1,y.innerHTML="Please Select Pose",b.innerHTML="Please select some pose from dropdown to start",x.style.display="initial",x.src="assets/img/yoga_logo.png",v.style.display="none",w.style.display="none",k.style.visibility="hidden"}g.addEventListener("change",(function(){let e=g.options.selectedIndex;h&&h.stop(),0==e?(m.style.display="none",y.innerHTML="Please Select Pose",b.innerHTML="Please select some pose from dropdown to start",x.style.display="initial",x.src="assets/img/yoga_logo.png",v.style.display="none",w.style.display="none",k.style.visibility="hidden",f=!1):e<=5?(m.style.display="none",y.innerHTML=I[e-1].head,b.innerHTML=I[e-1].content,x.style.display="initial",x.src=I[e-1].img_path,v.style.display="initial",w.style.display="none",k.style.visibility="hidden",f=!1):alert("Something is wrong")})),v.addEventListener("click",(async function(){let e=g.options.selectedIndex;0==e?alert("hacker alert, this is not possible"):(m.style.display="initial",v.style.display="none",x.style.display="none",w.style.display="initial",b.innerHTML=`Loading ${I[e-1].head} models and setting cam`,k.style.visibility="visible",f=!0,await async function(e){if(h=await s.aTG.webcam(o),!h)return alert("Webcam not acessible"),void S();if(!c||!l)return alert("could not load model, check your internet connection"),void S();for(b.innerHTML="Successfully loaded";f;){const t=await h.capture();d.save(),d.drawImage(o,0,0);const n=await l.estimatePoses(t);let u=null;if(n&&n[0]?u=n[0].keypoints:(y.innerHTML="ALERT , PLEASE BE IN FRONT OF CAMERA",b.innerHTML="Hey , I cannot see you, can you please show your face :)"),u){let t=[],n=0;for(let e in a){d.strokeStyle="#00ff04",d.lineWidth=2,d.beginPath(),d.moveTo(u[e].x,u[e].y);for(let t of a[e])u[t].score>=.4?(d.lineTo(u[t].x,u[t].y),n+=1):d.moveTo(u[t].x,u[t].y);d.stroke()}for(let e in u)t.push(u[e].y/480),t.push(u[e].x/640);if(t)if(n<10)y.innerHTML="Hey you are too close",b.innerHTML="I wont be able to detect any poses if you are too close to the camers :)";else{t=s.XeE([t]);let n=c.predict(t).arraySync()[0];if(n){let t=r(n);t!=e-1?(y.innerHTML=`WRONG POSE DO ${i[e-1]} NOT ${i[t]}`,b.innerHTML=`You are doing wrong pose, you are supposed to do ${i[e-1]} not ${i[t]}`):(y.innerHTML=`GOOD JOB PRACTICING ${i[t]} `,b.innerHTML="Great job, now you can keep practising or try other poses.")}}}t.dispose(),d.restore(),await s.glt()}}(e))})),w.addEventListener("click",S),e()}),1)},5410:()=>{},8628:()=>{},1601:()=>{},7792:()=>{},4977:()=>{},5042:()=>{}},i={};function o(e){var t=i[e];if(void 0!==t)return t.exports;var n=i[e]={id:e,loaded:!1,exports:{}};return a[e].call(n.exports,n,n.exports,o),n.loaded=!0,n.exports}o.amdD=function(){throw new Error("define cannot be used indirect")},o.amdO={},e="function"==typeof Symbol?Symbol("webpack then"):"__webpack_then__",t="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",n=e=>{e&&(e.forEach((e=>e.r--)),e.forEach((e=>e.r--?e.r++:e())))},s=e=>!--e.r&&e(),r=(e,t)=>e?e.push(t):s(t),o.a=(a,i,o)=>{var u,l,c,h=o&&[],p=a.exports,d=!0,f=!1,m=(t,n,s)=>{f||(f=!0,n.r+=t.length,t.map(((t,r)=>t[e](n,s))),f=!1)},g=new Promise(((e,t)=>{c=t,l=()=>(e(p),n(h),h=0)}));g[t]=p,g[e]=(e,t)=>{if(d)return s(e);u&&m(u,e,t),r(h,e),g.catch(t)},a.exports=g,i((a=>{if(!a)return l();var i,o;u=(a=>a.map((a=>{if(null!==a&&"object"==typeof a){if(a[e])return a;if(a.then){var i=[];a.then((e=>{o[t]=e,n(i),i=0}));var o={};return o[e]=(e,t)=>(r(i,e),a.catch(t)),o}}var u={};return u[e]=e=>s(e),u[t]=a,u})))(a);var c=new Promise(((e,n)=>{(i=()=>e(o=u.map((e=>e[t])))).r=0,m(u,i,n)}));return i.r?c:o})).then(l,c),d=!1},o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},o.d=(e,t)=>{for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),o(8138)})();